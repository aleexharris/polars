var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","","","gt_eq","","","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","","","lt_eq","","","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","count_rows_from_slice","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","","gt_eq","","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","","lt_eq","","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[859,"polars::chunked_array::arithmetic"],[887,"polars::chunked_array::builder"],[1148,"polars::chunked_array::builder::list"],[1165,"polars::chunked_array::cast"],[1194,"polars::chunked_array::collect"],[1208,"polars::chunked_array::float"],[1210,"polars::chunked_array::from_iterator_par"],[1214,"polars::chunked_array::iterator"],[1269,"polars::chunked_array::iterator::par"],[1271,"polars::chunked_array::metadata"],[1555,"polars::chunked_array::object"],[1632,"polars::chunked_array::object::builder"],[1655,"polars::chunked_array::object::registry"],[1683,"polars::chunked_array::ops"],[1889,"polars::chunked_array::ops::arity"],[1925,"polars::chunked_array::ops::float_sorted_arg_max"],[1927,"polars::chunked_array::ops::gather"],[1930,"polars::chunked_array::ops::search_sorted"],[1960,"polars::chunked_array::ops::sort"],[1967,"polars::chunked_array::ops::sort::arg_bottom_k"],[1968,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1976,"polars::chunked_array::ops::sort::options"],[1989,"polars::chunked_array::temporal"],[1997,"polars::chunked_array::temporal::conversion"],[2000,"polars::datatypes"],[3463,"polars::datatypes::categorical"],[3480,"polars::datatypes::categorical::revmap"],[3486,"polars::datatypes::categorical::string_cache"],[3505,"polars::datatypes::enum_"],[3523,"polars::docs"],[3525,"polars::error"],[3617,"polars::error::PolarsError"],[3621,"polars::error::constants"],[3624,"polars::frame"],[3900,"polars::frame::column"],[4116,"polars::frame::explode"],[4145,"polars::frame::group_by"],[4384,"polars::frame::group_by::GroupByMethod"],[4385,"polars::frame::group_by::GroupsProxy"],[4387,"polars::frame::group_by::aggregations"],[4400,"polars::frame::group_by::expr"],[4403,"polars::frame::row"],[4513,"polars::functions"],[4515,"polars::prelude"],[9789,"polars::prelude::AggExpr"],[9796,"polars::prelude::BooleanFunction"],[9799,"polars::prelude::DslPlan"],[9850,"polars::prelude::Expr"],[9885,"polars::prelude::FunctionExpr"],[9907,"polars::prelude::GroupByMethod"],[9908,"polars::prelude::GroupsProxy"],[9910,"polars::prelude::LiteralValue"],[9913,"polars::prelude::PolarsError"],[9917,"polars::prelude::StringFunction"],[9931,"polars::prelude::TemporalFunction"],[9933,"polars::prelude::_internal"],[9954,"polars::prelude::aggregations"],[9967,"polars::prelude::arity"],[10003,"polars::prelude::array"],[10022,"polars::prelude::binary"],[10039,"polars::prelude::buffer"],[10113,"polars::prelude::buffer::Buffer"],[10116,"polars::prelude::cat"],[10117,"polars::prelude::chunkedarray"],[10183,"polars::prelude::chunkedarray::string"],[10222,"polars::prelude::chunkedarray::string::infer"],[10253,"polars::prelude::cloud"],[10303,"polars::prelude::cloud::options"],[10312,"polars::prelude::compression"],[10330,"polars::prelude::datatypes"],[10607,"polars::prelude::datatypes::categorical"],[10624,"polars::prelude::datatypes::categorical::revmap"],[10630,"polars::prelude::datatypes::categorical::string_cache"],[10634,"polars::prelude::datatypes::enum_"],[10635,"polars::prelude::datetime"],[10638,"polars::prelude::default_arrays"],[10644,"polars::prelude::dt"],[10696,"polars::prelude::expr"],[10699,"polars::prelude::fixed_size_list"],[10719,"polars::prelude::float_sorted_arg_max"],[10721,"polars::prelude::function_expr"],[10894,"polars::prelude::function_expr::BooleanFunction"],[10897,"polars::prelude::function_expr::FunctionExpr"],[10919,"polars::prelude::function_expr::StringFunction"],[10933,"polars::prelude::function_expr::TemporalFunction"],[10935,"polars::prelude::function_expr::cat"],[10937,"polars::prelude::function_expr::pow"],[10941,"polars::prelude::function_expr::rolling"],[10972,"polars::prelude::function_expr::rolling_by"],[11003,"polars::prelude::gather"],[11006,"polars::prelude::interpolate"],[11010,"polars::prelude::interpolate_by"],[11011,"polars::prelude::mode"],[11012,"polars::prelude::nan_propagating_aggregate"],[11017,"polars::prelude::null"],[11048,"polars::prelude::schema_inference"],[11075,"polars::prelude::search_sorted"],[11081,"polars::prelude::series"],[11103,"polars::prelude::sort"],[11110,"polars::prelude::sort::arg_bottom_k"],[11111,"polars::prelude::sort::arg_sort_multiple"],[11119,"polars::prelude::sort::options"],[11132,"polars::prelude::strings"],[11186,"polars::prelude::udf"],[11192,"polars::prelude::utf8"],[11196,"polars::series"],[11636,"polars::series::amortized_iter"],[11660,"polars::series::arithmetic"],[11681,"polars::series::arithmetic::checked"],[11687,"polars::series::ops"],[11714,"dyn_clone::sealed"],[11715,"polars_core::datatypes"],[11716,"polars_core::chunked_array"],[11717,"polars_error"],[11718,"core::result"],[11719,"polars_core::series"],[11720,"core::ops::function"],[11721,"num_traits"],[11722,"num_traits::cast"],[11723,"polars_core::series::arithmetic::borrowed"],[11724,"polars_core::frame::group_by::proxy"],[11725,"polars_core::chunked_array::object"],[11726,"core::option"],[11727,"polars_arrow::array"],[11728,"alloc::boxed"],[11729,"core::iter::traits::iterator"],[11730,"polars_core::chunked_array::list::iterator"],[11731,"polars_utils::pl_str"],[11732,"alloc::borrow"],[11733,"core::marker"],[11734,"polars_core::series::amortized_iter"],[11735,"alloc::string"],[11736,"polars_core::datatypes::dtype"],[11737,"polars_arrow::array::binview::view"],[11738,"polars_core::chunked_array::ops::sort::options"],[11739,"polars_core::frame::column"],[11740,"polars_core::chunked_array::metadata::md_trait"],[11741,"polars_core::chunked_array::cast"],[11742,"polars_core::series::arithmetic::borrowed::checked"],[11743,"core::slice::iter"],[11744,"core::iter::adapters::map"],[11745,"alloc::vec"],[11746,"compact_str"],[11747,"polars_core::chunked_array::metadata"],[11748,"core::iter::traits::double_ended"],[11749,"polars_arrow::offset"],[11750,"core::fmt"],[11751,"core::iter::traits::collect"],[11752,"core::borrow"],[11753,"polars_core::chunked_array::from_iterator"],[11754,"core::convert"],[11755,"polars_arrow::bitmap::immutable"],[11756,"rayon::iter"],[11757,"polars_arrow::pushable"],[11758,"core::iter::traits::exact_size"],[11759,"core::clone"],[11760,"polars_arrow::trusted_len"],[11761,"polars_core::datatypes::any_value"],[11762,"polars_arrow::array::binary"],[11763,"std::sync::rwlock"],[11764,"polars_core::chunked_array::logical"],[11765,"polars_core::datatypes::time_unit"],[11766,"polars_core::series::series_trait"],[11767,"polars_core::chunked_array::iterator"],[11768,"polars_core::scalar"],[11769,"polars_core::chunked_array::metadata::guard"],[11770,"polars_core::chunked_array::metadata::interior_mutable"],[11771,"alloc::sync"],[11772,"core::ops::range"],[11773,"polars_core::datatypes::field"],[11774,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11775,"polars_core::chunked_array::ops::rolling_window"],[11776,"polars_ops::chunked_array::scatter"],[11777,"polars_utils::index"],[11778,"ahash::random_state"],[11779,"polars_utils::hashing"],[11780,"ndarray"],[11781,"ndarray::dimension::dim"],[11782,"ndarray::data_repr"],[11783,"either"],[11784,"core::any"],[11785,"polars_core::frame"],[11786,"polars_core::chunked_array::arithmetic::numeric"],[11787,"polars_core::chunked_array::builder::list::anonymous"],[11788,"polars_core::chunked_array::builder::list::boolean"],[11789,"polars_core::chunked_array::builder::list::primitive"],[11790,"polars_core::chunked_array::builder::list"],[11791,"polars_core::chunked_array::builder"],[11792,"polars_core::chunked_array::builder::list::binary"],[11793,"polars_core::chunked_array::builder::list::null"],[11794,"polars_core::chunked_array::builder::string"],[11795,"polars_arrow::array::binview"],[11796,"polars_core::chunked_array::builder::boolean"],[11797,"polars_core::chunked_array::builder::null"],[11798,"polars_core::chunked_array::builder::primitive"],[11799,"polars_core::series::implementations::null"],[11800,"core::hash"],[11801,"polars_core::chunked_array::collect"],[11802,"polars_core::chunked_array::float"],[11803,"polars_core::chunked_array::from_iterator_par"],[11804,"polars_arrow::array::boolean"],[11805,"polars_arrow::array::fixed_size_list"],[11806,"polars_core::chunked_array::metadata::env"],[11807,"polars_core::chunked_array::metadata::collect"],[11808,"bitflags::iter"],[11809,"std::fs"],[11810,"std::sync::mutex"],[11811,"polars_arrow::datatypes"],[11812,"polars_arrow::bitmap::utils::iterator"],[11813,"polars_arrow::bitmap::utils::zip_validity"],[11814,"polars_core::chunked_array::object::builder"],[11815,"polars_core::chunked_array::object::registry"],[11816,"polars_core::chunked_array::ops"],[11817,"polars_arrow::legacy::array::slice"],[11818,"polars_core::chunked_array::ops::arity"],[11819,"polars_arrow::array::static_array"],[11820,"core::error"],[11821,"polars_arrow::array::primitive"],[11822,"polars_core::chunked_array::ops::search_sorted"],[11823,"polars_core::utils"],[11824,"polars_row::row"],[11825,"chrono::naive::datetime"],[11826,"chrono_tz::timezones"],[11827,"chrono::naive::time"],[11828,"polars_core::chunked_array::logical::categorical"],[11829,"polars_core::chunked_array::logical::categorical::builder"],[11830,"polars_arrow::array::static_array_collect"],[11831,"std::path"],[11832,"std::ffi::os_str"],[11833,"bytemuck::zeroable"],[11834,"polars_core::chunked_array::logical::categorical::revmap"],[11835,"polars_core::chunked_array::logical::categorical::merge"],[11836,"core::cmp"],[11837,"polars_arrow::types"],[11838,"polars_arrow::datatypes::physical_type"],[11839,"chrono::time_delta"],[11840,"chrono::naive::date"],[11841,"polars_core::datatypes::into_scalar"],[11842,"polars_plan::dsl::expr"],[11843,"polars_core::chunked_array::logical::categorical::string_cache"],[11844,"polars_core::chunked_array::logical::enum_"],[11845,"polars_error::warning"],[11846,"alloc::collections"],[11847,"polars_parquet::parquet::error"],[11848,"std::io::error"],[11849,"regex::error"],[11850,"simdutf8::basic"],[11851,"planus::errors"],[11852,"polars_schema::schema"],[11853,"hashbrown::set"],[11854,"polars_core::frame::row"],[11855,"polars_core::frame::group_by"],[11856,"polars_time::group_by::dynamic"],[11857,"polars_lazy::frame"],[11858,"polars_core::series::from"],[11859,"polars_core::chunked_array::ndarray"],[11860,"polars_arrow::array::struct_"],[11861,"polars_arrow::record_batch"],[11862,"polars_time::windows::duration"],[11863,"polars_core::frame::explode"],[11864,"polars_utils::idx_vec"],[11865,"rayon::iter::plumbing"],[11866,"polars_plan::plans::aexpr"],[11867,"polars_core::frame::group_by::into_groups"],[11868,"core::iter::adapters::copied"],[11869,"core::iter::adapters::zip"],[11870,"polars_arrow::legacy::kernels::rolling"],[11871,"polars_utils::float"],[11872,"polars_arrow::types::native"],[11873,"polars_core::frame::group_by::aggregations::agg_list"],[11874,"polars_core::frame::group_by::aggregations"],[11875,"polars_core::frame::group_by::expr"],[11876,"polars_core::frame::row::av_buffer"],[11877,"polars_utils::arena"],[11878,"polars_plan::plans::ir"],[11879,"polars_ops::frame::join::hash_join"],[11880,"polars_ops::frame::join::args"],[11881,"polars_plan::dsl::struct_"],[11882,"polars_ops::chunked_array::gather::chunked"],[11883,"polars_ops::frame"],[11884,"polars_io::csv::read::reader"],[11885,"polars_io::predicates"],[11886,"polars_io::mmap"],[11887,"polars_plan::dsl::selector"],[11888,"polars_plan::frame::opt_state"],[11889,"core::alloc"],[11890,"polars_plan::plans::anonymous_scan"],[11891,"polars_lazy::scan::anonymous_scan"],[11892,"polars_plan::dsl::expr_dyn_fn"],[11893,"polars_plan::plans::visitor"],[11894,"polars_plan::dsl::function_expr"],[11895,"polars_ops::series::ops::arg_min_max"],[11896,"polars_plan::dsl::array"],[11897,"polars_plan::dsl::list"],[11898,"polars_plan::dsl::function_expr::schema"],[11899,"polars_io::ipc::ipc_stream"],[11900,"std::io"],[11901,"polars_ops::chunked_array::binary"],[11902,"polars_time::chunkedarray::string"],[11903,"std::os::fd::owned"],[11904,"polars_ops::chunked_array::list"],[11905,"std::os::fd::raw"],[11906,"polars_ops::series::ops"],[11907,"polars_ops::chunked_array::strings"],[11908,"core::mem::maybe_uninit"],[11909,"polars_ops::chunked_array::strings::namespace"],[11910,"polars_io::csv::read::read_impl::batched"],[11911,"polars_io::csv::write::writer"],[11912,"polars_io::ipc::write"],[11913,"polars_io::parquet::read::reader"],[11914,"polars_io::parquet::read::read_impl"],[11915,"polars_io::parquet::write::writer"],[11916,"polars_io::parquet::write::batched_writer"],[11917,"polars_plan::dsl::binary"],[11918,"polars_plan::dsl::udf"],[11919,"polars_lazy::frame::exitable"],[11920,"hashbrown::map"],[11921,"polars_plan::dsl::cat"],[11922,"polars_ops::series::ops::round"],[11923,"polars_time::series"],[11924,"polars_lazy::scan::csv"],[11925,"polars_lazy::scan::ipc"],[11926,"polars_lazy::scan::ndjson"],[11927,"polars_lazy::scan::parquet"],[11928,"polars_time::chunkedarray::rolling_window"],[11929,"polars_time::windows::bounds"],[11930,"polars_time::windows::group_by"],[11931,"polars_time::windows::window"],[11932,"polars_io::csv::read::options"],[11933,"polars_io::csv::write::options"],[11934,"polars_io::ipc::ipc_file"],[11935,"polars_ops::frame::join::asof"],[11936,"polars_io::json"],[11937,"polars_ops::series::ops::interpolation::interpolate"],[11938,"polars_ops::series::ops::is_between"],[11939,"polars_io::parquet::read::options"],[11940,"polars_ops::series::ops::rank"],[11941,"polars_io::parquet::write::options"],[11942,"polars_plan::plans"],[11943,"polars_plan::dsl::arity"],[11944,"polars_plan::dsl::function_expr::boolean"],[11945,"polars_plan::dsl::function_expr::cat"],[11946,"polars_plan::dsl::function_expr::datetime"],[11947,"polars_plan::dsl::function_expr::pow"],[11948,"polars_plan::dsl::function_expr::strings"],[11949,"polars_plan::dsl::function_expr::struct_"],[11950,"polars_parquet::arrow::write"],[11951,"polars_plan::dsl::functions::temporal"],[11952,"polars_plan::dsl::options"],[11953,"polars_parquet::parquet::metadata::file_metadata"],[11954,"polars_plan::plans::lit"],[11955,"polars_plan::plans::options"],[11956,"polars_arrow::legacy::kernels::time"],[11957,"polars_lazy::scan::file_list_reader"],[11958,"polars_io::cloud::options"],[11959,"polars_parquet::parquet::metadata::column_order"],[11960,"polars_ops::chunked_array::binary::namespace"],[11961,"polars_io::ndjson::core"],[11962,"polars_ops::frame::join::cross_join"],[11963,"polars_lazy::dsl::eval"],[11964,"polars_time::chunkedarray::date"],[11965,"polars_time::chunkedarray::datetime"],[11966,"polars_time::chunkedarray::duration"],[11967,"core::ffi::c_str"],[11968,"core::default"],[11969,"polars_parquet::parquet::metadata::column_chunk_metadata"],[11970,"polars_core::series::ops"],[11971,"polars_plan::dsl::dt"],[11972,"polars_ops::series::ops::various"],[11973,"polars_arrow::scalar"],[11974,"polars_lazy::dsl::list"],[11975,"crossterm::command"],[11976,"polars_io::shared"],[11977,"polars_plan::plans::apply"],[11978,"polars_plan::dsl::function_expr::list"],[11979,"polars_plan::dsl::function_expr::binary"],[11980,"polars_plan::dsl::function_expr::range"],[11981,"polars_plan::dsl::function_expr::array"],[11982,"polars_parquet::arrow::read::statistics"],[11983,"alloc::ffi::c_str"],[11984,"polars_arrow::array::growable::structure"],[11985,"polars_arrow::array::struct_::mutable"],[11986,"polars_core::schema"],[11987,"polars_arrow::legacy::array::default_arrays"],[11988,"polars_arrow::buffer::immutable"],[11989,"polars_arrow::array::list"],[11990,"polars_core::named_from"],[11991,"polars_ops::frame::join"],[11992,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11993,"polars_time::chunkedarray::time"],[11994,"core::num::nonzero"],[11995,"polars_arrow::array::struct_::iterator"],[11996,"polars_ops::frame::join::asof::groups"],[11997,"polars_ops::chunked_array::list::namespace"],[11998,"polars_plan::dsl::name"],[11999,"parquet_format_safe::parquet_format"],[12000,"polars_core::utils::supertype"],[12001,"polars_io::options"],[12002,"polars_core::chunked_array::ops::aggregate"],[12003,"polars_core::chunked_array::ops::aggregate::quantile"],[12004,"polars_arrow::legacy::index"],[12005,"polars_plan::plans::ir::scan_sources"],[12006,"polars_ops::chunked_array::strings::split"],[12007,"core::pin"],[12008,"core::io::borrowed_buf"],[12009,"parquet_format_safe::thrift::varint::decode"],[12010,"polars_time::chunkedarray::rolling_window::dispatch"],[12011,"polars_time::round"],[12012,"polars_parquet::parquet::metadata::schema_descriptor"],[12013,"polars_core::chunked_array::ops::aggregate::var"],[12014,"polars_plan::dsl::string"],[12015,"polars_ops::series::ops::to_dummies"],[12016,"polars_time::truncate"],[12017,"polars_io::csv::read::schema_inference"],[12018,"polars_time::upsample"],[12019,"polars_core::hashing::vector_hasher"],[12020,"alloc::collections::btree::map"],[12021,"polars_parquet::parquet::metadata::row_metadata"],[12022,"polars_utils::mmap::private"],[12023,"polars_parquet::arrow::read::deserialize::utils::filter"],[12024,"polars_ops::chunked_array::array::namespace"],[12025,"polars_ops::chunked_array::array"],[12026,"polars_io::csv::read::buffer"],[12027,"polars_time::chunkedarray::string::patterns"],[12028,"polars_time::chunkedarray::string::infer"],[12029,"polars_io::utils::compression"],[12030,"polars_arrow::legacy::array::fixed_size_list"],[12031,"polars_plan::dsl::function_expr::rolling"],[12032,"polars_plan::dsl::function_expr::rolling_by"],[12033,"polars_arrow::legacy::array::null"],[12034,"polars_arrow::bitmap::mutable"],[12035,"polars_arrow::array::utf8"],[12036,"polars_core::series::iterator"],[12037,"alloc::rc"],[12038,"polars_core"],[12039,"polars_core::chunked_array::struct_"],[12040,"polars_core::chunked_array::iterator::par"],[12041,"polars_core::chunked_array::object::extension"],[12042,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12043,"polars_core::chunked_array::ops::gather"],[12044,"polars_core::chunked_array::ops::sort"],[12045,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12046,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[12047,"polars_core::chunked_array::temporal"],[12048,"polars_core::chunked_array::temporal::conversion"],[12049,"polars_core::chunked_array::temporal::time"],[12050,"polars_core::chunked_array::logical::date"],[12051,"polars_core::chunked_array::logical::datetime"],[12052,"polars_core::chunked_array::logical::decimal"],[12053,"polars_core::chunked_array::logical::duration"],[12054,"polars_core::datatypes::aliases"],[12055,"polars_utils::aliases"],[12056,"polars_core::chunked_array::logical::time"],[12057,"polars_error::constants"],[12058,"polars_core::functions"],[12059,"polars_core::frame::horizontal"],[12060,"polars_arrow::datatypes::schema"],[12061,"polars_io::utils::other"],[12062,"polars_io::parquet::metadata"],[12063,"polars_arrow::legacy::prelude"],[12064,"polars_arrow::legacy::array"],[12065,"polars_io::path_utils"],[12066,"polars_ops::series::ops::rolling"],[12067,"polars_parquet::parquet::write"],[12068,"polars_io::utils"],[12069,"polars_ops::frame::join::general"],[12070,"polars_io::parquet::read"],[12071,"polars_ops::series::ops::abs"],[12072,"polars_plan::dsl::functions::selectors"],[12073,"polars_plan::dsl::functions::horizontal"],[12074,"polars_plan::dsl::functions::arity"],[12075,"polars_plan::dsl"],[12076,"polars_plan::dsl::functions::range"],[12077,"polars_plan::dsl::functions::index"],[12078,"polars_ops::chunked_array"],[12079,"polars_plan::dsl::functions::coerce"],[12080,"polars_plan::dsl::functions::syntactic_sugar"],[12081,"polars_time::base_utc_offset"],[12082,"polars_io::csv::read"],[12083,"polars_time"],[12084,"polars_ops::series::ops::clip"],[12085,"polars_io"],[12086,"polars_ops::series::ops::horizontal"],[12087,"polars_lazy::dsl::functions"],[12088,"polars_plan::dsl::functions::concat"],[12089,"polars_ops::series::ops::index"],[12090,"polars_io::csv::read::parser"],[12091,"polars_ops::series::ops::cum_agg"],[12092,"polars_ops::series::ops::diff"],[12093,"polars_time::dst_offset"],[12094,"polars_ops::series::ops::floor_divide"],[12095,"polars_ops::chunked_array::strings::concat"],[12096,"polars_ops::series::ops::duration"],[12097,"polars_ops::chunked_array::datetime::replace_time_zone"],[12098,"polars_time::date_range"],[12099,"polars_ops::series::ops::interpolation"],[12100,"polars_ops::series::ops::interpolation::interpolate_by"],[12101,"polars_ops::series::ops::is_first_distinct"],[12102,"polars_ops::series::ops::is_in"],[12103,"polars_ops::series::ops::is_last_distinct"],[12104,"polars_io::parquet::read::utils"],[12105,"polars_ops::series::ops::negate"],[12106,"polars_ops::series::ops::not"],[12107,"polars_ops::series::ops::int_range"],[12108,"polars_plan::dsl::functions::repeat"],[12109,"polars_ops::chunked_array::repeat_by"],[12110,"polars_ops::series::ops::replace"],[12111,"polars_ops::chunked_array::strings::strip"],[12112,"polars_io::partition"],[12113,"polars_io::parquet::read::predicates"],[12114,"polars_io::parquet::read::mmap"],[12115,"polars_time::chunkedarray"],[12116,"polars_io::cloud"],[12117,"polars_ops::chunked_array::mode"],[12118,"polars_ops::chunked_array::nan_propagating_aggregate"],[12119,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000`0000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fn000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhGn0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541Fl777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cf2222222222`AGn000000000000000000000````AH`00AHb0000000```00`0`10000AIb```````````````````````````0AHh``AId22222DKl3``0``3F`Fh5AHd5AHj066AHl0AHn`549549AI`0065:65:65:6565:65:6565:65:88666555AIf0`AIhAIj`98=9988=`AIlAIn`AJ`0>><;AIb=<0=<0AJbAJdAId0F`FhAHd0AJf1132?32AJh5543>1AJj0AJlAJnAK`0`0AKbAKdAKf0`AHl0AKh;AKjAKlAKnF`FhAIb210210210AHn7321323232232232`AL``ALjALfALb`````````````````````````````````````ALn00`0`000000000000000000`00000`````>>````````````87878787>>```````````AOn`JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``Dd04341```11`51431``431```AOd`3DKnDL```````8``764``764``764``764``4`555444AOj875``3``5B@dLd1010Al;:8`;:`;``939```````````BAb`3`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALd0;09L`69AMjAOlJjAOnElB@`Oj;NdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dAMjJj01L`1AhCbLhNdO`FbNnOfNhKlLbEfEhBdBhAnAMlAMj110AMn0AN`0ElJjL`0Dd0003OjANfALd3433:BBb5DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdAMlBBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dElAOd`AOhJj3L`0200000AMj`LhNdO`FbNnOfNhKlLbEfEhDd=AOjAOd>AOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdL`AOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdL`AOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdOjB@h0002El00`L`4B@jAOjAOdJjAOn6;99AMlBBb77DLbDjAhjCbLhCd=<;AMjAOl<;ElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdAMlBBbL`0DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dL`AhCbLhNdO`FbNnOfNhKlLbEfEhAMlDd1BBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dAOhL`0000AMjJjOj0Dd0`0AOj3AOnEl0B@`5Ld<;7888888555777333222111666000<<<;;;9AOdAOfAMlB@j9983AOl<<8776;55AGdB@d<<<<<4BBbL`00DLbDjAhjCbLhCd<AOjAOdAMj>Jj00000AOnEl000B@`Oj00Ld0NdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGd00B@dElAMjL`01Dd00000001111110002ALd00030AOd33333AOh544444051DlAhjCbLhCdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAOdAMjElJjBAnALd444444Dd3AOn5OjLdAGdB@d8L`09:6AMlBBb2DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dEl2DdAMlBBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dL`AMjBBbBB`333332JjDdEl00200055020AOd31110131931313111131111319ALd702173777777``2AOn8`B@j::9:::AhCbLhNdO`FbNnOfNhKlLbEfEhAMj0Oj0L`0DKnDL`AMl33333333B@j54B@`BBb8888888166DdJjLd9;96AhCbLhNdO`FbNnOfNhKlLbEfEhL`0AOd111Oj2222BBbAMj0Jj55505AhCbLhNdO`FbNnOfNhKlLbEfEhL`00?ElOjLd20AMj00AGdDd6AOjAOd4AOlJjAOn:B@`:9NdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dEl2L`Dd111Jj3Ld133AMn0AN`0B@h00045AMlBBb8DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDdAMlBBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dJjElDd21Ld1AMlBBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@d1AMj0ALd10El1DdAMlBBbL`DLbDjAhjCbLhCdB@jAOjAOdAMjAOlJjAOnElB@`OjLdNdO`FbNnOfNhKlLbEfEhKnLnBdBhFdAnLjLfLlB@bAGdB@dDKnDL`ALdDd00Jj`````AOd`AOj10``AOf`````2121``BBn0000`00`0000000`0`BC`0000000000000000``BCdn000DLd`112101```11111112BCb302302`223002302302`300223002222222`302302`0``````02302302023023022DLfDLh10```BDj`0BDh11``0``01AAn0000000000000000BEnBF`3421034222342342342`224210342103421034222222222242224442`2222223422103422222222222222222`222242222222222222103422103421022222222222222222222210222222222222222`2222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Ff`00BGd11111111111111111110110111111111111010101010111010101111101011111101101111111111111110111001111111111101111111010BDf21222122222222122222222221212122222222222222212222222222221222222221222212121212122222222212222`BGh000000000000000000000000000`BGn0``0``````BHfC``2`22222222210`222BGj1BE`40`1023BI`BHbBH`453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BHj4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DLjDLl0``````````BIhBIj0`BIl0BInBJ```1011110101010101010`10011010101010BDn211210210210210210`02102102100000022110`2102102121021```210210210210210``BMdBKnBBd`BO`1CGnCDb01`CDl`CAb5```3ALnAOnBDj6```::`CIjJjElDl``>``````````CDj```?```CFdCFb`CEfAIbBMdCHfCHb``CJ`;:AGd``BBd5`<``=``152=<1`````CCbCEn``CFj`BFlBLd000CGb69`;JjEl``````1`CHd><```````````````````````````````````>``>CDd`:`nCFd<`?``1BMdCHf003CHbBO`BGn3CDj```````555553`````<CCdCCf`DC`6CJ`?>AGd0``1`8JjEl``:`1`:31022``CFb`3=CGbCAb??`CGlBBdn`CHb:879`````BLdDA`CHf;:;77DLd6`BKn7CIh```;BMdAGd55577````:CHh0`````2``2>;6BO`BGnBDj44`CJ`AOn61JjEl8``3108``9CAbBFlCEfAIb=CCf```CDjAHhBBd``0BMdCHd`CH``AOd``CGb`BGn``````CIh>>CFj`33DlDKnDL`CHf0A@`CHb``n:DC`BHfC``````BO`=`BBd````CDj`CJ`AOn``1JjElAGd``4210``4210``4210``BKnBMd0`2```````=````````CGn0`000`0?0Dl11100CHbAIdCGbCIh`````CDd``DHbCHh``1```2BBdCEh`=`=``=BO`BGnBDjDA``````DLnCCbCCdCDjCEnALn`;CHf0AOj`CElA@`CIjJjElAGd````BMd````````BBd`AOd`CAb0`CCn94<11CFj0CDn07CGbCFbBO`AIbBGn1;210;20CHbB@dLdA@`332176545?<3?<CCf4CD`CHh?BLd`:8CGlCDb``::987AlCEfCEl9CDlBMd`1`n``2CCbDKlCEnCFdBDjCGnCAb0BBd`CJ`DA`JjElAGdCJj?``````32`3`DLdAIbCDn0``:CFbCHb:ABjnBKlCIf``Dl`BLd0```````AOj2```````CAb```````````BAb`BMd`CFdCHh`BO`BGnBIb``?`9DA`CJjCFb88CJ`9```BBd`8:CHf;;CHb<`1<DLnCCbCCdCDjCEnALnCIf`BMd0```````BKn911``CFdBLd0n01CCf`FfABjCGb`````44```CHbB@d2`BBd````CJ`6``````<8<<<CD`552CHfBHfC```CFjDKl:77```444`CHd`5``BO`BGnAOn::JjEl`n``BMd```3`<<<<<<`32AGd``12``4`BKnBBdCHh:94CCfBLdCHf`7``4`2CHbCJ`<;88``1```822`2911111111ABjBAbCAb`473?>;``3?>;``3?>;``3?>;````CFjCGb=`>`El>```?8`CCn??BMdALd0BO`BGnBIb``CCf>>`BBd`01``CHhCHb=0CEhAIbDl:?`CAjBFbBLbBLlCBfCBhCBjCBlCBnBEbBFfCC`BGbCCbCCdCCfCChAB`A@hCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJj`BFbBJj0``BJn:AHdBK`BKb000BKd6BKf`BBdBKl1BKnBGb0BL`1BLb5`5`5BLd`N`BLhCIdBLj00CHl;BFb<`<ACdACf1010AHh:?`?AHj0BBd0`22`BFnBMfBMhBMj42104AHl5BK``1AHn71`BMlCId`9AMn990AN`0::`BMnBLj7BNb=8=MjBNdBNf000N`BNl11BO`2ANfBObBK`ALdBOd`877`BBdBOh0`CDfBKfBOlC@bC@fC@j4`7`BKnBLd<00<00010<0CAnBMhAM`BLhC@nBOj<CAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`0CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjCAnBMhAM`BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjBFb8BK``ACb2CBhCBlCIbCAdCAf`BNbCAh2CAj`9:AI`BBdAOh=2201`1N`2CB`3A@bCBbBFnCBdBK`10CCj`11`9`9`9;BFbBLbBLlCBfCBhCBjCBlCBnBEbBFfCC`BGbCCbCCdCCfCChAB`A@hCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJjBK`CAjBFbBLbBLlCBfCBhCBjCBlCBnBEbBFfCC`BGbCCbCCdCCfCChAB`A@hCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJjCAjBFbBLbBLlCBfCBhCBjCBlCBnBEbBFfCC`BGbCCbCCdCCfCChAB`A@hCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJjCBnBEbBFf`CJlCBfCBjCBhCBlBGbN``BLhCDdBJl``BFb`B@h000ADnAE`100033`CIn0CCjBKdCCl<;BLd`CEdCFhCGb`BOh`CJlCBf````BMhCKd4BMj9155``BFbCKfBBd88```BJjCIn4CKh0`3``3`3`3``3CKj>`CDh```0`````CKlCKnCBbCHlCL`BGbCHn1CI`CJfCClN`0BFbBLlCBhCBlCLbBEbBFfCCfCCj:CCnBJlCDdCDfCDhCDlCDnCEbCEdCEfCEhCEjCEnCFdCFfCFhCFjCGbBBdBM`00CHjCHlCHnCIbCIdCIfCIhCIlBLdN`000CJbCJdA@bBFlBAdA@```CAnBMhAM`0BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`0CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`0CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjCAnBMhAM`0BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjCFfF`FhCGbBFb0001N``BE``CJd`BMjBBdBLd7CLjCHjBKl4BL`5999CAnBMhAM`BLhC@nBOjBKfCAj0BFb0BLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`0CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjBBdBFb01BK```2AOh1;:9Oj:``CCj`CHjBLdN`0CClCKd0```CMd2CBnBEbBFfBGbCCbCCdCCfAB`>:CCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BO`BBd0CGlCAbBM`0CGnCH`CHbCHdCHfCHhCLjBMdCHjCI`CIbCIdCIfCIhCIjCIlBKnCJ`N`00CJbCJdA@bBFlBFn0MjBAdA@`BIbCJfCJhCJjBBdAId0BEb00BFf00BGb00CCb00CCd00CCf00AB`00CCj00CCl00CCn00CD`00CDb00BJl00CDd00CDf00CDh00CDj00CDl00CDn00CEb00CEd00CEf00CEh00CEj00CEl00CEn00CF`00CFd00CFh00CFj00CFl00CFn00CG`00BBd00CGl00CAb00CGn00CH`00CHb00CHd00CHf00CHh00CHj00CI`00CIb00CId00CIf00CIh00CIj00CIl00BKn00N`00CJb00CJd00BFl00BAd00A@`00CJj00CMjBEb?BBd09```BFb0AIf20`BLd3BOhA@h111ACdCAj601BK`BJn00BFnCCj:;`:;;AIhAIj5<=999CN`CNbACfAOfBLhBKfCJlCBfCBjBOlCNdBMnCNfC@bCNhCNjCKfC@fC@jACd=<;9C@h`BFbBMjBBd`0CDh0`BM`CB`33`N`BNbCAhCAdCBnBEbBFfCC`BGb0CCbCCdCCfAB`A@hBLjCCjCClCCnCD`CDbBJlCDdCNlCDfCDhCDj0CDlCDn0CE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BBd0CGlCAb0BM`CGn0CH`0CHb0CHd0CHf0CHh0CLjBMd0CHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLd0000CInCJ`N`00CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJj`;CBn:`BLhCIdCIb`BBdCAnBMhAM`6C@nBOjBKfCAjBFb00BLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`0A@hC@jDEdCCjCClCCnCD`0CDbBJl0CDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBd0000000000000CGlCAbBM`0000000000CGnCH`CHbCHdCHfCHhCLj0BMd0000CHjCHlCHnCI`CIbCIdCIf0CIhCIjCIlBKn0000CAfBLdCInCJ`N`00000000000000000CJbCJdA@bDA`BFlBFn00Mj0000000000BAdA@`BIbCJfCJhCJjD@dBLd000D@fD@jD@lAM`04N`DM`00ADj13310732CJdCKf4422DA`66BM`DAbALd0`AIl1CHjBFbDAdAIn5BFnCAf`BBd`00N`BK`BMhBMj<4AJ`AOh10CAn<CJ`DlCCh00CLdBLnD@d?BMl`C@f=>>==BNb6CCj`CNlBAnALdBK`CJlCBfCBlBFbDB`11``BHjAIdBBdN`21=9BEbBFfBGbCCbCCdCCfCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`BO`BBdCGlCAbCGnCH`CHbCHdCHfCHhBMdCHjCI`CIbCIdCIfCIhCIjCIlBKnCJ`N`CJbCJdBFlBAdA@`CJjDBd0BLbBMjBBdBOh0CBhCBl`DBfCKnCBbCHlCL`CHnBLhBJlAB`CCj```=`BOlCDfBEb>=21N`0CIlBGh`3BFf``CNjCKfBLl:CAnBMhAM`BLhC@nBOjBKfCAjBFbBLb:CBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjAB`ACdBFbDAdA@hCAfBLd``8``BBd``011CAnBMhAM`BLhC@nBOjBKfCAj=BLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjBDf>78AM`?DEbDAlBBdBLd=DBjBMjN`0CCjBB`BFd3MjBFj;8CAbCDj`;`1BGbCHj<BK`C@h?`AJbBBd45`00`AJd1CKlCKnCBb4=4`74`7A@h5>AB`BAd`N`CJ`BFdCMd35CDn4BGb;:9ALdBLdBFnD@d2DC`BMhBFbBMjDAdDCb3DCd0BLhBJl1BJnDCfCIn0BEb`:9ALdBBdDCj=N`CEb?=:ABj00`BK`BMj6BFnBFb3CDh9`DClBGbDCnCJ`Mj>>6BLbCBjCKfCBlCCjCF`BBdDCd00000000000000000000AId2N`13CDfCEdCEjCFhF`Fh``6BFbDCf;`;BMl0BM`0=020=`==`1?1111CJ````BMh5BMjAHdBBdDDfBK`CInCLjCHj`=7653`8=7AJf64DDh5CNd`BAdCFfCHlCL`CHnCBb21`BMhBFbBMjAHdBBd1CBnCI`A@bDDfBK`CLjCHjDBfCKn>CHlCL`CHnCCl`=CKl5CBb5BGb0BKl1BBdBL`F`FhBK`CJlCBfCBjBLlCBhCBlDEdCCjBOl1BMhBMjAHnBBd==09CAfOjBAd33`DBfCKnCBbCL`BGbCHnN`CDn3;``3DDj<<BMlDKnCN`CNbDL`DDlAM`BLhBKfCBfCBjBOl;CNdBMnCNfCLbC@bBGbCNhCNjCChCKfC@hC@fC@jBJlBM`CHlCHnBKnCAfN`BFnMjBAd32AJhBK`CD`6`05CBfCBj28888108888DEbDAlBLjC@nBOjC@hBBd0`0BLdAId0``AB`A@hCDh?BFb6CLjCHjCClF`FhC@fCInBEbBFfCChAIfBLhCIlBGh>CAfBBdCKlCKnCBb0CGfCGjDEd66`CBlCF`CJdBGb9DBf9CCj22N`1BEbBFf?22````?9DCf0`CJhDDfBBdBFb8BFn88`1AJf3DDhBK`CKlCKnCBb>CClCDh0CCjDEj<N`0C@f1111CJl:CBfCBjCBhCBl8CJd`AJj0BKlBBdBL`BLd`BK`BFbBJn``5`BOh60BMl11``7`7`CAfAJl6BMh6BMj;CEbBLhDB`:>AJn?<?DFbBBd1010100010101010101010101010DFdCB`2CCh0130CFhCInCJlCBfCBjBLlCBhCBlCCjCId0DCdBM`??3BLjBFb00000DFfAK`0CNdBMnC@hC@f7CIn?DEd=1`BLd>9`DBfCKnCBbCHlCL`CHnN`BFb0CClCDhCDf`AK`<4??C@jCNdBMnCNjC@fCN`BBdBFnAKbBK`BMh?BMj5AKdBFb7BJl8ACf692222CKdBLlCCjCJb1:68=<<5AKf=0=====`AHl;8:??80<N`CJlCBfCBjBOhBK`BFn022`2`2BBdBEb>>CFhBMhBFbBMjAKh68DFl9A@h8;`;;;;;CEbCBbCIb;``>`>`>`>`>N`<BKl=BKnBLd0BL`BLhDCfBJl01`BMhBFbBMjAHdBBdDDfBK`BM`CAb=N`8BLb86AKj5DG`066AKl7BFn`CGdCGhCDh`CHlCHn1CBbBFbCGb1CJ`BMjD@d;AKn5DGdBKdBBdBOhBMh1DCfAB`CAj=BLbBLlCBfCBhCBjCBlCBnBEbBFfCC`BGbCCbCCdCCfCChAB`A@hCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bBFlBFnMjBAdA@`BIbCJfCJhCJjBBdBMlCBbBGbCDjCDn5CAbCGnCH`CHbCHdCHfCHhBMdN`D@dCJdBOh0DCfCEdCFhBLdCEb0BFbBFn000ABj00DGfBGb0CCh10CCl21AMn660AN`077B@h000ADnAE`1000CAnBMhAM`BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`0N`0CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJj?D@dCAnBMhAM`BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjCCjBMl0BBd1DDjCFlCFnCG`N`?00000CCl11BNbCAdBLnBGbCDjCDn<CAbCGnCH`CHbCHdCHfCHhBMd??CAnBMhAM`BLhC@nBOjBKfCAjBFbBLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJjCf`BLdAHnBMhBFbBMjBBdBK`3432133N`0?CCj3DGn0C@fCBlCF``BLhBJlBFn0ALdMjCMd=CIlBGh4545BMhBFbBMjAKhBBdBK`DFl187DH`0CInN`CAn:AM`BLhC@nBOjBKfCAj?BLbBLlCBfCBhCBjCBlDEbBOlBMlCNdDAlBMnCNfCLbCBnC@bBEbBFfCC`BGbDHbCNhCCbCNjCCdCCfCChBMjDCfCKfBJnC@hC@fAB`A@hC@jDEdCCjCClCCnCD`CDbBJlCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`DCnCGbCGdCGfCGhCGjBO`BBdCGlCAbBM`CGnCH`CHbCHdCHfCHhCLjBMdCHjCHlCHnCI`CIbCIdCIfCIhCIjCIlBKnCAfBLdCInCJ`N`CJbCJdA@bDA`BFlBFnMjBAdA@`BIbCJfCJhCJj=CKlCKnCBb10CCfBGbCHn1A@b`CGfCGjCBnCI`4BLhCHlC@fCBjBOlCNjCBfDKnDL`CKfCCj47BFbBJl111CNdBMn<4DEd49CClCNfC@b1CLb1C@j90BOl0CHlCHnCBf8BMl1?19196BJn55322CCj>C@f65654CBjCNjCKf4CNd483835CNh3<96BAd<;;<;:CCl=CJl<<774BMn6:6:>BOl>3BFb<8<38;07298;<0?141?<3?:8<0C@j41CBf0<<94:=>BMl?1=<;?1=<;?CHlCHn36953CCj40C@f7:5CBj7BJl:557=7=9BFn0ALd167;ABj00000000000000000N`CEdCFh`22BBdCKlCKnCBb?`AL`DMbDMdDMf2102DMhDMjDMlDMn0DN`DNbDNdDNfDNhDNjDNlDNn55DO`DObDOd14;3DOf:DOh49DOjDOl0>DOnDMn240;4:029513622><??>;E@`E@bE@d0E@fE@h4E@jE@lE@nEA`3EAb528EAd1EAf11098432323570;5EAhEAjEAl0EAnEB`EBbEBdEBf01EBh1EBjEBlEBnEC`ECbECd697DLjDLl0ECf00DLfDLh10EChECjECl21ECnED`EDbEDd03421EDf0DHj00`00`0000000`0`0000``````````BIhBIj0`ALjALfALb``````````````````````````````````DIb000000000000000DId`CA`000000000000000DIf`0`00`0000000000000`00EDhEDjEDl32103210321032103321032103`210332103210321032103EDn00````````BNf0000CBnCKlCKnCL`3DBf213232114021320213230232DFb0000000000000132`433543`DIj0000``07777DIh8111111111111111`11111111`DJb``DIl000000000`0000DIn11111211111DJd0``0000CJn010100000101010100000110001010`001010101011``11110DJf`00000000000`0000AOn`JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``3230```00`40320``320```AOd`2DKnDL```````7``653``653``653``653``3`444333AOj764``3``4B@dLd1010Al:97`:9`:``838```````````BAb`3`<;:`;`;:8;`;:88````80`;:8``;:8``;:8``;:8``8:8`88ALd0:0AMn0AN`0ANf3`AOh0`B@h000`1Oj`AOf7777733DlBAn9BB`::```4DKnDL`;;::7777<<<10<`````AOd`AOj10``7`````1010````````````D@fD@jD@l`CMb00000000000000000000000000000000000000000000000000`BIl0`DJh000000000000000000``BMdCGn00011111CHfCHb33`03`CHd414414222124444411111444124222CHh055355`51CH`443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DMhDMjDMlEAhEAjEAl0EAnEB`EBbEBdEBf01EBh1EBjEBlEBnEC`ECbECd697EChECjECl21ECnED`EDbEDd03421EDf0`CH`CHd0`0DJj000`00000000000000000000000000DJl000`00000000000000000000000000````CEl0`````````DJn00000000000000000000000000000`DGl000000000`0000``000000000ALn00`````DKbCBb000000000000000000`````AKf0````````````F`Fh10101022```BOdBOh0000000000000000`0000000`0`00`00000`0`0`0`0`00000`CAf0000``EE`EEbMb``0``AIdBGf2````02AbBK`111111`11100`110010011101110001DKh352035211222212212112252152522222203522035222220352112524222422222555222222121522203522222222222222222222222222222222222222222222222222222222222222122211114222422215222222`203520352220BFd3233332203333232335333533332232232333323223333333333333333333333333333333333333333333333333333332315333533332`332233323332623333223312332232233333333323323322233333633331463333314633333314633333232221463333``Ed000000000000000000000```BKl`0BL`Bn`210210210210``CBdG`10CLn0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{Bf}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bd}}}}{f{C`}}}Ab}{{{f{{l{Bh}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Cb}}}}{f{C`}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{C`}}}AbCf}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{Cb}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cb}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{E`{{Ch{{f{Bf}}}}}{{Ad{{Ch{{Dn{Bf}}}}}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}Eb}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{Ch}{{Ad{Ch}}}}Eb}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{E`{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Dn{{Bl{Bj}}}}}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Eb}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{E`{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Cb}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}Eb}Dl}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}Eb}Dl}{{{f{{l{Cb}}}}c}{{l{Cb}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{c}}}}e}{{l{Bd}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{An}}}}{f{E`}}}{{l{An}}}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}Al}{{{f{{l{Bd}}}}{f{E`}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{E`}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{E`}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{E`}}}{{l{e}}}AlDl}{{{f{{l{Bd}}}}{f{E`}}}{{l{c}}}Dl}{{{f{{l{Bh}}}}{f{E`}}}{{l{c}}}Dl}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{{Bl{Bj}}}}}{{Ad{{f{{Bl{Bj}}}}}}}}}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{Bf}}}{{Ad{{f{Bf}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{E`{}{{Ad{}}}}Eb}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Ah}}}}{f{E`}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cb}}}}{f{E`}}}{{A`{{l{Cb}}n}}}}{{{f{{l{c}}}}g{f{Df{Bl{e}}}}}bAl{}{{E`{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Df{Bl{c}}}}}b{}{{E`{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bl{e}}}}}bCf{}{{E`{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bl{c}}}}}b{}{{E`{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bh}}}}e{f{Df{Bl{c}}}}}b{}{{E`{{Ch{{f{{Bl{Bj}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}e{f{Df{Bl{c}}}}}b{}{{E`{{Ch{{f{Bf}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{Ab}{{Ad{Ab}}}}Eb}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{E`{{f{{Bl{Bj}}}}}{{Ad{{Dn{{Bl{Bj}}}}}}}}Eb}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{E`{{f{c}}}{{Ad{c}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{d}{{Ad{d}}}}Eb}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{E`{{f{Bf}}}{{Ad{{Dn{Bf}}}}}}Eb}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{En{f{Bf}}}{{Ad{En}}}}Eb}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{An}}}}F`}{{l{Fb}}}}{{{f{{l{Bd}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{Bh}}}}F`}{{l{Fb}}}}{{{f{{l{An}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bd}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Fd}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bh}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{An}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Fb}}n}}}Cf}{{{f{{l{Bh}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{Bd}}}}}{{A`{{l{Fb}}n}}}}`{{{f{{l{Cb}}}}}{{f{{l{Cb}}}}}}{{{f{{l{Bd}}}}}{{l{Bh}}}}{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fj}{{{l{An}}{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}102201{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fl}}}Dl}``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{E`{}{{Ad{}}}}Eb}Al}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Bh}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fn}{{A`{Abn}}}Al}{{{f{{l{Cb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{j}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}G`}{{{f{{l{c}}}}e}{{A`{Abn}}}G`Bb}{{{f{{l{c}}}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gj{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gj{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGl}{{{f{{l{c}}}}}{{A`{{f{Bl}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gn}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gn}bDlDl}{{{f{{l{c}}}}}{{`{H`}}}Al}{{}{{l{c}}}Dl}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Gdb}{{{f{Df{l{c}}}}}bDl}1{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}8210356974{{{f{{l{Cb}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bf}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gj{Ab}}}}{{{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{An}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{Bh}}}}{f{{l{An}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hh{Dj}}{Hj{Dj}}}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gd}}}Dl}`{{{f{{l{{Cd{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cf}{{{f{{l{Bd}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bh}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Cb}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{An}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Cb}}}}c}b{{Af{{Ch{Ed}}}}}}{c{{l{e}}}Cl{{Dl{}{{I`{c}}}}}}{cc{}}0{{Ddc}{{l{e}}}Ib{{Dl{}{{I`{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{I`{}}}}Dl}Ib}{{Dd{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gj{{Cn{Cl}}}}El}{{l{c}}}Dl}{{Dd{f{{Bl{Ff}}}}}{{A`{{l{j}}n}}}}{e{{l{Ah}}}{{Id{Ab}}}{{Ib{}{{Cj{c}}}}}}{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bh}}}{{Ih{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bd}}}{{If{Bf}}}{{Ib{}{{Cj{c}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hf{Gj{Ch{Ij}}}}}}}}}Al}{e{{l{Bd}}}{{Ih{Bf}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{An}}}{{Ib{}{{Cj{d}}}}}}{c{{l{An}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bh}}}{{Ih{{Bl{Bj}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{Bd}}}{{Ih{Bf}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{{Ch{d}}}}}}}}{e{{l{Fd}}}{{Ih{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}6{e{{l{Fd}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}>?;{e{{l{{Cd{c}}}}}Cf{{Ib{}{{Cj{{Ch{c}}}}}}}}>;:{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{Id{Ab}}}{{Ib{}{{Cj{c}}}}}}{{Ddc}{{l{An}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{Bd}}}{{Ih{Bf}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bh}}}{{Ih{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}`{c{{l{An}}}{{Il{}{{Cj{d}}}}}}{c{{l{An}}}{{Il{}{{Cj{{Ch{d}}}}}}}}{c{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bh}}}{{Ih{{Bl{Bj}}}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bd}}}{{Ih{Bf}}InJ`}{{Il{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{c{{l{e}}}{{Il{}{{Cj{Ch}}}}}Al}{e{{l{Bd}}}{{If{Bf}}InJ`Jb}{{Il{}{{Cj{c}}}}}}{{cDdEl}{{l{Ah}}}{{Il{}{{Cj{{Ch{Ab}}}}}}}}{{Ddc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{{Bl{c}}}}}{{l{Bh}}}{{Ih{{Bl{Bj}}}}}}{{Dd{f{{Bl{c}}}}}{{l{Bd}}}{{Ih{Bf}}}}{{Dd{f{{Bl{d}}}}}{{l{An}}}}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bh}}}{{Ih{{Bl{Bj}}}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bd}}}{{Ih{Bf}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bl{{Ch{d}}}}}}}{{l{An}}}}{{Dd{f{{Bl{Ch}}}}}{{l{c}}}Al}{c{{l{An}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{{DdGj}{{l{c}}}Al}{{DdGj{Ch{Ij}}}{{l{c}}}Al}{{Dd{f{Ab}}Gd}{{l{Cb}}}}{{DdcGd}{{l{{Cd{c}}}}}Cf}{{Dd{f{Ab}}Gd}{{l{Ah}}}}{{DddGd}{{l{An}}}}{{Dd{f{Bf}}Gd}{{l{Bd}}}}{{Dd{f{{Bl{Bj}}}}Gd}{{l{Fd}}}}{{DdGd}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}Gd}{{l{Bh}}}}1{{DdGd}{{l{Fd}}}}{{DdGd}{{l{An}}}}{{DdGd}{{l{{Cd{c}}}}}Cf}{{DdGd}{{l{Bd}}}}{{DdGd}{{l{Bh}}}}{{DdGd}{{l{Ah}}}}{{DdGd}{{l{j}}}}{{DdGd}{{l{Cb}}}}{{{f{{l{c}}}}Gd}{{l{c}}}Dl}{{DdGd{f{El}}Gd}{{l{Cb}}}}{{DdGd{f{El}}}{{l{Ah}}}}{{{f{{l{c}}}}Gd}ChDl}{{{f{{l{j}}}}Gd}{{A`{Jjn}}}}{{{f{{l{c}}}}Gd}{{A`{Jjn}}}Al}{{{f{{l{Cb}}}}Gd}{{A`{Jjn}}}}{{{f{{l{{Cd{c}}}}}}Gd}{{A`{Jjn}}}Cf}{{{f{{l{Ah}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Fd}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Bh}}}}Gd}{{A`{Jjn}}}}{{{f{{l{Bd}}}}Gd}{{A`{Jjn}}}}{{{f{{l{An}}}}Gd}{{A`{Jjn}}}}{{{f{{l{An}}}}Gd}Jj}{{{f{{l{Cb}}}}Gd}Jj}{{{f{{l{c}}}}Gd}JjAl}{{{f{{l{j}}}}Gd}Jj}{{{f{{l{Bd}}}}Gd}Jj}{{{f{{l{Bh}}}}Gd}Jj}{{{f{{l{{Cd{c}}}}}}Gd}JjCf}{{{f{{l{Fd}}}}Gd}Jj}{{{f{{l{Ah}}}}Gd}Jj}{{{f{{l{Cb}}}}Gd}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gd}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JnDl}{{{f{{l{Cb}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{Cd{c}}}}}}Gd}{{Ch{{f{K`}}}}}Cf}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{Kb{Hb}}n}}}}{{{f{{l{c}}}}Gd}ChDl}{{{f{{l{Ah}}}}}Gd}{{{f{{l{Cb}}}}}Gd}{{{f{{l{Bd}}}}}Gd}{{{f{{l{Fd}}}}}Gd}{{{f{{l{{Cd{c}}}}}}dd}{{A`{C`n}}}Cf}{{{f{{l{Cb}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Fd}}}}dd}{{A`{C`n}}}}{{{f{{l{Bh}}}}dd}{{A`{C`n}}}}{{{f{{l{Bd}}}}dd}{{A`{C`n}}}}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{c}}}}GddGd}C`Fj}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{An}}}}615078432{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dl}{{}Gd}0{{GdKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Cb}}}}}{{f{El}}}}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dl}{{}c{}}0{{}Ff}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gd}}Gd}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{An}}}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{c}}}}}{}Al}{{{f{{l{Bd}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{Fd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Cb}}}}}}{{{f{{l{c}}}}}{{`{InJ`JdH`Jh}}}Al}{{{l{Lh}}}Ab}{{{l{c}}}AbDl}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{An}}}M`}000{{{f{{l{c}}}}}{{l{An}}}Dl}02{{{f{{l{c}}}}}MbDl}{{{f{{l{c}}}}}{{`{Md}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{Hb}}}}}}}}{{{f{{l{c}}}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ij}}}}}}}}}}}Dl}`{{fc}Gl{{Ih{Bf}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gd}}}Dl}{{{f{{l{c}}}}}{{Mf{c}}}Dl}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{c}}}}}GdDl}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Mh}}00{{{f{{l{c}}}}Gd}{{l{c}}}Dl}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}365401872{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bh}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{An}}}}}{{Ch{Aj}}}}{{{f{{l{Eh}}}}}{{Ch{Aj}}}}{{{f{{l{Ef}}}}}{{Ch{Kd}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fj}{{{f{{l{Eh}}}}}Mj}{{{f{{l{Ef}}}}}Mj}{{{f{{l{c}}}}}MjFj}{{{f{Df{l{c}}}}{Kh{c}}}bDl}`{{{f{{l{c}}}}}{{Ml{c}}}Dl}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Nb{Fl}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dl}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}{{Ch{Hf}}}Al}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{Bj}}}}GdGd}{{l{An}}}}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GdDl}{{{f{{l{Bd}}}}}{{A`{Gdn}}}}{{{f{{l{Bh}}}}}{{A`{Gdn}}}}{{{f{{l{c}}}}}{{A`{Gdn}}}Al}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Ddc}{{l{Ef}}}{{Ih{{Bl{{Ch{Kd}}}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bl{{Ch{Bj}}}}}}}}{{Ddc}{{l{Lb}}}{{Ih{{Bl{Hb}}}}}}{{Ddc}{{l{Kl}}}{{Ih{{Bl{Nf}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bl{Nj}}}}}}{{Ddc}{{l{Lh}}}{{Ih{{Bl{Nl}}}}}}{{Ddc}{{l{Nn}}}{{Ih{{Bl{Kf}}}}}}{{Ddc}{{l{Fb}}}{{Ih{{Bl{Jl}}}}}}{{Ddc}{{l{O`}}}{{Ih{{Bl{Ob}}}}}}{{Ddc}{{l{Nd}}}{{Ih{{Bl{Bj}}}}}}{{Ddc}{{l{An}}}{{Ih{{Bl{d}}}}}}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{Gj{Bj}}}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{Ej}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{Ih{{Bl{{Ch{c}}}}}}}}{{Dd{f{{Bl{c}}}}}{{l{{Cd{c}}}}}Cf}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{Ch{{Dn{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{Dn{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Ef}}}{{Ih{{Bl{Kd}}}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bl{Aj}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{{Ch{Ej}}}}}}}}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{{Ch{{Dn{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{{Dn{Bf}}}}}}}}{{Ddc}{{l{Bh}}}{{Ih{{Bl{{Ch{{Gj{Bj}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Ddc}{{l{Bd}}}{{Ih{{Bl{{f{Bf}}}}}}}}{{Dd{Od{Jl}}}{{l{Fb}}}}{{Dd{Od{Kf}}}{{l{Nn}}}}{{Dd{Od{Nf}}}{{l{Kl}}}}{{Ddc}{{l{An}}}{{Ih{{Bl{{Ch{d}}}}}}}}{{Dd{Od{Hb}}}{{l{Lb}}}}{{Ddc}{{l{Eh}}}{{Ih{{Bl{{Ch{Aj}}}}}}}}{{Ddc}{{l{Lh}}}{{Ih{{Bl{{Ch{Nl}}}}}}}}{{Ddc}{{l{Lb}}}{{Ih{{Bl{{Ch{Hb}}}}}}}}{{Ddc}{{l{Kl}}}{{Ih{{Bl{{Ch{Nf}}}}}}}}{{Ddc}{{l{Nh}}}{{Ih{{Bl{{Ch{Nj}}}}}}}}{{Ddc}{{l{Of}}}{{Ih{{Bl{{Ch{Oh}}}}}}}}{{Ddc}{{l{Nn}}}{{Ih{{Bl{{Ch{Kf}}}}}}}}{{Ddc}{{l{Fb}}}{{Ih{{Bl{{Ch{Jl}}}}}}}}{{Ddc}{{l{O`}}}{{Ih{{Bl{{Ch{Ob}}}}}}}}{{Ddc}{{l{Of}}}{{Ih{{Bl{Oh}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{Cb}}}}GdGd}{{l{Cb}}}}{{{f{{l{{Cd{c}}}}}}GdGd}{{l{{Cd{c}}}}}Cf}{{{f{{l{c}}}}GdGd}{{l{c}}}Al}{{{f{{l{An}}}}GdGd}{{l{An}}}}{{{f{{l{Bd}}}}GdGd}{{l{Bd}}}}{{{f{{l{Bh}}}}GdGd}{{l{Bh}}}}{{{f{{l{Fd}}}}GdGd}{{l{Fd}}}}{{{f{{l{Ah}}}}GdGd}{{l{Ah}}}}{{{f{{l{j}}}}GdGd}{{l{j}}}}{{Dd{Gj{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gj{c}}Ij}{{l{{Cd{c}}}}}Cf}{{DdGj}{{l{c}}}Al}{{{N`{Oj}}{Gj{{Cn{Cl}}}}JlJl}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{An}}}}}}{{{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{c}}}}e}{{l{An}}}AlBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{An}}}Al}{{{f{{l{Bd}}}}{f{Bf}}}{{l{An}}}}{{{f{{l{Cb}}}}{f{{l{Cb}}}}}{{l{An}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{An}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{An}}}}810395{{{f{{l{Cb}}}}{f{{l{Cb}}}}}}587{{{f{{l{c}}}}}GdDl}`{{{f{{l{Ah}}}}}{{A`{{Hd{Hb}}n}}}}{{{f{{l{Cb}}}}}{{A`{{Hd{Hb}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{Bd}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bf}}}}}}}}}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{Bd}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Ef}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fj}{{{f{{l{Ef}}}}AjA@`}{{A`{Mjn}}}}{{DdGdAj}{{A`{{l{An}}n}}}}{{DdGdAjAj}{{A`{{l{c}}n}}}Al}{{DdGd}{{l{c}}}Al}{{DdGdAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{Oj}}}Dl}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{O`}}}}}Ab}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Of}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Ah}}}}}Ab}9031:254687{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{Cb}}}}}{{l{Cb}}}}{{{f{{l{c}}}}{f{E`}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gde}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}Gddd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{Bd}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{{{f{{l{An}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bl{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{Bh}}}}c{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bd}}}}c{Ch{{f{Bf}}}}}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{An}}}}c{Ch{d}}}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}{{E`{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Gj{Bj}}}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{E`{Ch}{{Ad{Ch}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}{{E`{{Ch{{f{Bf}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{Bd}}}}{f{{l{An}}}}{Ch{{f{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}{Ch{d}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}{f{{l{An}}}}{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jl}bDl}{{{f{Df{l{c}}}}Mb}bDl}{{{f{{l{j}}}}Hb}{{l{j}}}}{{{f{{l{Ah}}}}Hb}{{l{Ah}}}}{{{f{{l{Bh}}}}Hb}{{l{Bh}}}}{{{f{{l{Bd}}}}Hb}{{l{Bd}}}}{{{f{{l{Fd}}}}Hb}{{l{Fd}}}}{{{f{{l{An}}}}Hb}{{l{An}}}}{{{f{{l{c}}}}Hb}{{l{c}}}Al}{{{f{{l{Cb}}}}Hb}{{l{Cb}}}}{{{f{{l{{Cd{c}}}}}}Hb}{{l{{Cd{c}}}}}Cf}{{{f{{l{{Cd{c}}}}}}Hb{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{Fd}}}}Hb{Ch{{f{{Bl{Bj}}}}}}}{{l{Fd}}}}{{{f{{l{Bh}}}}Hb{Ch{{f{{Bl{Bj}}}}}}}{{l{Bh}}}}{{{f{{l{Bd}}}}Hb{Ch{{f{Bf}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}Hb{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{Cb}}}}Hb{Ch{{f{Ab}}}}}{{l{Cb}}}}{{{f{{l{c}}}}HbCh}{{l{c}}}Al}{{{f{{l{An}}}}Hb{Ch{d}}}{{l{An}}}}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}HbGd}{{l{c}}}Dl}0{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{Bd}}}}F`}{{l{Bd}}}}{{{f{{l{An}}}}F`}{{l{An}}}}{{{f{{l{Bh}}}}F`}{{l{Bh}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{c}}}}Hb}{{Hf{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bj}MjFj}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ef}}}}Bj}Mj}{{{f{{l{j}}}}}{{f{{Bl{Oj}}}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{Jl}}}}{{{f{{l{Bh}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}{Ch{Gd}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{Ih{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{Bl{A@h}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bl{A@h}}}}}{{l{c}}}Dl}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Ih{{Bl{Jl}}}}A@f}}{{{f{{l{Bh}}}}{f{{l{Fb}}}}}{{l{Bh}}}}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{Ih{{Bl{Jl}}}}A@f}}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}{{{f{{l{Bh}}}}{f{c}}}{{l{Bh}}}{{Ih{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}{{Ih{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}}{{{f{{l{Bd}}}}{f{{l{Fb}}}}}{{l{Bd}}}}`{{{f{{l{c}}}}dA@l}{{Gj{{Gj{A@n}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bd}}}}Gd}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{Cb}}}}El}b}{{{f{{l{c}}}}}{{A`{{AAf{{AA`{f}}{AAd{{AAb{Gd}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAf{AAh{AAd{{AAb{Gd}}}}}}n}}}}{fc{}}{{{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{c}}}}}{{Gj{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gj{Gj{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dl}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dl}{{{f{{l{Cb}}}}c}{{A`{{l{Cb}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cb}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bd}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{I`{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}Gd}{}Dl}{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{c}}}}Bj}MjFj}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ef}}}}Bj}Mj}{{{f{{l{Bh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Fb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Fd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Of}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cb}}}}}Gd}{{Ddc}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{c}}}}{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bl{AB`}}}}e}c{}{{ABb{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ij}}}{{l{j}}}}{{{l{j}}{l{An}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dl}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}32102332013223103232012332102323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cb}}}}{f{{l{c}}}}e}{{l{Cb}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{An}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@j{Dj}}}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bl}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{Ih{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bl}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{Bf}}}}}}}}Jh}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bl{Bj}}}}}}}}}}Jh}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{Ih{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{Bf}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bl{Bj}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gd{{f{c}}}{}}0000000000{Gd{{f{Dfc}}}{}}0000000000{Gdb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dl}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{{Bl{Bj}}}}}{{l{Bh}}}}{{{ACn{Bf}}}{{l{Bd}}}}{ADb{{l{An}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{El}}GdGdDd}{{A`{{Cn{ACd}}n}}}}{{}Gd}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGd{Ch{El}}}ABl}{{DdGd{Ch{El}}}ABn}{{DdGdGd}ACh}{{DdGdGd}ACj}{{DdGdGd}AC`}{{DdGd}ACl}{{DdGdGdEl}{{ACb{c}}}Al}{{DdGd}{{ACn{c}}}{AD`A@f}}{{DdGd}ADb}{{DdGd}ADd}{{DdGd}{{ADf{c}}}Al}{{DdGdGdElEl}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{El}}GdGdDd}{{A`{{Cn{ACd}}n}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fn}}}Fn}{{f{f{Dfc}}}b{}}{fb}{{}Fn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{Fn}}{f{Fn}}}d}{{f{f{c}}}d{}}00{{{f{Fn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fn}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{{{f{Fn}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0`{AEbAEb}``{{AEdDdEl}e{}{{AEf{c}}}}{{eDdEl}AEf{}{{Il{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{cc{}}00{{}Gd}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}El}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChH`}`{{{f{AEj}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AEn}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{{AF`{c}}}}}{{Hf{Gd{Ch{Gd}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Gn}{{}Jn}{{GnGn}Gn}{{JnJn}Jn}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}3210{{{f{Gn}}}Jl}0{{{f{Jn}}}Bj}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fl}}}Dl}{{{f{{Mn{c}}}}}{{Mn{c}}}Dl}{{{f{{Kh{c}}}}}{{Kh{c}}}Dl}{{{f{AFb}}}AFb}{{{f{Gn}}}Gn}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{GnGn}{JnJn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dl}{{}{{Kh{c}}}Dl}{{}Gn}{{}Jn}{Gd{{f{c}}}{}}{{{f{{Ml{c}}}}}fDl}111111{Gd{{f{Dfc}}}{}}000000{{GnGn}Gn}{{JnJn}Jn}{{}d}{{{f{Fl}}}{{Ch{Jl}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{Kh{c}}Jl}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dl}{Gdb}000000<;5{{{f{Gn}}{f{Gn}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfGn}}c}b{{Ib{}{{Cj{Gn}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{e}}}DlDl}{{{Kh{c}}Jn}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dl}{{{f{AFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Gn}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{Gn}}}}{Bj{{Ch{Jn}}}}{JlGn}0{BjJn}010{cGn{{Ib{}{{Cj{Gn}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{Bf}}}{{Ch{Gn}}}}{{{f{Bf}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{f{{Kh{c}}}}}dDl}{{{f{Jn}}}d}{{{f{Fl}}}Jn}{{{f{{Kh{c}}}}}JnDl}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dl}{{{f{Jn}}}Mb}{{}Gd}000000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{GnGn}Gn}{{JnJn}Jn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Gn}{Jn}{{{f{Gn}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDl}21{{{f{{Kh{c}}}}}MbDl}111{{{f{Gn}}}{{AFf{Gn}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{Gn}}}{{AFh{Gn}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{Fl}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dl}{{{Kh{c}}Ch}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dl}4321{{{Kh{c}}}{{Mn{c}}}Dl}{GnGn}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dl}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{{f{DfGn}}Gnd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDl}{{{f{Df{Kh{c}}}}d}bDl}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDl}{{{f{Df{Kh{c}}}}Ch}bDl}033{{{f{Df{Kh{c}}}}Mb}bDl}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dl}{{GnGn}Gn}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dl}{fc{}}0000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dl}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dl}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{Fl}}}}}Dl}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dl}````{{fh}b}{{{f{{AGb{c}}}}Gd}{{Hf{{AGb{c}}{AGb{c}}}}}Cf}{e{{AGb{c}}}Cf{{Ib{}{{Cj{{f{c}}}}}}}}{e{{AGb{c}}}Cf{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGde}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cf}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gd}dCf}{{{f{{AGb{c}}}}}{{AGb{c}}}{JfCf}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cf}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGhCf}}{{{Gj{c}}}{{AGb{c}}}Cf}{cc{}}{{GdAGd}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}Gd}{{Ch{{f{c}}}}}Cf}{{}AGd}{{{f{Ij}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}{{AGd{f{Ij}}}{{AGb{c}}}Cf}{{{f{Ij}}{f{{AGb{c}}}}}{{AGb{c}}}Cf}0{{}Gd}{{}c{}}{{{f{{AGb{c}}}}}{}Cf}{{{f{{AGb{c}}}}Gd}dCf}0{{fGd}d}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cf}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gb{c}}AGj}}}Cf}{{{f{{AGb{c}}}}}GdCf}0`{db}{{{f{Df{AGb{c}}}}{Ch{Ij}}}bCf}{{{f{Df{AGb{c}}}}GdGd}bCf}{{fGdGd}c{}}01{{{f{{AGb{c}}}}Gd}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGb{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cf{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Ij}}}}}Cf}{{{f{{AGb{c}}}}Gd}{{f{c}}}Cf}{{{f{{AGb{c}}}}Gd}{}Cf}1{{{f{{AGb{c}}}}}{{Gb{c}}}Cf}{{{f{{AGb{c}}}}}{}Cf}{{}c{}}{{{AGb{c}}{Ch{Ij}}}{{AGb{c}}}Cf}{{{f{{AGb{c}}}}{Ch{Ij}}}{{Cn{Cl}}}Cf}1`{{{f{Df{AGn{c}}}}}bCf}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}bCf}{{{f{Df{AGn{c}}}}c}bCf}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cf}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{AGn{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{}Gd}{{}c{}}{{DdGd}{{AGn{c}}}Cf}{{{f{Df{AGn{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{AHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{DdGd}{{Cn{AH`}}}}{{}{{N`{E`}}}}{{}AGd}{{}Gd}{{}c{}}{{}d}`{{{Cn{E`}}{N`{E`}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{AHj}}{f{E`}}}AHj}{{{f{AHj}}{f{E`}}}{{l{c}}}Dl}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{{f{AHl}}F`}{{l{Fb}}}}{{{f{AHl}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{El}}}{{A`{Abn}}}}0{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Fh}}}Fh}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Fh}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00``{Gdb}00{{{f{F`}}{f{F`}}}d}{{{f{Fh}}{f{Fh}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fh}}}F`}1{{{f{F`}}}Fh}2`{{DdcGd}AIl{}}{{DdGd}AIn}`{{{f{AJ`}}Gd}{{A`{Jjn}}}}{{{f{AJ`}}Gd}Jj}??{{{f{F`}}{f{Dfc}}}bADl}{{{f{Fh}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gd}00{{}c{}}00{{{f{AJb}}}{{A`{{l{An}}n}}}}{{{f{AJd}}}{{A`{{l{An}}n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJf}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gdn}}}}{{}F`}{{}Fh}{{{f{AJh}}GdGd}{{l{c}}}Dl}88``{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJj}}}Ab}0{{{f{AJl}}}AJl}{{{f{AJn}}{f{E`}}A@b}{{A`{Abn}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AK`}}{f{{l{An}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{AKb}}Hb}{{l{c}}}Dl}{{{f{AKd}}Hbc}{{l{e}}}{}Dl}{{{f{AKf}}GdGd}AKf}0`{{{f{AHl}}d}{{l{c}}}Dl}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{AKn}}}{{Gj{{f{{Bl{Bj}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{F`d}F`}{{Fhd}Fh}1010{{Fhc}Fh{{Ib{}{{Cj{d}}}}}}210{F`F`}{FhFh}`{{{f{AL`}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GdAl}0{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALl{Jl}}}}Jl}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eALnd}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{ALn}}}ALn}{{f{f{Dfc}}}b{}}{fb}{{}ALn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{ALn}}{f{ALn}}}d}{{f{f{c}}}d{}}00{{{f{ALn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{ALn}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{{{f{{Bl{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGdf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gd{f{Df{Gj{d}}}}}b}```{{{f{AKf}}GdGd}AKf}0{{Gd{f{{Bl{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMdHb}00{{{f{Bf}}}{{A`{Ddn}}}}{{{f{Bf}}}{{A`{AMfn}}}}{{{f{AMh}}}Hb}{{{f{Bf}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000{{{f{AMj}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gj{Jj}}}}}b}{{AMjd}AMj}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMl}}{Ch{{f{Bf}}}}}b}{{{f{DfAMj}}{f{AMj}}}{{A`{bn}}}}{{{f{DfAMl}}}b}{{{f{DfAMl}}{f{Bf}}}b}{{{f{AMj}}F`}{{l{Fb}}}}{eAMn{}{{Ib{}{{Cj{c}}}}}}0{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{Bf}}}}{{{f{Dd}}}{{f{ANb}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{Dd}}}{{f{{Bl{Bj}}}}}}{{{f{El}}}{{f{El}}}}{{{f{Oj}}}{{f{El}}}}{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}7{{{f{{L`{LnLb}}}}}{{`{Jh}}}}8{f{{f{c}}}{}}0000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AOb{Bf}}}AOd}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{Jj}}{f{El}}}Jj}{{{f{El}}El}El}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AMj}}{f{El}}Fn}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DlDl}{{{f{AOj}}}AOj}{{{f{AOd}}}AOd}{{{f{AMj}}}AMj}{{{f{AOl}}}AOl}{{{f{Jj}}}Jj}{{{f{AOn}}}AOn}{{{f{El}}}El}{{{f{B@`}}}B@`}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nd}}}Nd}{{{f{O`}}}O`}{{{f{Fb}}}Fb}{{{f{Nn}}}Nn}{{{f{Of}}}Of}{{{f{Nh}}}Nh}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Ef}}}Ef}{{{f{Eh}}}Eh}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bd}}}Bd}{{{f{Bh}}}Bh}{{{f{Fd}}}Fd}{{{f{An}}}An}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@b}}}B@b}{{{f{AGd}}}AGd}{{{f{B@d}}}B@d}{{f{f{Dfc}}}b{}}000000000000000000000000000000000{fb}000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@f}{{{f{DfOj}}El}b}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{f{f{c}}}B@f{}}{{{f{El}}}d}00{{{AOb{Bf}}}El}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}B@j}{{}AOj}{{}AOd}{{}Jj}{{}AOn}{{}El}{{}AGd}{Gd{{f{c}}}{}}{{{f{Dd}}}f}111{{{f{{L`{ce}}}}}fDlDl}2222222222222222222222222222222222222222{Gd{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMlc}AMj{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{Gdb}0000000000000000000000000000000000000000000{{{f{AOh}}}{{f{El}}}}{{{f{{L`{LlLb}}}}}{{f{El}}}}{{{f{{L`{LnLb}}}}}{{f{El}}}}{{{f{{L`{LjLh}}}}}{{f{El}}}}{{{f{{L`{LfLb}}}}}{{f{El}}}}{{{f{{L`{KnKl}}}}}{{f{El}}}}{{{f{AMj}}}{{f{El}}}}{{{f{Jj}}}El}{{{f{Oj}}}{{f{El}}}}`{fc{{B@n{B@l}}}}0`{{{f{Dd}}{f{c}}}d{{Ih{Bf}}A@f}}{{{f{AOj}}{f{AOj}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{El}}{f{AGd}}}d}{{{f{El}}{f{El}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AMj}}{f{Bf}}}}{{{f{AMj}}{f{{l{Bd}}}}}}{{{f{AMj}}{f{AMj}}}}120{{f{f{c}}}d{}}00000000000000000000000000{{{f{{L`{ce}}}}}OjDlDl}{{{f{AOd}}{f{Bf}}}{{Ch{Jl}}}}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMlAMj}{B@j{{N`{AOd}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{El}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ej}}}Dd}{EjDd}{GlDd}{cc{}}{{{f{Bf}}}Dd}111{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}3333333333333{{{f{{Bl{Bj}}}}}Jj}{dJj}{{{f{Bf}}}Jj}{{{Ch{c}}}Jj{{BA`{Jj}}}}{cJjBAb}8{{{f{AGd}}}El}{JjEl}{{{f{Jj}}}El};;;{{{f{BAd}}}Oj}{{{f{Jj}}}Oj}{{{f{B@d}}}Ld}>>>>>>>>>>>>>>>>>>>>>>{BAfAGd}{BAhAGd}{cc{}}{{{f{AGd}}d}El}{{{l{Fb}}{N`{AOd}}dAOj}AMj}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BAj}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BAj}}}}}}}}{{{l{Fb}}AOj}AMj}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{B@l}}}}}}{cDd{{Ib{}{{Cj{{f{B@l}}}}}}}}{cDd{{Ib{}{{Cj{{f{Bf}}}}}}}}{cDd{{Ib{}{{Cj{Ej}}}}}}{cDd{{Ib{}{{Cj{{Cn{Bf}}}}}}}}{cDd{{Ib{}{{Cj{{Dn{Bf}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BAl}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BAl}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMd}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMd}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMh}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMh}}}}}}}}{{{f{Bf}}}Dd}0{EjDd}{{{f{{l{Bd}}}}{f{{AOb{Bf}}}}AOj}{{A`{AMjn}}}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}{{GdcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{DddGdAOj}AMj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AOd}}Jl}{{f{Bf}}}}{{{f{{L`{LjLh}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{KnKl}}}}Gd}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gd}{{A`{Jjn}}}}{{{f{AOh}}Gd}{{A`{Jjn}}}}{{{f{AMj}}Gd}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gd}Jj}{{{f{{L`{LjLh}}}}Gd}Jj}{{{f{{L`{KnKl}}}}Gd}Jj}{{{f{{L`{LnLb}}}}Gd}Jj}{{{f{{L`{LfLb}}}}Gd}Jj}{{{f{AOh}}Gd}Jj}{{{f{AMj}}Gd}Jj}{{{f{AOd}}}{{f{{AOb{Bf}}}}}}{{}El}0000000000000000000000000{{{f{AOd}}Jl}{{Ch{{f{Bf}}}}}}{{{f{AMj}}}{{f{{N`{AOd}}}}}}{{{f{El}}}{{Ch{{Gj{Gd}}}}}}{{{f{Jj}}}{{Ch{{f{Bf}}}}}}{{{f{BAn}}Gd}Jj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{{l{Bd}}}}}}{{{f{AMj}}{f{Bf}}}}120{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}}bADl}{{{f{AOn}}{f{Dfc}}}bADl}{{{f{El}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@d}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{Of}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{ElEl}{{}Gd}0000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}0000000000000000000000000000000000000000000{{}Ff}01{{BB`El}{{A`{Mjn}}}}{{{L`{LjLh}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LnLb}}}Ab}{AMjAb}{JjJj}{DdEj}{{{f{El}}}d}00{{{f{Jj}}}d}111{{{f{AMj}}}d}0212{{{f{AOd}}}d}23330323{{{f{AGd}}}d}34343444434444340{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMj}}}BBb}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{El}}}{{f{El}}}}{{{f{AOd}}}Gd}{{{f{AMj}}}Gd}{DdBBd}{{{f{AMj}}{f{{l{Bd}}}}}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bf}}}}201{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{AOn}}}{{Ch{El}}}}{{{f{AMj}}}Mj}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfB@j}}{f{{N`{AOd}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Of}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMj}}}{{A`{Gdn}}}}{{{f{AMj}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGdAOj}AMl}{{Ddc}{{L`{LfLb}}}{{Ih{{Bl{{Ch{AMd}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ih{{Bl{{Ch{BAl}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ih{{Bl{AMh}}}}}}{{Ddc}{{L`{LlLb}}}{{Ih{{Bl{{Ch{BAj}}}}}}}}{{Ddc}{{L`{LlLb}}}{{Ih{{Bl{BAj}}}}}}{{Ddc}{{L`{LnLb}}}{{Ih{{Bl{{Ch{AMh}}}}}}}}{{Ddc}{{L`{LfLb}}}{{Ih{{Bl{AMd}}}}}}{{Ddc}{{L`{KnKl}}}{{Ih{{Bl{BAl}}}}}}{{{N`{AOd}}}B@j}{{DdEl}Oj}{{{l{c}}}{{L`{ec}}}DlDl}{{}B@`}{{{f{DfBBb}}}Ch}{{{f{AMj}}{f{{l{Bd}}}}}}{{{f{AMj}}{f{Bf}}}}{{{f{AMj}}{f{AMj}}}}201{{{f{AMj}}}Gd}5{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@f}}}}{{{f{Jj}}{f{Jj}}}{{Ch{B@f}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@f}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMj}}}{{f{{l{Fb}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gd}}}}{{{f{DfAMl}}{f{Bf}}}{{Hf{Jld}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{KnKl}}}}{f{{l{Bd}}}}{Ch{{f{AMf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}{Ch{{f{AMf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{AOd}}{f{AOd}}}d}{{{f{{L`{LjLh}}}}}Gd}{{{f{{L`{LnLb}}}}}{{l{Of}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBb}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AMj}}d}AMj}{{{f{AMj}}F`}AMj}{{{f{Jj}}}{{Dn{Bf}}}}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Jj}}{f{El}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMj}}B@`d}{{Cn{Cl}}}}{{{f{El}}B@`}AGd}{{{f{Oj}}B@`}BAd}{LdB@d}{{{f{El}}DdB@`}BAd}{Ld{{f{Bf}}}}{{{f{AMj}}{f{{AOb{Bf}}}}BBf}AMj}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}AMj}{{{f{AGd}}}{{f{AGd}}}}{fc{}}000000000000000000000000000000000{{{f{El}}}El}{{{f{AGd}}}BBh}{{{f{{L`{LjLh}}}}Gd}{{A`{{Dn{{L`{LjLh}}}}n}}}}{fEj}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{Bd}}n}}}}333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AMf}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AMf}}}}{f{{l{Bd}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000{{{f{Jj}}{f{El}}}{{A`{Jjn}}}}{{{f{El}}B@`}{{A`{AGdn}}}}{f{{A`{GlBBj}}}}000{fAAl}0000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMj}}}{{A`{AAnn}}}}1{{{f{El}}Jj}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{}c{}}0000000000000000000000000000000000000000000{Gdc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ij}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{DfDd}}B@l}{{A`{bHn}}}}{{{f{DfDd}}BBl}{{A`{bHn}}}}{{{f{DfDd}}{f{Bf}}}{{A`{bHn}}}}{{{f{El}}}Jj}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BBn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{{}b}{Gdb}{{{f{DfBBn}}}b}2{cc{}}6{{}Gd}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4`{{{f{DfBC`}}Jl{f{AOd}}}{{A`{{f{DfBC`}}n}}}}{{{f{DfBC`}}}{{f{DfBC`}}}}{{{f{DfBC`}}{f{Bf}}}{{A`{{f{DfBC`}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}?{BC`AMj}>=<{{DdGd{N`{AOd}}AOjd}BC`}<;:=``````````````````````````{{{f{BCb}}}{{f{Bf}}}}666555`{{nBCb}n}{nn}6{{{f{BCb}}}f}77666{Gdb}00`{{{f{BCd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BCb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{cBCb{{BA`{{Dn{Bf}}}}}}1{BCfn}{BChn}{BCjn}4{BCln}{BCnn}{BD`n}{{}{{Gf{{f{Bf}}BCd}{{Ad{b}}}}}}{{}Gd}00{{}c{}}00{cnALh}{{{f{Bf}}}BCb}````{{{Gf{{f{Bf}}BCd}{{Ad{b}}}}}b}{cnBDb}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GlBBj}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{Bf}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gj{Ff}}{f{{BDd{El}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gj{Ab}}{f{{BDd{El}}}}}{{A`{bn}}}}{{{f{AAn}}{f{E`}}}{{Gj{Ff}}}}0{{{f{AAn}}{f{{l{An}}}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}{{{f{AAn}}{f{{Bl{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bl{Dd}}}}{f{{BDd{El}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HbGd}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDf{{ABb{{f{Ff}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gde}{{A`{{f{DfAAn}}n}}}BDf{{ABb{{f{Ff}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gd}}}}}}}}6{{{f{BDh}}}BDh}{{{f{BDj}}}BDj}8{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{Bf}}}{{A`{{f{Ff}}n}}}}{{{f{AAn}}e}{{A`{{Gj{{f{Ff}}}}n}}}{{Ih{Bf}}}{{Ib{}{{Cj{c}}}}}}{{}BDj}{{}AAn}{Gd{{f{c}}}{}}0000{Gd{{f{Dfc}}}{}}0000{Gdb}0000{{{f{AAn}}{f{Bf}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}}{{A`{Ffn}}}}{{{f{AAn}}e}AAn{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BDl{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bl{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gj{El}}}}9{{{f{{BDd{BAd}}}}}AAn}{{{f{{BDd{El}}}}}AAn}{{{f{BDj}}{f{BDj}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gd}`{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gj{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{An}}}}}{{A`{AAnn}}}}{{{f{BDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AAn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAAn{{Ib{}{{Cj{Ff}}}}}}{cAAn{{Ib{}{{Cj{Ab}}}}}}{{{f{{Bl{BDn}}}}}{{A`{AAnn}}}}{{{f{{Bl{BDn}}}}{f{{BDd{El}}}}}{{A`{AAnn}}}}{{c{f{{BDd{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BDn}}}}}}}}{{{f{AAn}}Gd}{{Ch{{Gj{Jj}}}}}}{{{f{AAn}}{f{Bf}}}{{Ch{Gd}}}}{{{f{AAn}}}{{Gj{{f{Dd}}}}}}{{{f{AAn}}}{{Gj{Dd}}}}{{{f{AAn}}}{{Gj{{f{Bf}}}}}}{{{f{AAn}}}{{f{{Bl{Ff}}}}}}{{{f{DfAAn}}}{{f{Df{Gj{Ff}}}}}}{{{f{AAn}}Gd}{{A`{BDnn}}}}{{{f{AAn}}Gd{f{DfBDn}}}{{A`{bn}}}}{{{f{AAn}}Gd{f{DfBDn}}}b}{{{f{AAn}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAn}}e}{{A`{BE`n}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}{f{BEb}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}1{{{f{AAn}}{Gj{Ff}}dd}{{A`{BE`n}}}}{{{f{BDj}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gd}}}AAn}{{{f{AAn}}}Gd}{{{f{AAn}}{f{{Bl{Ff}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bl{Ff}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bl{Ff}}}}}{{f{DfAAn}}}}{{{f{AAn}}{f{Bf}}}f}{{{f{AAn}}{BEd{Gd}}}f}{{{f{AAn}}{BEf{Gd}}}f}{{{f{AAn}}{BEh{Gd}}}f}{{{f{AAn}}BEj}f}{{{f{AAn}}Gd}f}{{{f{AAn}}{Od{Gd}}}f}{{{f{AAn}}{BEl{Gd}}}f}{{}Gd}0000{{{f{DfAAn}}Gdc}{{A`{{f{DfAAn}}n}}}BDf}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{An}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jd}}}}{{{f{AAn}}B@`d}BEn}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}}BF`}{AAnBFb}{{{f{AAn}}}Gd}5{{{f{AAn}}}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}BDh}{{A`{{Ch{Ab}}n}}}}122{{{Gj{Ff}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}111{{{f{DfBEn}}}Ch}{{{f{DfBF`}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gj{AAn}}n}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{E`{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{E`{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{E`{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Ff}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{Bf}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{Bf}}c}{{A`{{f{DfAAn}}n}}}BFd}{{{f{DfAAn}}Gdc}{{A`{{f{DfAAn}}n}}}BDf}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFd};{{{f{AAn}}{Gj{Ff}}{f{BFf}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Gddd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDd{El}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}Gd}{{Ch{{f{Ff}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFh{Gd}}}}{{{f{AAn}}c}{{A`{{Gj{Ff}}n}}}{{BFj{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDd{El}}}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDd{El}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}}{{Hf{GdGd}}}}{{{f{AAn}}Hb}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gd}{{{f{BEn}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{BF`}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{AAn}}HbGd}AAn}00{{{f{AAn}}cFh}{{A`{AAnn}}}{{BFj{Dd}}}}{{{f{DfAAn}}cFh}{{A`{{f{DfAAn}}n}}}{{BFj{Dd}}}}{{{f{AAn}}Hb}{{Hf{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGdd}{{Gj{AAn}}}}{{{f{AAn}}BDh}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gd}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}}{{A`{AAnn}}}}{AAn{{Gj{Ff}}}}{{{f{AAn}}{f{{l{Fb}}}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BFl}{{A`{{AAf{AAh{AAd{{AAb{Gd}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{Ej{Gj{Ej}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{Dd{Gj{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDf{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gde}{{A`{{f{DfAAn}}n}}}BDf{{ABb{{f{Ff}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{BFn{{A`{AAnn}}}}1{{{Hf{{BG`{{Cn{Cl}}}}{f{{BDd{BAd}}}}}}}{{A`{AAnn}}}}{{c{f{{BDd{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BDn}}n}}}}}}}}{{{f{AAn}}{f{Bf}}}{{A`{Gdn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GlBBj}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bl{Ej}}}}}}BDj{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gj{Dd}}}}BDj{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BFj{Dd}}}}{{{f{AAn}}c{f{Bf}}BGb}{{A`{AAnn}}}{{BFj{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gd}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDf}{{{f{DfAAn}}c{f{{BDd{El}}}}}{{A`{{f{DfAAn}}n}}}BDf}{{{f{DfAAn}}Ff}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jl}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jl}}}{{f{DfAAn}}}}`````{{fh}b}0{{FfFf}}{{{f{Ff}}c}{}{B`Mh}}{{Ffc}{}{B`Mh}}{{{f{Ff}}{f{Ff}}}}{{{f{Ff}}{f{C`}}}Ff}0000000{{{f{Ff}}{f{C`}}AjA@`}Ff}1{{{f{Ff}}{f{C`}}Bj}Ff}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}F`}{{l{Fb}}}}{{{f{Ff}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ff}}}{{f{Ab}}}}{{{f{BGd}}}{{f{Ab}}}}{{{f{Ff}}}{{Ch{{f{BGd}}}}}}{{{f{Ff}}}{{Ch{{f{Ab}}}}}}{{{f{BGd}}}Ab}{{{f{Ff}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ff}}}{{Ch{BGf}}}}>{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{{FfFf}}0{{{f{Ff}}{f{Ff}}}}10{{{f{Ff}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGd}}{f{El}}}{{A`{BGdn}}}}10{{{f{Ff}}{f{El}}Fn}{{A`{Ffn}}}}{{{f{BGd}}{f{El}}Fn}{{A`{BGdn}}}}{{{f{Ff}}}{{A`{{f{AMj}}n}}}}{{{f{Ff}}}Ff}0{{{f{BGd}}}BGd}{{f{f{Dfc}}}b{}}0{fb}0{{{f{Ff}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ff}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{{{f{Ff}}c}{}{B`Mh}}{{Ffc}{}{B`Mh}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{Gdb}0?{{{f{Ff}}}{{f{El}}}}{{{f{BGd}}}{{f{El}}}}{{{f{Ff}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Ff}}{f{Ff}}}d}{{{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}011{{{f{Ff}}}{{A`{Ffn}}}}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}JjGd}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ff}}}{{Dn{Oj}}}}{{{f{Ff}}AIb}{{A`{Ffn}}}}{{{f{Ff}}{f{{l{An}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGd}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{BGdFf}{AbFf}2{{AbGd}{{A`{BGdn}}}}{{DdGd{f{El}}}Ff}{{{f{Ff}}GdGd}Ff}{{{f{Ff}}Gd}{{A`{Jjn}}}}{{{f{Ff}}}Gd}{{{f{Ff}}}Jn}{{{f{Ff}}}{{Ch{{Cn{Fl}}}}}}{{{f{Ff}}Gd}{{Ch{{f{K`}}}}}}{{{f{Ff}}Gd}Jj}{{{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}0{{{f{Ff}}}d}{{{f{BGd}}}d}{{{f{Ff}}{Ch{Gd}}}Ff}{{{f{Ff}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{}Gd}0{{}c{}}0{BDfFf}{FfFf}{BGdFf}{FfAAn}{{{f{DfFf}}}{{f{DfAb}}}}>={{{f{Ff}}}{{A`{{l{An}}n}}}}000{{{f{Ff}}}{{l{An}}}}0{{{f{Ff}}}Mb}{{{f{Ff}}}Gd}{{{f{BGd}}}Gd}{{{f{Ff}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}0{{{f{Ff}}}{{A`{Mjn}}}}0{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{B`Mh}}{{{f{Ff}}c}{}{B`Mh}}{{{f{Ff}}}{{f{Dd}}}}{{{f{BGd}}}{{f{Dd}}}}{{Ddc}Ff{}}{{DdMjGd}BGd}{{Dd{f{El}}}Ff}{{DdEl}BGd}{{{f{Ff}}GdGd}Ff}{{DdMjGd}Ff}=={{{f{Ff}}}Gd}{{{f{Ff}}}{{Cn{Jd}}}}>{{{f{Ff}}}Ff}>;<={{{f{DfFf}}Dd}b}{{{f{Ff}}{f{{Bl{Hb}}}}}{{A`{Ffn}}}}0{{{f{BGd}}Gd}BGd}3{{{f{Ff}}Ajdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{Ff}}Gddd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{DfFf}}Mb}b}{{{f{Ff}}Hb}Ff}{{{f{DfFf}}}b}{{{f{Ff}}{Ch{Kf}}}Ff}{{{f{Ff}}HbGd}Ff}{{{f{Ff}}F`}{{A`{Ffn}}}}{{{f{Ff}}Hb}{{Hf{FfFf}}}}{{{f{Ff}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGd}}{f{El}}}{{A`{BGdn}}}}{{{f{Ff}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ff}}c}{}{B`Mh}}{{Ffc}{}{B`Mh}}{{{f{Ff}}{f{Ff}}}}{{FfFf}}{{{f{Ff}}{Ch{Gd}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}{{A`{Ffn}}}}{FfAb}{BGdAb}{{{f{Ff}}{f{{Bl{Jl}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{{Bl{Jl}}}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}Ff}{fc{}}0{{{f{Ff}}}Ff}{{{f{BGd}}}Ab}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}0{{{f{Ff}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ff}}}{{A`{Ffn}}}}0{{{f{Ff}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{Ff}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FfDd}Ff}{{{f{Ff}}c}Ff{B`Mh}}{{{f{Ff}}{f{{l{An}}}}{f{Ff}}}{{A`{Ffn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BGh}}}BGh}{{f{f{Dfc}}}b{}}{fb}{{}BGh}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{BGh}}{f{BGh}}}d}{{f{f{c}}}d{}}00{{{f{BGh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BGh}}{f{Dfc}}}bADl}`{{}Gd}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BE`}}}{{A`{AAnn}}}}`{{{f{BGj}}}{{f{{Bl{{BGl{Jl}}}}}}}}{{{f{BE`}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BGj}}}BGj}{{{f{C`}}}C`}{{{f{BE`}}}BE`}{{{f{BGn}}}BGn}{{f{f{Dfc}}}b{}}000{fb}000;{{}BGj}{{}C`}{Gd{{f{c}}}{}}000{{{f{BH`}}}f}1111{Gd{{f{Dfc}}}{}}0000000`{{BHbc}{}BHd}{Gdb}0000{{{f{DfBGj}}}b}111{{{f{BGj}}{f{BGj}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BHf}}}Jl}{{{f{BGj}}}{{f{{Bl{Jl}}}}}}{{{f{BE`}}}{{A`{AAnn}}}}{{{f{DfBGj}}}{{f{Df{Gj{Jl}}}}}}{{{f{BGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{C`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Bf}}BGn}Dd}{cc{}}0000{{{Gj{{Hf{Jl{BGl{Jl}}}}}}}BGj}{{{Gj{{Hf{{Gj{Jl}}{Gj{{BGl{Jl}}}}}}}}}BGj}{{{Gj{{Gj{{Hf{Jl{BGl{Jl}}}}}}}}}BGj}3{BGjC`}44{BHhBGn}{cBGj{{Ib{}{{Cj{{Hf{Jl{BGl{Jl}}}}}}}}}}{cBGj{{Il{}{{Cj{{Hf{Jl{BGl{Jl}}}}}}}}}}{{{f{C`}}Gd}BHf}{{{f{BE`}}}{{f{C`}}}}{{{f{DfBE`}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Fb}}}}{{{f{BHj}}dd}{{A`{C`n}}}}{{{f{BE`}}}{{A`{AAnn}}}}{{{f{DfC`}}}{{f{DfBGj}}}}{{}Gd}0000000{{}c{}}0000000{C`BGj}1{BGj}{{{f{BGj}}}}310{{{f{BHf}}}d}{{{f{C`}}}d}{{{f{BGj}}}d}{{{f{BGj}}}{{BHn{{BHl{{Gb{Jl}}}}{Gb{{BGl{Jl}}}}}}}}{{{f{C`}}}BI`}{{{f{BE`}}}{{Gj{Ff}}}}{{{f{BE`}}{Ch{{Hf{HbGd}}}}}{{Gj{Ff}}}}={{{f{BHf}}}Gd}{{{f{C`}}}Gd}?????{{{Gj{Jl}}{Gj{{BGl{Jl}}}}d}BGj}{{{f{AAn}}{Gj{Ff}}C`{Ch{{Gj{Dd}}}}}BE`}{{{f{DfBI`}}}Ch}{{{f{DfBI`}}Gd}Ch}{{{f{BE`}}c}{{A`{AAnn}}}{{E`{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{f}{{{f{C`}}}BHb}{{{f{BE`}}AjA@`}{{A`{AAnn}}}}{{BE`e}BE`{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{C`}}HbGd}BH`}{{{f{DfBGj}}}b}{{{f{DfC`}}}b}{{{f{BE`}}Bj}{{A`{AAnn}}}}{{{f{BE`}}}{{A`{AAnn}}}}{C`{{Gj{Jl}}}}0{BE`C`}{{{f{DfBE`}}}C`}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GlBBj}}}}{fAAl}0000000{C`C`}{{{f{C`}}}{{f{BGj}}}}{{{f{C`}}}{{f{{Gj{{AAb{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BGj}}c}Ab{{E`{{Hf{Jl{f{{BGl{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BGj}}c}Ab{{E`{{Hf{Jl{f{{BGl{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{E`{{AAb{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{E`{{AAb{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bl{c}}}}e{Ch{BIb}}}{{ALl{c}}}{BIdBIf}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Ij}}e{Ch{BIb}}}{{ALl{c}}}{BIdBIf}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BIh}}{f{C`}}}Ab}{{BIjBIj}BIj}0`{{{f{BIl}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIl}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBIn}}Jj}{{Ch{b}}}}{{{f{DfBJ`}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BIn}}}BIn}{{{f{BJ`}}}BJ`}{{{f{BDn}}}BDn}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bl{c}}}}}El{{Id{El}}}}{{}BDn}{Gd{{f{c}}}{}}00{Gd{{f{Dfc}}}{}}00{Gdb}00{{{f{BDn}}{f{BDn}}}d}{{f{f{c}}}d{}}00{{{f{BDn}}{f{DfHl}}}{{A`{bHn}}}}{{{Hf{{f{El}}Gd}}}BIn}{cc{}}{{{Hf{{f{El}}Gd}}}BJ`}11{{gGd}{{BDd{El}}}{{BA`{Dd}}}{{BA`{El}}}{{D`{}{{Cj{{Gj{{Hf{ce}}}}}}}}}}{{}Gd}00{{}c{}}00{BInAb}{BJ`Ab}{{{f{El}}Gd}BIn}{{{f{El}}Gd}BJ`}{{{Gj{Jj}}}BDn}{{{f{DfBIn}}Gd}Ab}{{{f{DfBJ`}}Gd}Ab}{{{f{{Bl{BDn}}}}{Ch{Gd}}}{{A`{{BDd{El}}n}}}}0{{{f{{Bl{BDn}}}}{Ch{Gd}}}{{A`{{Gj{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bl{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bl{AAn}}}}d}{{A`{AAnn}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bl{Dd}}}}{f{{Bl{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BFbc}{{A`{AAnn}}}{{E`{BJb{f{Df{BJf{BJd}}}}{f{Df{BJf{BJh}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BJj}}{f{{Bl{Jl}}}}dd}AAn}{{{f{BJj}}{f{AAn}}{f{Ab}}{f{Ab}}BJl}{{A`{AAnn}}}}`{{{f{Bf}}{f{Bf}}}Dd}{{BJn{N`{{Bl{Dd}}}}}BBd}{{{f{BFn}}Gd}{{Hf{BFnBFn}}}}{{{f{AHd}}}Aj}{{{f{BK`}}}Aj}{{{f{BKb}}{f{{Bl{A@h}}}}Mb}AAn}0{{{f{BKb}}{f{{Bl{A@h}}}}}AAn}0{{{f{BKd}}{Ch{{Gj{{f{Bf}}}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{BFbd}BFb}{{{BKf{c}}{Ch{{N`{BKh}}}}}{{BKf{c}}}BKj}{{{f{Ab}}}{{A`{Abn}}}}{BBdBBd}{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKnBKn}}{{{f{BGb}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}0{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}1{{BLbc}BFb{{Ih{{Bl{BBd}}}}}}6`{{BBdc}BBd{{BA`{Dd}}}}{{}BBd}{{BBdd}BBd}{{}BLd}{c{{A`{BBdn}}}{{Ih{{Bl{BBd}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBLf}{{BLhd}BLh}`{{{f{BLj}}}d}00`{{BBdc}BBd{{BA`{BBd}}}}{{{N`{BLj}}BLl}{{A`{BFbn}}}}75{{BBdcd}BBd{{BA`{BBd}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{BLbc{N`{{BDd{El}}}}}BFb{{E`{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{BBdc{BM`{{N`{BLn}}}}}BBd{{E`{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBdBBdc{BM`{{N`{BLn}}}}}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{{f{BBd}}{f{Dfc}}f}{{A`{BMbn}}}{{Af{{f{BBd}}f}{{Ad{{A`{BMbn}}}}}}}}{{{f{AHj}}{f{E`}}}AHj}{{{f{AHj}}{f{E`}}}{{l{c}}}Dl}{{BBdc{f{{Bl{BBd}}}}{BM`{{N`{BLn}}}}}BBd{{E`{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBdBMd{f{{Bl{BBd}}}}dd}BBd}{{ce{BM`{{N`{BLn}}}}d}BBd{{E`{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}{{Ih{{Bl{BBd}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{BBdBBdHbEl}BBd}{BFn{{N`{Cl}}}}{{{f{BMf}}}{{Ch{Gd}}}}{BMhBBd}{BMjBBd}{BBdBBd}3210{{{f{AHl}}F`}{{l{Fb}}}}{{BBdF`}BBd}{{{f{BK`}}F`}{{l{Fb}}}}{{cFh}BBd{{Ih{{Bl{BBd}}}}}}{{{f{AHl}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}6{{{f{BK`}}}{{A`{{l{Fb}}n}}}}{cBBd{{BA`{BBd}}}}{{{f{BMl}}}{{f{{Bl{Oj}}}}}}``{BBdBMh}{eAMn{}{{Ib{}{{Cj{c}}}}}}{cBFn{{Ib{}{{Cj{b}}}}}}{cBFn{{Ib{}{{Cj{{Ch{b}}}}}}}}2{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{AGdc}BFn{{Ib{}{{Cj{b}}}}}}{{AGdc}BFn{{Ib{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BMn{c}}}}}{{A`{{BDd{BAd}}n}}}BN`}{{{f{BLj}}}{{f{AGf}}}}{{{f{BK`}}}{{f{AGf}}}}{{{f{BNb}}}{{f{AGf}}}}{{{f{BFn}}}{{f{AGf}}}}{{{f{DfBK`}}}{{f{DfAGf}}}}{{{f{DfBFn}}}{{f{DfAGf}}}}{{{f{Mj}}}Jj}{{{f{BNd}}}{{f{{l{Bh}}}}}}{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BNh{BNjA@f}}{{{f{BNl}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBLf}{{{f{{N`{c}}}}}NfBNn}{{{f{BO`}}}{{f{BBd}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBLf}{{{f{ANf}}}{{f{El}}}}{{{f{BOb}}}{{f{Ab}}}}{{{f{DfBK`}}}{{A`{Gdn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BOd}}}{{f{{l{Bd}}}}}}{{{Gj{BBd}}}BBd}{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{BOf{c}}e}}}{{N`{ce}}}{}BLf}{{{N`{{Bl{{BOf{c}}}}e}}}{{N`{{Bl{c}}e}}}{}BLf}{{{f{Bf}}}BBd}{{BBd{Ch{Jl}}}BBd}{{{f{BOh}}}{{A`{{l{Bd}}n}}}}{{{f{BOh}}}{{l{Bd}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMf}}}{{L`{LlLb}}}}`{{{BKf{{Cn{BKj}}}}{Ch{{N`{{BDd{El}}}}}}}{{A`{BOjn}}}}{{{BOl{c}}{f{{BDd{El}}}}}{{A`{{BOn{c}}n}}}C@`}{{{C@b{c}}{f{{BDd{El}}}}}{{A`{{C@d{c}}n}}}C@`}{{{C@f{c}}Gd}{{A`{C@hn}}}BKj}{{{C@j{c}}{f{{BDd{El}}}}}{{A`{{C@l{c}}n}}}C@`}{{{f{Df{BKf{c}}}}}{{A`{C@nn}}}BKj}`{BBdCA`}{{BBdCAbBBd}BBd}{{BKnBKn}}{{BLdBLd}BLd}{{{f{BK`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLd}}BLd}b}210{{{f{BLd}}}Jl}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBLf}1111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BFbJlcFh}BFb{{Ih{{Bl{BBd}}}}}}{BFn{{Cn{Cl}}}}{{{f{BK`}}}{{Ch{{Cn{Fl}}}}}}``{BFbBFb}```{{{f{CAd}}{f{Dd}}}{{A`{Ddn}}}}{{CAf{Gj{BBd}}}{{A`{BBdn}}}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{BNb}}{f{Df{Bl{Ff}}}}}{{A`{{Ch{Ff}}n}}}}{{{f{CAh}}FfFf}{{A`{Ffn}}}}{{CAf{Gj{BBd}}}BBd}{{{f{CAj}}}b}{{BBdEl}BBd}{{{f{BK`}}{f{El}}Fn}{{A`{Abn}}}}{{BFb{CAl{{f{Bf}}ElA@l}}d}BFb}{{{f{AI`}}{f{El}}}{{A`{Abn}}}}3{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{BFbEld}BFb}2{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}{{BBdElFn}BBd}`{BBdCAn}{{{f{{N`{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{BBdBBd}{{{f{CB`}}}{{A`{Abn}}}}1`{{{f{CBb}}}{{A`{{l{Kl}}n}}}}{{{f{BFn}}Gd}d}{{{f{CBd}}{f{Ab}}}{{A`{Abn}}}}{{{f{BK`}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBd}}c}{{A`{Abn}}}Bb}{{{f{BK`}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}``{{{f{BK`}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBK`}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBd}BBd}10{{{f{CAj}}}CAj}{{{f{BFb}}}BFb}{{{f{BLb}}}BLb}{{{f{BLl}}}BLl}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{BEb}}}BEb}{{{f{BFf}}}BFf}{{{f{CC`}}}CC`}{{{f{BGb}}}BGb}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{BJl}}}BJl}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{BO`}}}BO`}{{{f{BBd}}}BBd}{{{f{CGl}}}CGl}{{{f{CAb}}}CAb}{{{f{{BM`{c}}}}}{{BM`{c}}}Jf}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{BMd}}}BMd}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{CIl}}}CIl}{{{f{BKn}}}BKn}{{{f{CAf}}}CAf}{{{f{BLd}}}BLd}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BLfJf}}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{A@b}}}A@b}{{{f{BFl}}}BFl}{{{f{BFn}}}BFn}{{{f{Mj}}}Mj}{{{f{BAd}}}BAd}{{{f{A@`}}}A@`}{{{f{BIb}}}BIb}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{BK`}}}{{N`{BK`}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CJl}}}{{Ch{{f{CJn}}}}}}{{{f{CBf}}}{{Ch{{f{CJn}}}}}}{{{f{CBj}}}{{Ch{{f{CJn}}}}}}``{{{f{BGb}}{f{BGb}}}B@f}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@f{CK`A@f}BLf}{{{f{{Bl{BBd}}}}}BBd}{{BLhCDd}BLh}{{{f{CDd}}{f{CDj}}}d}`{{{f{{Bl{Ff}}}}}{{A`{Ffn}}}}{cBBd{{BA`{Dd}}}}{BFb{{A`{AAnn}}}}{c{{A`{{Gj{AAn}}n}}}{{Il{}{{Cj{BFb}}}}}}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{BFb{{A`{CAjn}}}}{{{f{DfBFb}}}{{A`{{N`{{BDd{El}}}}n}}}}{eBBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CIn}}Gd}CKb}``{{{f{BKd}}{Gj{{f{Bf}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@f{}}0{BLdBLd}```{{{f{CGb}}}{{A`{{N`{{BDd{El}}}}n}}}}{{cCJd}{{A`{BFbn}}}{{Ih{{Bl{BFb}}}}}}{{{f{BOh}}{f{{l{Bd}}}}}{{l{Bd}}}}{{ed}{{A`{BBdn}}}{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{{f{CJl}}{Gj{BFb}}}{{A`{BFbn}}}}{{{f{CBf}}{Gj{BFb}}}{{A`{BFbn}}}}44{e{{A`{BBdn}}}{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{c{f{Bf}}d}BBd{{Ih{{Bl{BBd}}}}}}{{BMhc}BBd{{BA`{BBd}}}}{{{f{CKd}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{BOh}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{BMjc}BBd{{BA`{BBd}}}}{{{f{BLd}}BLd}d}{{{f{CKd}}{f{{l{Bh}}}}}{{l{An}}}}{{{f{BOh}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gd}{{A`{{l{Fb}}n}}}}{BFbBFb}{{{CKf{c}}}{{A`{Gdn}}}BKj}{BBdBBd}{{{f{BOh}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}d}{{A`{{l{Fb}}n}}}}{{{f{ANb}}Bj{Ch{Bj}}{Ch{{f{CD`}}}}Bjd}{{A`{Gdn}}}}{{{f{{Bl{Bj}}}}Bj{Ch{Bj}}{Ch{{f{CD`}}}}Bjd}{{A`{Gdn}}}}{{{AOb{Bf}}}El}{{{f{BJj}}{f{{Bl{A@h}}}}d}AAn}`{{BFbBFb{Ch{Dd}}}BFb}{{{f{CKh}}{f{AAn}}{Ch{Dd}}{Ch{{Hf{HbGd}}}}}{{A`{AAnn}}}}{{{f{CKh}}{f{AAn}}{Ch{{Hf{HbGd}}}}d}{{A`{{Hf{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBdd}BBd}{{BBdced}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ih{{Bl{BBd}}}}}}212121{{ce}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ih{{Bl{BBd}}}}}}32{{CKjBBdGdd}BBd}```{{BBdBBdBGbCCb}BBd}`{CHlBBd}`{{BBdBBdBGbCCb{Ch{Ld}}{Ch{Dd}}}BBd}0{AMdHb}00{{{f{CKl}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}`{{{f{CL`}}}{{l{Lb}}}}{{{f{BGb}}}Hb}`{{{f{BGb}}}d}```{{}b}{cbBLf}{{}BFb}{{}BLl}{{}CBh}{{}CBl}{{}CLb}{{}BEb}{{}BFf}{{}CCf}{{}CCj}{{}CCl}{{}CCn}{{}BJl}{{}CDd}{{}CDf}{{}CDh}{{}CDl}{{}CDn}{{}CEb}{{}CEd}{{}CEf}{{}CEh}{{}CEj}{{}CEn}{{}CFd}{{}CFf}{{}CFh}{{}CFj}{{}CGb}{{}BBd}{{}{{BM`{{N`{BLn}}}}}}{{}{{BM`{{N`{CAh}}}}}}{{}{{BM`{{N`{CLd}}}}}}{{}CHj}{{}CHl}{{}CHn}{{}CIb}{{}CId}{{}CIf}{{}CIh}{{}CIl}{{}BLd}{{}{{N`{CLf}}}}{{}{{N`{c}}}CLh}{{}{{N`{Bf}}}}{{}{{N`{{Bl{c}}}}}{}}{{}CJb}{{}CJd}{{}A@b}{{}BFl}{{}BAd}{{}A@`}`{{}{{AAj{{Gj{AB`}}{Gj{A@h}}}}}}{Gd{{f{c}}}{}}00{{{f{{AM`{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BM`{c}}}}}f{}}222222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBLf}3333333333333{Gd{{f{Dfc}}}{}}0{{{f{Df{AM`{c}}}}}{{f{Df}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CGb}}}{{A`{Ejn}}}}{{{f{BFb}}}{{A`{Ejn}}}}0001{{{f{{N`{c}}}}}{{f{Bf}}}{ALhA@f}}{{{f{BAd}}c}{{A`{CLjn}}}{{Jd{}{{Cj{{f{CLl}}}}}}}}```{{{f{Ab}}HbCLn}{{A`{Abn}}}}{{BMjHbCLn}BBd}{{BBdHbCLn}BBd}{{BLdBLd}BLd}{{{f{CGb}}}{{A`{{`{BDb}}n}}}}``{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BLf{AGfInJ`}}{{{N`{AGfc}}}{{N`{ec}}}BLf{AGfInJ`}}{{{f{{N`{ce}}}}}{{CM`{ce}}}A@f{JfBLf}}{Gdb}000000{{{f{DfCAj}}}b}11{{BFbe}BFb{{BA`{BKn}}}{{Ib{}{{Cj{c}}}}}}2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBLf}33333333333333{BBdBBd}2{{BFb{Ch{{Gj{BBd}}}}}BFb}1{{{f{BK`}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMf}}}{{L`{LlLb}}}}`{BBdCMb}{{{f{AOh}}}{{f{El}}}}{{{f{BK`}}}{{f{El}}}}{{{f{BFn}}}{{f{AGd}}}}{{{f{Mj}}}{{f{El}}}}{{{f{BAd}}}{{f{AGd}}}}``{{{f{El}}}BBd}{cBBd{{Ih{{Bl{El}}}}}}`{CHnBBd}{{}CHj}{{}BLd}{fc{{B@n{B@l}}}}0`{{{f{CKd}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{CKd}}{f{{l{Bh}}}}}{{l{An}}}}{{BGb{f{El}}{f{Bf}}}{{A`{bn}}}}{{BGb{Ch{{f{Bf}}}}{f{Bf}}}{{A`{bn}}}}{{{f{{BDd{c}}}}{f{{BDd{c}}}}}{{A`{bn}}}{}}{{{f{CMd}}{f{Bf}}}{{A`{bn}}}}`{{{f{CBn}}{f{CBn}}}d}{{{f{BEb}}{f{BEb}}}d}{{{f{BFf}}{f{BFf}}}d}{{{f{BGb}}{f{BGb}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{BJl}}{f{BJl}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{BO`}}{f{BO`}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{BBd}}{f{BBd}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{{BM`{Ab}}}}{f{{BM`{Ab}}}}}d}{{{f{{BM`{{N`{c}}}}}}{f{{BM`{{N`{c}}}}}}}dA@f}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CLj}}{f{CLj}}}d}{{{f{BMd}}{f{BMd}}}d}{{{f{CHj}}{f{CHj}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{CIl}}{f{CIl}}}d}{{{f{BKn}}{f{BKn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMfA@f}BLf}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{CMh}}}}{f{CMh}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{BFn}}{f{{f{Cl}}}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAd}}{f{BAd}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BIb}}{f{BIb}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{CJj}}{f{CJj}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CMjBBdd}BBd}``{{BBdc}BBd{{BFj{Dd}}}}{{BBdc}BBd{{Ih{{Bl{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCj}}}CMl{}}{{{f{{Bl{CMn}}}}d{Ch{{f{CJn}}}}}{{A`{{N`{{Bl{CMn}}}}n}}}}{{{f{{Bl{CMn}}}}d{Ch{{f{CJn}}}}d}{{A`{{Hf{{N`{{Bl{CMn}}}}Gd}}n}}}}{{{f{{Bl{c}}}}{f{{Bl{c}}}}}d{{Ih{ANb}}}}{{{f{BFb}}d}{{A`{Ejn}}}}{{BFbe}BFb{{BA`{BKn}}Jf}{{Ih{{Bl{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBdBBd}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{DfBLd}}c}b{{Ib{}{{Cj{BLd}}}}}}{{BBdBBdBBd}BBd}{{{f{BOh}}{f{{l{Bd}}}}Gd}{{A`{{l{Bd}}n}}}}{A@h{{Hf{JlJl}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOh}}{f{Bf}}{f{El}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CAj}}}{{Ch{{A`{AAnn}}}}}}{{BFbGd}{{A`{AAnn}}}}{{{f{CAj}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BK`}}}{{Dn{Oj}}}}{{BJnHb}BBd}{{BJn{f{Bf}}}BBd}{{BJne}BBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BFn}}}{{f{{Bl{BAd}}}}}}`{{BFbc}BFb{{BA`{BBd}}}}{{BBdc}BBd{{BA`{BBd}}}}`10{{BBdAIb}BBd}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{An}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BK`}}{f{{l{An}}}}}{{A`{Abn}}}}{{BFbBBd}BFb}5{{{f{BOh}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{Fb}}n}}}}{CN`{{A`{AAnn}}}}{{{f{DfCNb}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dl}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BLhBFb}{{{BKf{c}}}{{A`{AAnn}}}BKj}{CJl{{A`{BFbn}}}}{CBf{{A`{BFbn}}}}{CBj{{A`{BFbn}}}}{{{f{Df{BOl{c}}}}{f{DfAAn}}}{{A`{bn}}}C@`}{{{CNd{c}}}{{A`{AAnn}}}BKj}{{{BMn{c}}}{{A`{AAnn}}}BN`}{{{f{Df{CNf{c}}}}{f{DfAAn}}}{{A`{bn}}}C@`}{{{f{Df{C@b{c}}}}{f{DfAAn}}}{{A`{bn}}}C@`}{{{f{Df{CNh{c}}}}{f{DfAAn}}}{{A`{bn}}}C@`}{{{CNj{c}}}{{A`{AAnn}}}BKj}{{{CKf{c}}}{{A`{AAnn}}}BKj}{{{C@f{c}}}{{A`{AAnn}}}BKj}{{{C@j{c}}{f{DfAAn}}}{{A`{Kfn}}}C@`}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{CNd{c}}{Ch{{N`{BKh}}}}d}{{A`{AAnn}}}BKj}{{{f{C@h}}Gd}d}{{}BBd}{BFbBFb}{BMjBBd}{BBdBBd}`0```{{}{{BM`{{N`{BLn}}}}}}{{{f{CB`}}}{{A`{Abn}}}}2{{BBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBCj}}}}{{{f{BNb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CC`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CCb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@h}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CD`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BJl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CNl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CDl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CG`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BBd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CGl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{BM`{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CGn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CH`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CLj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BMd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLd}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BDbA@f}BLf}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@fBLf}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGhA@f}BLf}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BAd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bf}}BGn}Dd}```{{BBdce}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ih{{Bl{BBd}}}}}}{{BLhd}BLh}``{{{f{Bf}}c}{{A`{BBdn}}}{{Ih{{Bl{BBd}}}}}}{{BBd{Ch{Jl}}}BBd}{cc{}}00000000{BLbBFb}{CGbBFb}222222222222222222222222222222222{JlAB`}3333333{{{f{Bf}}}CD`}44{CDjBJl}5555555555555555555555555555555{KfBBd}{OhBBd}{BO`BBd}{NfBBd}{dBBd}{{{f{Bf}}}BBd}{KdBBd}<{NjBBd}{HbBBd}{JlBBd}{AjBBd}{BjBBd}{ObBBd}{cc{}}0{CNn{{BM`{{N`{BNb}}}}}}{BMd{{BM`{{N`{BNb}}}}}}{CO`{{BM`{{N`{BNb}}}}}}{CHf{{BM`{{N`{BNb}}}}}}4{CHh{{BM`{{N`{BNb}}}}}}{COb{{BM`{{N`{BNb}}}}}}{CH`{{BM`{{N`{BNb}}}}}}{CHb{{BM`{{N`{BNb}}}}}}{COd{{BM`{{N`{BNb}}}}}}{CGn{{BM`{{N`{BNb}}}}}}::::::{COfCLj};{CO`BMd}{CGnBMd}{CH`BMd}{CHfBMd}????????{CIhCIf}{cc{}}00{EjBKn}{{{f{Bf}}}BKn}2{DdBKn}{BBdBKn}4444{COh{{N`{ANd}}}}{{{f{ANb}}}{{N`{ANb}}}}{COj{{N`{CLf}}}}{{{f{{Bl{c}}}}}{{N`{{Bl{c}}}}}Jf}{{{AAb{c}}}{{N`{{Bl{c}}}}}{}}{{{f{ANd}}}{{N`{ANd}}}}{{{f{Bf}}}{{N`{Bf}}}}{{{N`{Bf}}}{{N`{{Bl{Bj}}}}}}{Gl{{N`{Bf}}}}{CMn{{N`{ANb}}}}{{{Dn{c}}}{{N`{c}}}{COlA@f}}{{{Gj{ce}}}{{N`{{Bl{c}}e}}}{}{BLfJf}}{Ej{{N`{Bf}}}}{{{f{CLf}}}{{N`{CLf}}}}{COnc{}}{c{{N`{c}}}{}}{{{Cn{ce}}}{{N`{ce}}}A@fBLf}{cc{}}00000{D@`BFn}{D@bBFn}2{HbMj}{AjMj}{NfMj}{OhMj}{ObMj}{BjMj}{KdMj}{JlMj}:{KfMj}{NjMj}<<<<<<{{{f{{BDd{BAd}}}}}D@d}{Jl{{Ch{BLd}}}}{JlBLd}00{{c{Ch{Ij}}}D@f{}}{{{D@h{Hb}}{D@h{Bj}}{Ch{Ij}}}D@j}{{{D@h{Hb}}{D@h{Bj}}{Ch{Ij}}}D@l}{c{{AM`{{l{An}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AM`{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{cBLd{{Ib{}{{Cj{BLd}}}}}}{e{{N`{{Bl{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{{gGd}{{D@n{Hb}}}Ih{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{D@n{Hb}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{D@n{Hb}}}BIf{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{Bf}}}{{Ch{BLd}}}}{c{{AM`{{l{e}}}}}{{Il{}{{Cj{}}}}}Al}{e{{N`{{Bl{c}}}}}In{{Il{}{{Cj{c}}}}}}`{c{{A`{{CKf{AFj}}n}}}{{BA`{CMn}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BLfA@f}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{Bf}}}{{A`{DA`}}}}{c{{AM`{{l{An}}}}}{{Jh{}{{Cj{d}}}}}}{c{{AM`{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{El{{BM`{{N`{BLn}}}}}}{{Ddc}DAb{}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}`{{DdcGd}AIl{}}{{GdcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{}CHj}{{BFbBFbcc}BFb{{BA`{BBd}}}}{{{f{DAd}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGd}AIn}{{GdAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}BFn}``{{BBdc{BM`{{N`{BLn}}}}DAf}BBd{{E`{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}`{{BBdc}BBd{{BA`{BBd}}}}{{BBdGdGd}BBd}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAhA@f}BLf}{{{f{BK`}}Gd}{{A`{Jjn}}}}{{BMhBBdd}BBd}{{BMjBBdd}BBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}6{{{f{AJ`}}Gd}{{A`{Jjn}}}}{{{f{AOh}}Gd}{{A`{Jjn}}}}{{{f{AJ`}}Gd}Jj}{{{f{AOh}}Gd}Jj}{CAnBBd}{{{f{BFb}}}BLd}{{{f{CJ`}}}El}{{}El}{{{f{CCh}}HbCCb{Ch{{f{AMf}}}}}{{A`{CC`n}}}}00{{{f{CLd}}{f{{BDd{El}}}}DAj{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BLn}}{f{{BDd{El}}}}DAj{f{{Bl{Oj}}}}}{{A`{Ojn}}}}{{{f{D@d}}{f{Bf}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bl{BAd}}}}}}{{{f{BMl}}}Gd}{{{f{{Bl{Bj}}}}}{{Ch{Gd}}}}{{{f{Df{C@f{c}}}}}{{A`{{f{{N`{CIn}}}}n}}}BKj}{{{f{BK`}}}{{Ch{{Nb{Fl}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLf}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBLf}{{{f{BK`}}Gd}{{Ch{{f{K`}}}}}}{{{f{BK`}}GdGd}{{Ch{{f{K`}}}}}}{{{f{BNb}}}{{Ch{{BM`{{N`{BLn}}}}}}}}{{{f{CCh}}CC`CCbLd{Ch{{f{AMf}}}}CCf}{{A`{DAln}}}}{{{f{CCj}}}{{N`{CCl}}}}{{{f{Dfc}}}{{A`{DAnn}}}{BN`BKjA@f}}{{{f{CNl}}{f{{BDd{El}}}}}{{A`{{N`{{BDd{El}}}}n}}}}{{{f{BAn}}Gd}Jj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BK`}}Gd}Jj}{{{f{CJl}}}d}{{{f{CBf}}}d}`{{BFbe}BLb{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{{f{DB`}}{Gj{Ff}}{f{BEb}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BFbBBdcBEb}BLb{{Ih{{Bl{BBd}}}}}}2{{BGbBGb{f{{Bl{Hb}}}}CCbLd{Ch{AMf}}}{{A`{{Gj{{AAb{Jl}}}}n}}}}{{CCh{f{{Bl{Hb}}}}CCbLd{f{{Ch{Dd}}}}ddCCf}{{Hf{{Gj{{AAb{Jl}}}}{Gj{Hb}}{Gj{Hb}}}}}}{{{f{BHj}}dd}{{A`{C`n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAhA@f}BLf}21`{{{f{BK`}}}d}{{{f{BEb}}{f{Dfc}}}bADl}{{{f{BFf}}{f{Dfc}}}bADl}{{{f{BGb}}{f{Dfc}}}bADl}{{{f{CCb}}{f{Dfc}}}bADl}{{{f{CCd}}{f{Dfc}}}bADl}{{{f{CCf}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CCn}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{BJl}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{CG`}}{f{Dfc}}}bADl}{{{f{BO`}}{f{Dfc}}}bADl}{{{f{BBd}}{f{Dfc}}}bADl}{{{f{CGl}}{f{Dfc}}}bADl}{{{f{CAb}}{f{Dfc}}}bADl}{{{f{CGn}}{f{Dfc}}}bADl}{{{f{CH`}}{f{Dfc}}}bADl}{{{f{CHb}}{f{Dfc}}}bADl}{{{f{CHd}}{f{Dfc}}}bADl}{{{f{CHf}}{f{Dfc}}}bADl}{{{f{CHh}}{f{Dfc}}}bADl}{{{f{BMd}}{f{Dfc}}}bADl}{{{f{CHj}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{CIj}}{f{Dfc}}}bADl}{{{f{CIl}}{f{Dfc}}}bADl}{{{f{BKn}}{f{Dfc}}}bADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DBbA@f}BLfADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{CJd}}{f{Dfc}}}bADl}{{{f{BFl}}{f{Dfc}}}bADl}{{{f{BAd}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CJj}}{f{Dfc}}}bADl}{{{f{DBd}}{f{Ab}}CDnd}{{A`{{Hf{{Hf{{Gj{Jl}}{Gj{Jl}}}}d}}n}}}}{{{f{DBd}}{f{Ab}}CDnd}{{A`{{Hf{{ALl{Jl}}{ALl{Jl}}}}n}}}}{{BLb{Ch{Gd}}}BFb}{{BMjBBd}BBd}{{BBd{Ch{Gd}}}BBd}{{{f{BOh}}}{{A`{{l{Bd}}n}}}}{{{f{BOh}}}{{l{Bd}}}}``{{{f{{Bl{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DBf}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}`{{{f{CL`}}}{{l{Lb}}}}`{{BLhCDj}BLh}`{{{f{AB`}}}Jl}`{{{f{{Bl{Ff}}}}Ld}{{A`{Ffn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}CJj{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{BBdBBd}{{{f{AMd}}}d}{{{BOl{c}}d}{{BOl{c}}}C@`}````0`{{}b}{cb{JfBLf}}``{cBBd{{Ih{{Bl{Hb}}}}}}``{{{f{{Bl{Jl}}}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{DAn}}Bj{Ch{Gd}}d{Ch{{f{{BDd{El}}}}}}GdGd{Ch{{f{CD`}}}}{Ch{Bj}}Bj{Ch{{f{CDb}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hf{{BDd{El}}GdGd}}n}}}}{{{CNj{c}}{Ch{{DBh{Gd}}}}}{{CNj{c}}}BKj}{{{CKf{c}}{Ch{{DBh{Gd}}}}}{{CKf{c}}}BKj}``{{}Gd}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BFbBFbcc}BFb{{BA`{BBd}}}}{{{f{DAd}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLd}}BLd}b}{{BBdBBdHbEl}BBd}{{BBdBBdBBd}BBd}``{{{f{Ab}}CEl}Ab}{{BBdCEl}BBd}`{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{BBdBBd}BBd}{{BLdBLd}BLd}{{{f{BLd}}BLd}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDfFf}{{}Ff}{{MjDd}Ff}{BFn{{Hf{{Gj{BAd}}{Gj{{Cn{Cl}}}}{Ch{Ij}}}}}}{{{AM`{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BLf}66{{{f{BBd}}}}{BLd}{{{f{BFn}}}}{DBjBMj}{BMjBMj}{{{N`{ce}}}{}A@fBLf}{{{N`{ce}}}{{Hf{e}}}A@fBLf}{{CCjc}{{BKf{c}}}BKj}{{BB`El}{{A`{Mjn}}}}{BFdAb}{{{N`{BK`}}}Ab}{{MjDd}Ab}{BFj{{Gj{c}}}{}}{{}{{Gj{Dd}}}}{{{f{BLd}}}d}{{{f{CAb}}}d}{{{f{CDj}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEn}{{A`{{l{An}}n}}}}{{BBdccCEn}BBd{{BA`{BBd}}}}{cd{{Ih{ANb}}}}4{{{f{BGb}}{Ch{{f{Bf}}}}}d}{{{f{CHj}}}d}7{{{f{BK`}}}d}{{{f{C@h}}}d}{BBdBBd}{{{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{AJb}}}{{A`{{l{An}}n}}}}25{{{f{BGb}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}54{{{f{AJd}}}{{A`{{l{An}}n}}}}6{{{f{CKl}}}{{l{An}}}}{{{f{CKn}}}{{l{An}}}}{{{f{CBb}}}{{A`{{l{An}}n}}}}9{{{f{Mj}}}d}::{{{f{BK`}}}{{l{An}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CJ`}}}d}{{}d}{{{f{CMd}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CDn}}{f{CDj}}}{{A`{bn}}}}6{{{f{BGb}}}d}{{{f{CKl}}}{{l{Kl}}}}{{{f{CKn}}}{{l{Kl}}}}{{{f{CBb}}}{{A`{{l{Kl}}n}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BLd}}}{{AFf{BLd}}}}{{{f{BFn}}}{{AGl{{Gj{{Cn{CMh}}}}DBlAGj}}}}{{{f{D@d}}}{{`{Jd}}}}{{{f{BLd}}}{{AFh{BLd}}}}{{{f{{DC`{}{{DBn{c}}}}}}}{{`{Jd}}}{AGhJfCLhCMf}}{{BMhBBdd}BBd}{{BFbBFbccBJl}BFb{{Ih{{Bl{BBd}}}}}}{{BMjBBdd}BBd}{{{f{DAd}}{f{AAn}}eiBJl}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DCb}}{f{AAn}}{f{Bf}}{f{Bf}}eeCEf{Ch{Jj}}}{{A`{AAnn}}}{{Ih{Bf}}}{{Ib{}{{Cj{c}}}}}}{BFbBLh}{{{f{DCd}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{DCd}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{BLhd}BLh}`{{BLh{Gj{BBd}}}BFb}{BJnBBd}{DCfBBd}{{{f{CIn}}}{{f{{Ch{{Gj{DCh}}}}}}}}``{{}BBd}{BFbBFb}{BMjBBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{BBdBBd}{DCjBFb}4{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAhA@f}BLf}`{{BFbBFbcc}BFb{{BA`{BBd}}}}{{{f{DAd}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BLhc}BLh{{Ih{{Bl{BBd}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}<{{{f{BK`}}}Gd};9{{{f{BFn}}}Gd}{{BFbJl}BFb}{{{f{BK`}}Gd}Ab}`{BBdBMj}{cBBdDCl}{DClBBd}{BGbBBd}{DCnBBd}{CJ`BBd}{MjBBd}{{BBdc}BBd{{BA`{BBd}}}}0``{{CBjd}CBj}{{{CKf{c}}d}{{CKf{c}}}BKj}```{BBdBBd}{{{f{DCd}}}{{l{Fb}}}}0{{{f{DCd}}{f{{Bl{Ff}}}}}{{A`{{l{Ah}}n}}}}{{{f{DCd}}HbCLn}{{A`{{l{Ah}}n}}}}{{{f{DCd}}Hbd}{{A`{Abn}}}}{{{f{DCd}}{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}4{{{f{DCd}}}{{A`{Abn}}}}{{{f{DCd}}}Ab}01{{{f{DCd}}}{{A`{{l{Fb}}n}}}}{{{f{DCd}}}{{l{Ah}}}}{{{f{DCd}}{f{Ff}}}{{A`{{l{Ah}}n}}}}{{{f{DCd}}HbGd}{{l{Ah}}}}{{{f{DCd}}F`}{{A`{{l{Ah}}n}}}}{{{f{DCd}}Bj}Ab}7{{{f{DCd}}}{{A`{{l{Ah}}n}}}}01{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAhA@f}BLf}21``````{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DD`A@f}{BLfJf}}{{BFbcBLd{Ch{{N`{CNl}}}}{Ch{{f{Bf}}}}}BFb{{E`{AAn}{{Ad{{A`{AAnn}}}}}}InJ`}}{{DCfc}BBd{{E`{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}InJ`}}{{BBdc{BM`{{N`{BLn}}}}}BBd{{E`{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBdBBdc{BM`{{N`{BLn}}}}}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBd{f{Dfc}}{f{Df}}}{{A`{BBdn}}}{{Af{BBd{f{Df}}}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMl}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BMl}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{El}}}}}}{c{{BM`{{N`{BLn}}}}}{{E`{{f{El}}}{{Ad{{A`{Eln}}}}}}InJ`}}{c{{BM`{{N`{BLn}}}}}{{E`{{f{{Bl{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}InJ`}}{{BBdc}BBd{{Af{BBd}{{Ad{BBd}}}}}}{c{{BM`{{N`{BLn}}}}}{{E`{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}InJ`}}{{DCf{N`{E`}}}BBd}{c{{BM`{{N`{BLn}}}}}{{E`{{f{{Bl{Oj}}}}}{{Ad{{A`{Ojn}}}}}}InJ`}}:{{ce{BM`{{N`{BLn}}}}}BBd{{E`{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}{{Ih{{Bl{BBd}}}}}}{{BBdc{f{{Bl{BBd}}}}{BM`{{N`{BLn}}}}}BBd{{E`{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`}}{{BBdBMd{f{{Bl{BBd}}}}d{Ch{DDb}}}BBd}2{{{f{BMl}}}{{A`{Ojn}}}}{{CCjc}CCj{{E`{CCl}{{Ad{CCl}}}}}}1111{CJ`CJ`}{{{Ch{{f{{Bl{Gd}}}}}}{f{{BDd{BAd}}}}{Ch{{f{{Bl{Ab}}}}}}{Ch{{f{DDd}}}}}AAn}{{{Ch{{f{{Bl{Dd}}}}}}{f{{BDd{El}}}}{Ch{{f{{Bl{Ab}}}}}}d}{{Ch{{Gj{Gd}}}}}}{{{f{Bf}}}BBd}{BMhBBd}{BFbBFb}{BMjBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDf}}}Mj}{{{f{BK`}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BK`}}}{{Ch{Aj}}}}9876{{{f{AJf}}}{{Ch{c}}}{}}51{{{f{DDh}}}Mj}4{{{CNd{c}}{Ch{CMn}}}{{CNd{c}}}BKj}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CL`}}}{{l{Lb}}}}`{{{f{CBb}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}```:9``{{{f{DBf}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}`5```>{{{f{CKl}}}{{l{Of}}}}21`{{{f{BGb}}}Hb}{{{f{BGb}}}d}{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{BGbHb}BGb}{{BBdBBd}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BK`}}}Gd}{{{f{CJl}}}{{Ch{Gd}}}}{{{f{CBf}}}{{Ch{Gd}}}}{{{f{CBj}}}{{Ch{Gd}}}}`````{{{BOl{c}}Gd}{{BOl{c}}}C@`}`{BMhBBd}{BMjBBd}{{{f{AHn}}}{{A`{Gdn}}}}{BBdBBd}{{{f{BK`}}}{{A`{Gdn}}}}{{{f{BK`}}}{{f{Dd}}}}{BBdDCf}````33`{{{f{DBf}}}{{l{Kl}}}}{{{f{CKn}}}{{l{Kl}}}}{{{f{CBb}}}{{A`{{l{Kl}}n}}}}{{{f{CL`}}}{{l{Lb}}}}{{{f{BGb}}}Hb}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMfA@f}BLf}{{{f{CDn}}}d}{BGb}{BBd}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BGb}}}d}{{DDjGd}{{Ch{Gd}}}}{{BBdc}BBd{{BA`{BBd}}}}0{{{f{BMl}}}{{A`{Ojn}}}}{{}c{}}{cCN`BN`}{cCNbC@`}2{{Ddc}DDl{}}{c{{AM`{c}}}{}}{BFbBLh}{c{{BKf{c}}}BKj}{cCBf{{Ih{ANb}}}}{cCBj{{Ih{ANb}}}}{c{{BOl{c}}}C@`}{{{f{{Bl{Oj}}}}}BMl}{c{{CNd{c}}}BKj}{c{{BMn{c}}}BN`}{c{{CNf{c}}}C@`}{{}CLb}{c{{C@b{c}}}C@`}{HbBGb}{c{{CNh{c}}}C@`}{c{{CNj{c}}}BKj}{{BGbBGbBGb}CCh}{c{{CKf{c}}}BKj}{{DDn{N`{CIn}}{N`{{BDd{BAd}}}}{Hf{GdGd}}{Ch{{Gj{Gd}}}}{Ch{{N`{BKh}}}}{Ch{DDd}}Gdd{Ch{{Gj{Ab}}}}{Ch{{Hf{Dd{N`{Bf}}}}}}CFd}{{A`{C@hn}}}}{c{{C@f{c}}}BKj}{c{{C@j{c}}}{C@`C@`}}{CDjBJl}{c{{BM`{c}}}{}}{{BBdBBdBBd}CHl}{{}CHn}{BBdBKn}{{Dd{Gj{Oj}}{BM`{{N`{BLn}}}}c}CAfBNb}{c{{N`{c}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Ij}}}BFn}{{ElJj}Mj}{{DdAGdd}BAd}{e{{N`{c}}}{}{{ABb{{f{{CM`{c}}}}}{{Ad{c}}}}}}{AGdBFn}{{{f{AJh}}GdGd}{{l{c}}}Dl}{{{f{BK`}}GdGd}Ab}{{{f{Bf}}}CD`}{{ce}{{N`{ce}}}{}BLf}{{HbDd}{{A`{Abn}}}}{DdCD`}{{AGdGd}BFn}{{{N`{{Bl{CMn}}}}}CBf}{{{N`{{Bl{CMn}}}}}CBj}{BjCD`}{{}{{N`{{BOf{c}}}}}{}}{c{{N`{{BOf{e}}c}}}BLf{}}{Gd{{N`{{Bl{{BOf{c}}}}}}}{}}{{Gdc}{{N`{{Bl{{BOf{e}}}}c}}}BLf{}}{DE`CBf}{DE`CBj}5432{{{f{DfDEb}}}Ch}{{{f{DfDAl}}}Ch}{{{f{BLj}}DEd}{{A`{{Ch{AAn}}n}}}}{{{f{DfC@n}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfBOj}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@h}}Gd}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{BBd}}{f{Df{BGl{{f{BBd}}}}}}}b}{{BBd{f{Df{BGl{BBd}}}}}b}{BBdBBd}0{BLdBLd}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{HbBBd}`{{}AB`}{{}A@h}`{{{f{BK`}}}Gd}{BFbBFb}7`````{{{f{Df{C@f{c}}}}}{{A`{Gdn}}}BKj}````{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{BLhc}BLh{{Ih{{Bl{BBd}}}}}}``{{BFb{f{Df{BJf{BJd}}}}{f{Df{BJf{BJh}}}}}{{A`{BJbn}}}}`{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CKn}}}{{l{Nh}}}}{{{f{CBb}}}{{A`{{l{Nh}}n}}}}{{{f{CBb}}}{{A`{{l{Kl}}n}}}}{{CGfc}BBd{{BA`{BBd}}}}{{CGjc}BBd{{BA`{BBd}}}}`{{BBde}BBd{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{BBde{Ch{{Hf{eF`}}}}CIh}BBd{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{{f{Df{BDd{El}}}}{f{{BDd{El}}}}}{{A`{bn}}}}```{{{f{Bf}}}BGb}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}``{{{f{BGb}}{f{BGb}}}{{Ch{B@f}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@f}}}{DAhA@f}BLf}```{{}BBd}{c{{DEf{{N`{c}}}}}{}}{{ce}{{DEf{{N`{ce}}}}}{}BLf}````{{BBdc}BBd{{BA`{BBd}}}}`{{DCf{f{Bf}}}BBd}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hf{{AAj{{Gj{Jl}}{Gj{A@h}}}}{AAj{{Gj{AB`}}{Gj{A@h}}}}}}n}}}}`{{{f{DDf}}}Mj}{BBdBBd}{BFb{{A`{{Hf{AAnAAn}}n}}}}`{{{f{BFn}}}BFn}{{{f{{N`{c}}}}{f{DfDEh}}}b{ALhA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBLf}{{{f{Bf}}BBdA@`}BBd}{{BFbBBdA@`}BFb}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBdBBdA@`}BBd}{{{f{DDh}}AjA@`}{{A`{Mjn}}}}{{{f{BK`}}AjA@`}{{A`{Mjn}}}}{{{f{CKl}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCj}}}CMl{}}````{{{f{DEj}}CFf{Ch{Kf}}}Ab}{{BBdCFf{Ch{Kf}}}BBd}{{{f{Df{N`{AFj}}}}{f{Df{Bl{Bj}}}}}{{A`{GdBCj}}}}{{{f{Df{N`{AFj}}}}DEl}{{A`{bBCj}}}}{{{C@f{c}}CFd}{{C@f{c}}}BKj}{{{f{Df{N`{AFj}}}}{f{Df{Gj{Bj}}}}}{{A`{GdBCj}}}}{{{f{Df{N`{AFj}}}}{f{DfEj}}}{{A`{GdBCj}}}}{{{f{Df}}}{{A`{cBCj}}}DEn}{{{f{Df{N`{AFj}}}}{f{Df{Bl{DF`}}}}}{{A`{GdBCj}}}}{{{f{CJl}}}d}{{{f{BK`}}}Ab}{{{f{CBf}}}d}{{{f{CBj}}}d}````{{ce}BBd{{E`{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}InJ`Jf}{{Ih{{Bl{BBd}}}}}}{{{f{AJj}}}Ab}0{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLd}}BLd}b}{{{f{{Bl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}{{{f{DfBK`}}Dd}b}{{BFbei}BFb{{Ih{Bf}}}{{Ib{}{{Cj{c}}}}}{{Ih{Bf}}}{{Ib{}{{Cj{g}}}}}}{{BJne}BBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{cBBd}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BOh}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{BBdcc}BBd{{BA`{BBd}}}}1{{{f{BMl}}{Ch{El}}}{{A`{Ojn}}}}{{{f{BOh}}{f{Bf}}{f{Bf}}Gd}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBdcc{Ch{c}}{Ch{El}}}BBd{{BA`{BBd}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{Bd}}}}CJj}{{A`{{L`{LfLb}}n}}}}{{BBd{f{{Bl{Hb}}}}CIj}BBd}{{{f{ANb}}}CMn}`{{{f{AJl}}}AJl}{{{f{BK`}}}Ab}{BMhBBd}{BFbBFb}{BMjBBd}{BBdBBd}`{{BLhc}BLh{{Ih{{Bl{BBd}}}}}}{{{f{DB`}}{Gj{Ff}}{f{BFf}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BFbBBdcBFf}BLb{{Ih{{Bl{BBd}}}}}}{{BBdBFf}BBd}{{{f{AJn}}{f{E`}}A@b}{{A`{Abn}}}}{{BBd{N`{E`}}{BM`{{N`{BLn}}}}A@b}BBd}{{{f{BK`}}{f{E`}}A@b}{{A`{Abn}}}}{{BBdGdc}BBd{{Af{{f{Df{l{Eh}}}}}{{Ad{{Ch{Aj}}}}}}InJ`Eb}}{{{f{DFb}}A@b}{{A`{Abn}}}}{{BBdA@b}BBd}{{{f{DFb}}{f{Ab}}CBn}{{A`{Abn}}}}{{BBdBBdCBn}BBd}32102032103{{BBdA@`AjA@b}BBd}2{{BBdBBdA@`AjCBn}BBd}543254325432{{{f{DFd}}{f{{l{Bd}}}}{Ch{{f{AMf}}}}}{{A`{DFdn}}}}{{{f{CB`}}Jl}{{A`{Abn}}}}{{BBdJl}BBd}{{{f{CCh}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}0{{{f{CB`}}Nf}{{A`{Abn}}}}{{BBdNf}BBd}2``{{{f{CJl}}}{{Ch{{f{DDd}}}}}}{{{f{CBf}}}{{Ch{{f{DDd}}}}}}{{{f{CBj}}}{{Ch{{f{DDd}}}}}}``````{{{f{DCd}}{l{Ah}}}{{l{Ah}}}}{{}{{BM`{{N`{BLn}}}}}}{{BBdBBddd{Ch{Kf}}}BBd}0`{{{f{BLj}}DEd}{{A`{AAnn}}}}{{cCBh}{{A`{BFbn}}}{{Ih{ANb}}}}{{{N`{{Bl{CMn}}}}CBh}{{A`{BFbn}}}}{{DE`CBh}{{A`{BFbn}}}}{{cCBl}{{A`{BFbn}}}{{Ih{ANb}}}}{{{N`{{Bl{CMn}}}}CBl}{{A`{BFbn}}}}{{DE`CBl}{{A`{BFbn}}}}{{DFf{f{{Bl{Jl}}}}e}{{A`{Abn}}}Eb{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CNd{c}}}}}{{A`{{N`{{BDd{BAd}}}}n}}}BKj}{{{f{Df{BMn{c}}}}}{{A`{{BDd{El}}n}}}BN`}{{{f{C@h}}}{{f{{N`{{BDd{BAd}}}}}}}}{{{f{Df{C@f{c}}}}}{{A`{{N`{{BDd{BAd}}}}n}}}BKj}{{{f{BLj}}{Ch{Gd}}}{{A`{{N`{{BDd{El}}}}n}}}}{{{f{CIn}}}{{f{DFh}}}}`````{{}BLd}`{{{f{DfBFb}}{f{Df{BJf{BJd}}}}{f{Df{BJf{BJh}}}}}{{A`{{N`{{BDd{El}}}}n}}}}`{{{f{DBf}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}`{{{f{CL`}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DFj}{{A`{KfBCj}}}}{{BFbc}BFb{{Ih{{Bl{BBd}}}}}}0````{{{f{AK`}}{f{{l{An}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{DfBLd}}BLdd}b}{{{f{BFb}}{BJf{BJd}}{BJf{BJh}}}b}{{{C@f{c}}d}{{C@f{c}}}BKj}{{{f{Df{C@f{c}}}}{N`{CIn}}}bBKj}{{{C@j{c}}d}{{C@j{c}}}C@`}{{{CNd{c}}d}{{CNd{c}}}BKj}{{{BMn{c}}d}{{BMn{c}}}BN`}{{{CNj{c}}d}{{CNj{c}}}BKj}5{{CN`d}CN`}{{BBdMb}BBd}{{{f{DfBFn}}{Ch{Ij}}}b}{{{f{AKb}}Hb}{{l{c}}}Dl}{{{f{BK`}}Hb}Ab}{{BMhBBd}BBd}{{BFbc}BFb{{BA`{BBd}}}}{{BMjBBd}BBd}{{BBdBBd}BBd}{{{f{AKd}}Hbc}{{l{e}}}{}Dl}{{BFbce}BFb{{BA`{BBd}}}{{BA`{BBd}}}}{{BBdce}BBd{{BA`{BBd}}}{{BA`{BBd}}}}{{{f{BJl}}}d}{BBdBBd}{{{f{DfACf}}}b}{{{f{DfBK`}}}b}{{BBd{Ch{Kf}}}BBd}{{BFbcCDf}{{A`{bn}}}{{Ih{ANb}}}}{{BFbcCEd}{{A`{bn}}}{{Ih{ANb}}}}{{BFbcCEj}{{A`{bn}}}{{Ih{ANb}}}}{{BFbcCFh}{{A`{bn}}}{{Ih{ANb}}}}{{{f{CKd}}}{{l{Fb}}}}````{{{f{BK`}}HbGd}Ab}{{BFbHbJl}BFb}{{BMjBBdBBd}BBd}={{{f{DfBFn}}GdGd}b}0`{{{f{AKf}}GdGd}AKf}{{fGdGd}c{}}1022{{BFnGdGd}BFn}0`{{{f{AHl}}d}{{l{c}}}Dl}{{BMhF`}BBd}{{BFbcFh}BFb{{BFj{Dd}}}}{{BMjF`}BBd}{{BBdF`}BBd}{{BBdeFh}BBd{{BA`{BBd}}Jf}{{Ih{{Bl{c}}}}}}{{BFbcFh}BFb{{Ih{{Bl{BBd}}}}}}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{BK`}}F`}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{{{f{CJl}}}{{f{DE`}}}}{{{f{CBf}}}{{f{DE`}}}}{{{f{CBj}}}{{f{DE`}}}}{{{f{BOh}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BK`}}Hb}{{Hf{AbAb}}}}{{{f{BFn}}Gd}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BOh}}{f{{l{Bd}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{E`{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{E`{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{BBdBBd}`{{{f{CKd}}{f{{Bl{Bj}}}}}{{l{An}}}}{{{f{CKd}}{f{{l{Bh}}}}}{{l{An}}}}`{{BMhBj}BBd}{{BFbBj}BFb}{{BMjBj}BBd}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{BBdBj}BBd}{{{f{BK`}}Bj}{{Ch{Aj}}}}{{{f{DFl}}Bj}Mj}{{{f{BK`}}Bj}{{A`{Mjn}}}}{{JlJl}A@h}{BBdDFn}{{{f{BOh}}{f{Ff}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{BOh}}}{{l{Fb}}}}0{{{f{BOh}}}{{l{Bd}}}}{{{f{BOh}}{f{Ff}}{f{Ff}}}{{A`{{l{Bd}}n}}}}4`{{{f{CBb}}{f{Bf}}}{{A`{Abn}}}}`{{BBdEl}BBd}`{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}707070{{{f{BOh}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{{N`{ce}}}}}GdA@fBLf}{BBdBJn}{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKnBKn}}{{BLdBLd}BLd}{{{f{DfBLd}}BLd}b}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{BLhc}BLh{{BA`{Dd}}}}{{DCf{f{Bf}}}BBd}{{{f{BJl}}}{{f{Dd}}}}`1{{{f{Bf}}}BBd}{BMhBBd}{BFbBFb}{BMjBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDf}}}Mj}{{{f{BK`}}}{{A`{Mjn}}}}{{}{{BM`{{N`{BLn}}}}}}{CAbCAb}?{{{f{Df}}g}{{A`{eBCj}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BFbJl}BFb}{{BLb{Ch{Gd}}}BFb}{{BMjBBd}BBd}{{BBd{Ch{Gd}}}BBd}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{BK`}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DG`}}{f{{Bl{A@h}}}}Mb}DG`}{{{f{DG`}}{f{{Bl{A@h}}}}}DG`}{{{f{BK`}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BK`}}{f{{Bl{Jl}}}}}Ab}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{BK`}}{f{{l{Fb}}}}}Ab}{{{f{DfBFn}}}{{Ch{Ij}}}}{{BBdBBdBBd}BBd}{{CGdc}CGf{{BA`{BBd}}}}{{CGhc}CGj{{BA`{BBd}}}}`{{BBdBBdBGbCCb}BBd}```{{{f{CBb}}Ld}{{A`{{l{Lb}}n}}}}{BFb{{A`{DGbn}}}}{CGb{{A`{DGbn}}}}1{{{f{CJ`}}}{{Ch{Jj}}}}{{BMjGd}BBd}{{{f{D@d}}B@`}{{BDd{BAd}}}}{{{f{BFn}}}{{Cn{Cl}}}}{{{f{AKn}}}{{Gj{{f{{Bl{Bj}}}}}}}}{{{f{BFb}}d}{{A`{Ejn}}}}{{{f{DGd}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BKd}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BBd}}{f{{BDd{El}}}}DAj}{{A`{Ojn}}}}{{{f{BOh}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}{BMhBBd}{{{f{BOh}}}{{l{Bd}}}}{DCfBBd}{{{f{AB`}}}{{Ch{Jl}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBdBBd}{{{f{BMl}}}{{A`{Ojn}}}}{{{f{CBb}}{f{Bf}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfD@d}}{f{{BDd{El}}}}}{{A`{dn}}}}`887{{{f{CEd}}c}{{C@b{c}}}C@`}{{{f{CFh}}c}{{C@j{c}}}C@`}{{{f{DfBLd}}BLd}b}``{{BFbJlcFh}BFb{{Ih{{Bl{BBd}}}}}}{{{f{BFn}}{f{BFn}}}Ij}{{{f{BFn}}f}Ij}10{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DGf}}{Ch{{f{AMf}}}}{f{{l{Bd}}}}}{{A`{DGfn}}}}{{{f{BGb}}Hb{Ch{{f{AMf}}}}ceg}{{A`{Hbn}}}{{E`{Hb}{{Ad{Hb}}}}}{{E`{Hb}{{Ad{AMd}}}}}{{E`{AMd}{{Ad{Hb}}}}}}{{{f{BGb}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}{{{f{CCh}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}10`10{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}2{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGde}{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jj{{A`{CJ`n}}}}11{{{N`{{Bl{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BLf}2222222222222{DGh{{A`{CInBCh}}}}{{{f{D@d}}{f{Bf}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CCj{Ch{CMn}}}{{A`{{BKf{AFj}}n}}}}{{{f{BMl}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BMl}}c}{{A`{Ojn}}}{{ABb{{f{{Bl{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBdc}{{A`{BBdn}}}{{Af{BBd}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMl}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DDjGd}{{A`{Gdn}}}}{Bj{{A`{CFln}}}}{Jl{{A`{CFnn}}}}{Nf{{A`{CG`n}}}}{c{{A`{{N`{c}}DGj}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Ij}}}{{A`{BFnn}}}}{{ce}{{A`{{N`{ce}}DGj}}}{}BLf}{{}{{A`{{N`{{BOf{c}}}}DGj}}}{}}{c{{A`{{N`{{BOf{e}}c}}DGj}}}BLf{}}10`{c{{A`{{DEf{{N`{c}}}}DGj}}}{}}{{ce}{{A`{{DEf{{N`{ce}}}}DGj}}}{}BLf}{{{f{BNb}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{{{f{CAd}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{{{f{BLn}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{f{{A`{GlBBj}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BLf}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bf}}}}`{{BLdBLd}BLd}{{{f{AHn}}}{{A`{AHnn}}}}{BMhBBd}{{BFb{Ch{{Gj{Ej}}}}BDj}BFb}{BMjBBd}{BBdBBd}{{{f{BK`}}}{{A`{Abn}}}}{{BFb{Ch{e}}BDj}BFb{{BA`{BKn}}Jf}{{Ih{{Bl{c}}}}}}5{{BFb{Ch{{Gj{Dd}}}}BDj}BFb}431{{BFbe}BFb{{BA`{BKn}}Jf}{{Ih{{Bl{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}In}{{{N`{ce}}}cJfBLf}{{{f{DfMj}}Jj}b}{{{f{DfCCj}}{f{DGl}}}b}8{{{f{DGn}}c{f{Bf}}BGb}{{A`{AAnn}}}{{BFj{Dd}}}}0{{{C@f{c}}d}{{C@f{c}}}BKj}```{{BLhCDn}BLh}`{{{f{BFn}}}{{Ch{{f{Ij}}}}}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{Mj}}}{{f{Jj}}}}{{{f{CMd}}ddDdd}{{A`{AAnn}}}}{{BBddd{f{Bf}}d}BBd}``3{{{f{BFn}}}{{f{{Bl{{Cn{Cl}}}}}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{BFn}}}DBl}{{BMhBj}BBd}{{BFbBj}BFb}{{BMjBj}BBd}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{BBdBj}BBd}{{{f{BK`}}Bj}{{Ch{Aj}}}}{{{f{DFl}}Bj}Mj}{{{f{BK`}}Bj}{{A`{Mjn}}}}``{{{f{DH`}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{DH`}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}In{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GdA@fBLf}{{{f{CKl}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}10{{{f{CCf}}}{{Ch{Jl}}}}{{{f{BGb}}}Hb}`{{{f{BGb}}}d}`{cCGd{{BA`{BBd}}}}{{CGfc}CGh{{BA`{BBd}}}}{{CGjc}CGh{{BA`{BBd}}}}```{{BLhBFb}BLh}{{CHlBBd}CHl}{{{C@f{c}}{f{{BDd{BAd}}}}{Ch{{f{{BDd{BAd}}}}}}}{{A`{{C@f{c}}n}}}BKj}{{CBj{Ch{{DBh{Gd}}}}}CBj}{{{BOl{c}}{DBh{Gd}}}{{BOl{c}}}C@`}{{{CNj{c}}{DBh{Gd}}}{{CNj{c}}}BKj}{{CBfd}CBf}{Gdc{}}0{{{CKf{c}}{Ch{{DBh{Gd}}}}}{{CKf{c}}}BKj}{{CCjGd}CCj}{{CBf{Ch{CJn}}}CBf}{{CBj{Ch{CJn}}}CBj}{{BFbd}BFb}{{BJlCDd}BJl}1{{BFbBBd}BFb}{{BFbc}BFb{{Ih{{Bl{BBd}}}}}}{{{CNd{c}}{Ch{{Gj{Ej}}}}}{{CNd{c}}}BKj}{{{BMn{c}}{Ch{{Gj{Ej}}}}}{{BMn{c}}}BN`}{{{C@f{c}}{Ch{{Gj{Ej}}}}}{{C@f{c}}}BKj}{{CCj{Ch{{N`{{Bl{Dd}}}}}}}CCj}`4{{CBf{Ch{Dd}}}CBf}{{CCl{Ch{c}}}CCl{{BA`{CD`}}}}{{{CNf{c}}B@`}{{CNf{c}}}{}}{{{C@b{c}}B@`}{{C@b{c}}}C@`}{{{CNf{c}}{Ch{CEh}}}{{CNf{c}}}{}}{{CLb{Ch{CEh}}}CLb}{{{C@b{c}}{Ch{CEh}}}{{C@b{c}}}C@`}{{{C@j{c}}CFj}{{C@j{c}}}C@`}{{BFbc}BFb{{Ih{{Bl{BFb}}}}}}{{{C@j{c}}{Ch{Gd}}}{{C@j{c}}}C@`}{{{BOl{c}}{Ch{Ej}}}{{BOl{c}}}C@`}0{{CHlBBd}CHl}{{CHnBBd}CHn}{{CBfd}CBf}{{CCld}CCl}{{{f{BMl}}El}{{A`{Ojn}}}}{{CBf{Ch{{N`{{BDd{El}}}}}}}CBf}{{CCj{Ch{{N`{{Gj{El}}}}}}}CCj}{{CBfCCn}CBf}{{CClCCn}CCl}{{CBfBj}CBf}{{CClBj}CCl}{{CLbCMn}CLb}{{BJn{Gj{BBd}}}{{A`{BBdn}}}}{{{BOl{c}}{Ch{Gd}}}{{BOl{c}}}C@`}{{{BOl{c}}{Ch{d}}}{{BOl{c}}}C@`}{{CHnBBdBBdBBd}CHn}=={{CCjd}CCj}{{{CNd{c}}{Ch{{Gj{Ab}}}}}{{CNd{c}}}BKj}{{{C@f{c}}{Ch{{Gj{Ab}}}}}{{C@f{c}}}BKj}{{CHlBBdBBdBBd}CHl}4{{CHlBBd}CHl}{{CHnBBd}CHn}{{CBfd}CBf}{{CBjd}CBj}{{{CNj{c}}d}{{CNj{c}}}BKj}{{{CKf{c}}d}{{CKf{c}}}BKj}9{{{CNd{c}}{Ch{{Hf{Dd{N`{Bf}}}}}}}{{CNd{c}}}BKj}{{{C@f{c}}{Ch{{Hf{Dd{N`{Bf}}}}}}}{{C@f{c}}}BKj}{{CBf{Ch{Dd}}}CBf}{{CBj{Ch{Dd}}}CBj}{{CBf{Ch{Gd}}}CBf}{{CBj{Ch{{DBh{Gd}}}}}CBj}{{CCj{Ch{Gd}}}CCj}{{{CNh{c}}DHb}{{CNh{c}}}C@`}{{{CNj{c}}DHb}{{CNj{c}}}BKj}{{{BOl{c}}Ej}{{BOl{c}}}C@`}={{CCjd}CCj}{{BAd{DHd{DdDd}}}BAd}{{CHlBBd}CHl}{{CHnBBd}CHn}010{{CBfd}CBf}{{CCld}CCl}3{{CJlc}CJl{{BA`{{Ch{Gd}}}}}}{{CBfc}CBf{{BA`{{Ch{Gd}}}}}}={{CBj{Ch{Gd}}}CBj}{{CBjc}CBj{{BA`{{Ch{Gd}}}}}}{{{CNd{c}}{Ch{Gd}}}{{CNd{c}}}BKj}{{{BMn{c}}{Ch{Gd}}}{{BMn{c}}}BN`}{{{CKf{c}}{Ch{Gd}}}{{CKf{c}}}BKj}{{CCj{Ch{Gd}}}CCj}10:>{{CBf{Ch{CDb}}}CBf}{{CCl{Ch{CDb}}}CCl}{{BFbBLd}BFb}{{CCjCCl}CCj}{{{CKf{c}}{Ch{e}}}{{CKf{c}}}BKj{{BA`{CMn}}}}{{CCj{Ch{c}}}CCj{{BA`{CMn}}}}{{CJl{N`{{Bl{CMn}}}}}CJl}{{{CKf{c}}{Ch{{N`{BKh}}}}}{{CKf{c}}}BKj}{{{C@f{c}}{Ch{{N`{BKh}}}}}{{C@f{c}}}BKj}{{BFbd}BFb}{{{CNd{c}}{Ch{{Gj{Gd}}}}}{{CNd{c}}}BKj}{{{BMn{c}}{Ch{{Gj{Gd}}}}}{{BMn{c}}}BN`}{{{CNj{c}}{Ch{{Gj{Dd}}}}}{{CNj{c}}}BKj}{{{CKf{c}}{Ch{{N`{{Bl{Dd}}}}}}}{{CKf{c}}}BKj}{{{C@f{c}}{Ch{{Gj{Gd}}}}}{{C@f{c}}}BKj}{{CCj{Ch{{N`{{Gj{Gd}}}}}}}CCj}6{{CBf{Ch{Bj}}}CBf}{{{BOl{c}}Bj}{{BOl{c}}}C@`}{{CCl{Ch{Bj}}}CCl}{{{BOl{c}}CDl}{{BOl{c}}}C@`}{{CBfd}CBf}{{CCjd}CCj}{{CJld}CJl}2{{CBjd}CBj}{{{CKf{c}}d}{{CKf{c}}}BKj}3?{{{C@j{c}}{Ch{Gd}}}{{C@j{c}}}C@`}{{CJlc}CJl{{BA`{{Ch{DDd}}}}}}{{BFbc{Ch{Jl}}}BFb{{BA`{Dd}}}}{{CBfc}CBf{{BA`{{Ch{DDd}}}}}}{{CBf{Ch{DDd}}}CBf}{{CBjc}CBj{{BA`{{Ch{DDd}}}}}}{{CBj{Ch{DDd}}}CBj}{{{CNd{c}}{Ch{DDd}}}{{CNd{c}}}BKj}{{{BMn{c}}{Ch{DDd}}}{{BMn{c}}}BN`}{{{CKf{c}}{Ch{{f{DfDDd}}}}}{{CKf{c}}}BKj}{{{C@f{c}}{Ch{DDd}}}{{C@f{c}}}BKj}{{CCj{Ch{DDd}}}CCj}{{{f{BMl}}}{{A`{Ojn}}}}{{CCjGd}CCj}{{CBf{Ch{{N`{{BDd{El}}}}}}}CBf}{{CBj{Ch{{N`{{BDd{El}}}}}}}CBj}{{{CNj{c}}{N`{{BDd{El}}}}}{{CNj{c}}}BKj}{{{CKf{c}}{N`{{BDd{El}}}}}{{CKf{c}}}BKj}{{CCj{Ch{{N`{{BDd{El}}}}}}}CCj}{{CBfc}{{A`{CBfn}}}{{E`{{BDd{El}}}{{Ad{{A`{{BDd{El}}n}}}}}}}}4{{{CNj{c}}{f{{BDd{El}}}}}{{CNj{c}}}BKj}{{{CKf{c}}{f{{BDd{El}}}}}{{CKf{c}}}BKj}3{{CHlBBd}CHl}{{CHnBBd}CHn}{{CBfBj}CBf}{{{BOl{c}}Bj}{{BOl{c}}}C@`}{{CClBj}CCl}{{BFbd}BFb}{{CBfGd}CBf}?0?{{{C@f{c}}{Ch{{Hf{GdGd}}}}}{{C@f{c}}}BKj}2{{CJlDE`}CJl}{{CBfDE`}CBf}{{CBjDE`}CBj}{{{C@j{c}}CHj}{{C@j{c}}}C@`}{{BJl{Ch{Dd}}}BJl}{{{BOl{c}}{Ch{Ej}}}{{BOl{c}}}C@`}{{CHlLd}CHl}{{CHl{Ch{Dd}}}CHl}{{CBfd}CBf}{{CCld}CCl}10<{{{f{BFn}}{Ch{Ij}}}{{Cn{Cl}}}}{{BFn{Ch{Ij}}}BFn}{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ij}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}1{{CHnBBd}CHn}{{CHlBBd}CHl}{BFbBFb}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bl{Bj}}}}}{{A`{GdBCj}}}}{{{f{CEd}}AAnc}{{A`{bn}}}C@`}{{{f{CFh}}AAnc}{{A`{bn}}}C@`}{{{f{DfAAn}}{f{ANb}}e{f{g}}Gd}{{A`{bn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{DHfInJ`}}{{{f{Df}}c}{{A`{GdBCj}}}DEn}{{{f{Df{N`{AFj}}}}{f{{Bl{DHh}}}}}{{A`{GdBCj}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKl}}}{{l{Kl}}}}{{{f{CKn}}}{{l{Kl}}}}{{{f{CBb}}}{{A`{{l{Kl}}n}}}}``{{{f{AL`}}{f{{l{An}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ij}}}Aj}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{}Gd}{{}DHj}{{}c{}}{{{Ch{{f{BKh}}}}{f{DHl}}{f{{BDd{BAd}}}}}{{A`{dn}}}}{{{f{DHj}}Aj{f{AGd}}}d}{{{Gj{{Hf{{f{CLl}}DHn}}}}BAd{Ch{DI`}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BGj}}c}Ab{{E`{{Hf{Jl{f{{BGl{Jl}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BGj}}c}Ab{{E`{{Hf{Jl{f{{BGl{Jl}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{E`{{AAb{Jl}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{E`{{AAb{Jl}}}{{Ad{}}}}InJ`}}{{{f{{Bl{c}}}}e{Ch{BIb}}}{{ALl{c}}}{BIdBIf}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Ij}}e{Ch{BIb}}}{{ALl{c}}}{BIdBIf}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BIh}}{f{C`}}}Ab}{{BIjBIj}BIj}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bd}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0``{{{f{DIb}}}{{l{Fb}}}}0{{{f{DIb}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DIb}}{f{{l{Bd}}}}d}{{A`{Abn}}}}{{{f{DIb}}}Ab}{{{f{DIb}}}{{A`{Abn}}}}1{{{f{DIb}}}{{A`{{l{Fb}}n}}}}{{{f{DIb}}}{{l{Cb}}}}{{{f{DIb}}{f{Ab}}}{{A`{Abn}}}}{{{f{DIb}}F`}{{A`{{l{Cb}}n}}}}{{{f{DIb}}Bj}{{A`{Abn}}}}5{{{f{DIb}}}{{A`{{l{Ah}}n}}}}01{{{f{DId}}}{{f{{l{Cb}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CA`BBd}BBd}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}3{cc{}}{{}Gd}{{}c{}}{CA`BBd}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDIf}}{f{{Bl{Bj}}}}ddd}{{A`{bn}}}}{{{f{DfDIf}}d}b}>>>>====;;;;::::9999{{{f{DIf}}}El}99998888{{{f{{Bl{Gd}}}}Gd{f{{BDd{El}}}}{Ch{Bj}}CCnd}{{A`{{Gj{DIf}}n}}}}8888{DIf{{A`{Abn}}}}7777666655559999```````````{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CKl}}}{{l{Of}}}}{{{f{CKn}}}{{l{Of}}}}{{{f{CL`}}}{{l{Lb}}}}`{{{f{DBf}}}{{l{Of}}}}21{{{f{CKl}}}{{l{An}}}}{{{f{CKn}}}{{l{An}}}}{{{f{CKl}}}{{l{Kl}}}}{{{f{CKn}}}{{l{Kl}}}}55`46576{{{f{DBf}}}{{l{Kl}}}}16{{{f{CKl}}}{{l{Nh}}}}{{{f{CKn}}}{{l{Nh}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}=<{{{f{DFb}}A@b}{{A`{Abn}}}}{{{f{DFb}}{f{Ab}}CBn}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNf}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bd}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DIh}}}{{f{{l{Bd}}}}}}{{{f{BNf}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DIj}}}DIj}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DIj}}{f{DIj}}}d}{{f{f{c}}}d{}}00{{{f{DIj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DIj}}{f{Dfc}}}bADl}`{{}Gd}{{}c{}}{{{f{DIj}}{f{Bf}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DIl{c}}}}}{{DIl{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{{f{Bf}}}{{Ch{DIj}}}}{{}Gd}{{}c{}}`{{{f{Df{DIl{c}}}}{f{Bf}}}ChAl}{{{f{DfDIn}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DIl{Lb}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Hb}}}}{{{f{Df{DIl{Kl}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Nf}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DJb{}{{DJ`{e}}}}n}}}{}{}}{{DIj{Ch{Ld}}}{{A`{{DIl{Lb}}n}}}}{{DIj{Ch{Ld}}}{{A`{{DIl{Kl}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CJn}}}CJn}{{f{f{Dfc}}}b{}}{fb}{{}CJn}{Gd{{f{c}}}{}}0{Gd{{f{Dfc}}}{}}0{Gdb}0{{{f{CJn}}{f{CJn}}}d}{{{f{DJd}}{f{DJd}}}d}{{f{f{c}}}d{}}00{{{f{CJn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{f{Bf}}}{{A`{DJd}}}}{{{f{Bf}}g}{{A`{CJnn}}}{{Ih{Bf}}}{{BA`{Ej}}}{{Ib{}{{Cj{{Hf{ce}}}}}}}}{{{f{CJn}}{f{Dfc}}}bADl}{{}Gd}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CJnGd}CJn}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bl{Bj}}}}}{{Ch{DJf}}}}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}=<{{{f{{Bl{Bj}}}}{f{Df{Gj{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMn{}{{Ib{}{{Cj{c}}}}}}0{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}`{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{{AOb{Bf}}}El}{{{f{AOh}}}{{f{El}}}}``{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhInJ`}}{{GdcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{GdAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AOh}}Gd}{{A`{Jjn}}}}{{{f{AOh}}Gd}Jj}{{}El}{{{f{BAn}}Gd}Jj}4{{BB`El}{{A`{Mjn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gd}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}{Gdc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Ij}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhInJ`}}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bd}}}}CJj{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{Bd}}}}CJj}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ij}}}D@f{}}{{{D@h{Hb}}{D@h{Bj}}{Ch{Ij}}}D@j}{{{D@h{Hb}}{D@h{Bj}}{Ch{Ij}}}D@l}`{CMbBBd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CMbLd}BBd}3{{CMbBBdLd}BBd}{{CMbDd}BBd}555{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}8{cc{}}9{{}Gd}{{}c{}};;;;;;;;;;{{CMb{Ch{Dd}}BBdCJj}BBd}{{CMbBBd}BBd}={{CMb{f{Bf}}}BBd}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CMbBBd}0?0`{{{f{BIl}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIl}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DJh}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{DJh{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gd}{{}c{}}{{{f{DJh}}}d}{{GdGd}DJh}{{{f{DfDJh}}{Cn{Cl}}}b}{{{f{DfDJh}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GdAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJj}}}DJj}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DJj}}{f{DJj}}}d}{{{f{DJj}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DJj}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBBj}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJl}}}DJl}{{f{f{Dfc}}}b{}}{fb}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DJl}}{f{DJl}}}d}{{{f{DJl}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DJl}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBBj}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALl{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CEl}Ab}{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{E`{}{{Ad{}}}}Eb}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DJn}}}{{f{AGf}}}}{{{f{DfDJn}}}{{Cn{Cl}}}}{{{f{DfDJn}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJn}}}DJn}{{f{f{Dfc}}}b{}}{fb}{{}DJn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{DJn}}}{{f{AGd}}}}{{{f{DfDJn}}Gd}b}{{{f{DJn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gd}{{}c{}}{{{f{DJn}}}Gd}{GdDJn}{{{f{DfDJn}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DJn}}}{{Ch{{f{DK`}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DGl}}}DGl}{{f{f{Dfc}}}b{}}{fb}{{}DGl}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{{BDl{ElA@l}}}}}El}{{{f{DGl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DGl}}}Gd}{{{f{DGl}}}{{N`{{BDd{El}}}}}}{{{f{Bf}}dd}El}{{{f{DAn}}Bj{Ch{Gd}}d{Ch{{f{{BDd{El}}}}}}GdGd{Ch{{f{CD`}}}}{Ch{Bj}}Bj{Ch{{f{CDb}}}}dd{f{Df{Ch{Gd}}}}d}{{A`{{Hf{{BDd{El}}GdGd}}n}}}}{{}Gd}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DAn}}{f{CCj}}}{{A`{DGln}}}}{{}{{A`{c}}}{}}{fAAl}5{{DGl{N`{{BDd{El}}}}}DGl}````{{{f{{l{c}}}}eALnd}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bl{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGdf}{{Ad{d}}}}}}``{{{f{DKb}}}{{f{Ab}}}}{{{f{CBb}}}{{A`{{l{Kl}}n}}}}{{{f{CBb}}}{{A`{{l{Of}}n}}}}0{{{f{CBb}}}{{A`{{l{An}}n}}}}22112{{{f{CBb}}}{{A`{{l{Nh}}n}}}}322{{{f{CBb}}{f{Bf}}}{{A`{Abn}}}}{{{f{CBb}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gd{f{Df{Gj{d}}}}}b}```{{{f{AKf}}GdGd}AKf}0{{Gd{f{{Bl{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BOd}}}{{f{{l{Bd}}}}}}{{{f{BOh}}}{{A`{{l{Bd}}n}}}}{{{f{BOh}}}{{l{Bd}}}}{{{f{BOh}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{BOh}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}dd}{{A`{{l{An}}n}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{BOh}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}Gd}{{A`{{l{Bd}}n}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BOh}}{f{{l{Bd}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOh}}{f{Bf}}{f{El}}}{{A`{Abn}}}}5{{{f{BOh}}{f{{l{Bd}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOh}}{f{Bf}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bl{{f{{l{Bd}}}}}}}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{BOh}}{f{Bf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}0{{{f{BOh}}{f{Bf}}{f{Bf}}Gd}{{A`{{l{Bd}}n}}}}1{{{f{BOh}}{f{{l{Bd}}}}}{{l{Ah}}}}{{{f{BOh}}{f{{l{Bd}}}}Gd}{{A`{{l{j}}n}}}}0{{{f{{l{Bd}}}}{f{{l{Bd}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{E`{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{{l{Bd}}}}{f{{l{Bd}}}}Gded}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{E`{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{BOh}}{f{Ff}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bd}}}}{f{Bf}}d}{{l{Bd}}}}{{{f{BOh}}}{{l{Fb}}}}0{{{f{BOh}}}{{l{Bd}}}}{{{f{BOh}}{f{Ff}}{f{Ff}}}{{A`{{l{Bd}}n}}}}4{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}505050{{{f{BOh}}{f{{l{Bd}}}}}{{l{Bd}}}}10{{{f{BOh}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}444````````{{eGdGd}{{DKd{Hb}}}{{Ih{Bf}}}{{D`{}{{Cj{c}}}}}}{{eGdGd}{{Kb{Hb}}}{{Ih{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BK`}}}Aj}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DHd{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}`{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gd}}}}0{{{f{BK`}}F`}{{l{Fb}}}}{{{f{BK`}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cb}}}}n}}}}{{{f{Ab}}Gd}{{f{{Cn{Cl}}}}}}{{{f{BK`}}}{{f{AGf}}}}{{{f{DfBK`}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBK`}}}{{f{Df{l{c}}}}}Dl}{{{f{BK`}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BK`}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBK`}}}{{A`{Gdn}}}}{{{f{DfAb}}}{{A`{Gdn}}}}{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BK`}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BK`}}}{{Ch{{Cn{Fl}}}}}}{{{f{BK`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMj}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BK`}}}{{Gh{{Gb{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gd}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gd}}}}}}}}{{{f{BK`}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBK`}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BK`}}}{{N`{BK`}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gd{{f{c}}}{}}00{{{f{Ab}}}f}1{Gd{{f{Dfc}}}{}}000{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{AbAb}}{{Abc}{}{B`Mh}}{Gdb}000{{{f{BK`}}}Ab}{{{f{BK`}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}BAb}3{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{}BAb}466{{f{f{c}}}d{}}00{{{f{Ab}}}Gd}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{BK`}}}{{Dn{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BK`}}{f{{l{An}}}}}{{A`{Abn}}}}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}Ej}{cc{}}00{{{L`{LfLb}}}Ab}{{{L`{LnLb}}}Ab}{DKfAb}3{{{L`{LlLb}}}Ab}{{{l{c}}}AbDl}{{{L`{KnKl}}}Ab}{{Dd{f{{Bl{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bl{Jj}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{Ib{}{{Cj{{Ch{Oh}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nj}}}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{Nf}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nj}}}}}}}}{cAb{{Ib{}{{Cj{Hb}}}}}}{cAb{{Ib{}{{Cj{Nj}}}}}}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{f{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hb}}}}}}}}{cAb{{Ib{}{{Cj{Bj}}}}}}{cAb{{Ib{}{{Cj{Ej}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{cAb{{Ib{}{{Cj{{f{Nf}}}}}}}}{cAb{{Ib{}{{Cj{Ob}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bj}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bj}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{cAb{{Ib{}{{Cj{Oh}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{Ib{}{{Cj{{f{Oh}}}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{{Dd{Gj{Oh}}}Ab}{{Dd{Gj{Nj}}}Ab}{{Dd{Gj{Aj}}}Ab}{{Dd{Gj{Kd}}}Ab}{{Dd{Gj{Kf}}}Ab}{{Dd{Gj{Jl}}}Ab}{{Dd{Gj{Ob}}}Ab}{{Dd{Gj{Bj}}}Ab}{{Dd{Gj{Nl}}}Ab}{{Dd{Gj{Nf}}}Ab}{{Dd{Gj{Hb}}}Ab}{{DdGd{f{El}}}Ab}{{{f{Ab}}GdGd}Ab}{{{f{BK`}}Gd}{{A`{Jjn}}}}{{{f{Ab}}}Gd}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BK`}}}{{Ch{{Nb{Fl}}}}}}{{{f{BK`}}Gd}{{Ch{{f{K`}}}}}}{{{f{BK`}}GdGd}{{Ch{{f{K`}}}}}}{{{f{BK`}}Gd}Jj}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{An}}n}}}BAb}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Bf}}}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Bf}}}}32{{{f{BK`}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Of}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gd}000{{}c{}}000{{}Ff}{AbAAn}2{BFdAb}{AbAb}>{{{f{Ab}}}{{A`{{l{An}}n}}}}000{{{f{BK`}}}{{l{An}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DKh}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BK`}}}Gd}{{{f{Ab}}}Gd}{{{f{BK`}}Gd}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBd}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}BAb}{{{f{Ab}}{f{Bf}}}}3210{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BK`}}}{{A`{Mjn}}}}{{{f{BK`}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{{f{Ab}}c}{}{B`Mh}}{{AbAb}}{{Abc}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}{{{f{BK`}}}Gd}{{{f{Ab}}}Gd}{{{f{BK`}}}{{A`{Gdn}}}}{{{f{BK`}}}{{f{Dd}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{BAj}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Hb}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Nj}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Oh}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Kf}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Jl}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Hb}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Nl}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Ej}}}}}}{{Ddc}Ab{{Ih{{Bl{{Gj{Bj}}}}}}}}{{Dd{Od{Jl}}}Ab}{{Ddc}Ab{{Ih{{Bl{{Ch{Ob}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Bj}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{d}}}}}}}}{{Ddc}Ab{{Ih{{Bl{d}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Kd}}}}}}}}{{Dd{Od{Kf}}}Ab}{{Ddc}Ab{{Ih{{Bl{Bj}}}}}}{{Ddc}Ab{{Ih{{Bl{Ob}}}}}}{{Ddc}Ab{{Ih{{Bl{Ab}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Ab}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{f{Bf}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{Ih{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{{Gj{Bj}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Dn{Bf}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Ej}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{{Dn{Bf}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Jl}}}}}}{{Ddc}Ab{{Ih{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{{Dn{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Aj}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{{Dn{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Kd}}}}}}{{Ddc}Ab{{Ih{{Bl{BAl}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{BAl}}}}}}}}{{Ddc}Ab{{Ih{{Bl{AMd}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{AMd}}}}}}}}{{Ddc}Ab{{Ih{{Bl{BAj}}}}}}{{Ddc}Ab{{Ih{{Bl{Kf}}}}}}{{Ddc}Ab{{Ih{{Bl{AMh}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{AMh}}}}}}}}{{Ddc}AbBFd}{{Ddc}Ab{{Ih{{Bl{Jj}}}}}}{{Ddc}Ab{{Ih{{Bl{{Ch{Nf}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Oh}}}}}}{{Ddc}Ab{{Ih{{Bl{Nl}}}}}}{{Dd{Od{Hb}}}Ab}{{Ddc}Ab{{Ih{{Bl{{Ch{Aj}}}}}}}}{{Ddc}Ab{{Ih{{Bl{Nj}}}}}}{{Ddc}Ab{{Ih{{Bl{Nf}}}}}}{{Dd{Od{Nf}}}Ab}{{Dd{f{El}}}Ab}{{{f{BK`}}GdGd}Ab}{{DdGd}Ab}{{{f{DfDKh}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{Ab}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{Ab}}c}{{A`{{l{An}}n}}}BAb}3{{{f{Ab}}{f{Bf}}}}3{{{f{Ab}}c}{}BAb}{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BK`}}}Gd}`{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BK`}}AjA@`}{{A`{Mjn}}}}{{{f{BK`}}}Ab}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{DfBK`}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bl{Hb}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BK`}}{f{E`}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gddd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gd}Ab}{{{f{DfAb}}Mb}b}{{{f{BK`}}Hb}Ab}{{{f{DfBK`}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DKh}}}{{Hf{Gd{Ch{Gd}}}}}}{{{f{BK`}}HbGd}Ab}{{{f{Ab}}HbGd}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BK`}}F`}{{A`{Abn}}}}{{{f{BK`}}Hb}{{Hf{AbAb}}}}{{{f{Ab}}Hb}{{Hf{AbAb}}}}{{{f{BK`}}Bj}{{Ch{Aj}}}}{{{f{BK`}}Bj}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}Gd}{{A`{{Dn{Bf}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{AbAb}}{{Abc}{}{B`Mh}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BK`}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gd}}}Ab}{{{f{BK`}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bl{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bl{A@h}}}}}Ab}{{{f{BK`}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BK`}}{f{{Bl{Jl}}}}}Ab}{{{f{BK`}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bl{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GdB@`}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Dn{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Hf{{f{BAd}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{{f{BAd}}{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}2{{{Hf{Dd{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hf{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{}{{A`{c}}}{}}0006{{Ddc}{{A`{Ab}}}{}}{{{f{DfAb}}{Kh{c}}}dDl}8{f{{A`{GlBBj}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{BK`}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BK`}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BK`}}Bj}{{Ch{Aj}}}}{{{f{BK`}}Bj}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{B`Mh}}{{{f{Ab}}{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{cc{}}{{}Gd}{{}c{}}{{{DKj{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{E`{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BKl{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CBd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{G`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBd}}c}{{A`{Abn}}}Bb}{{{f{{l{G`}}}}c}{{A`{Abn}}}Bb}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CLn}}}CLn}{{f{f{Dfc}}}b{}}{fb}{{}CLn}{Gd{{f{c}}}{}}{Gd{{f{Dfc}}}{}}{Gdb}{{{f{CLn}}{f{CLn}}}d}{{f{f{c}}}d{}}00{{{f{CLn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{CLn}}{f{Dfc}}}bADl}{{}Gd}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AELbBAl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11714],[5,"StructType",2000,11715],[5,"ChunkedArray",17,11716],[6,"PolarsError",3525,11717],[6,"Result",11718],[5,"Series",11196,11719],[17,"Output"],[10,"FnMut",11720],[5,"ListType",2000,11715],[1,"f64"],[10,"PolarsNumericType",2000,11715],[5,"BooleanType",2000,11715],[10,"Num",11721],[10,"ToPrimitive",11722],[5,"StringType",2000,11715],[1,"str"],[5,"BinaryType",2000,11715],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",11660,11723],[6,"GroupsProxy",4145,11724],[5,"FixedSizeListType",2000,11715],[5,"ObjectType",2000,11715],[10,"PolarsObject",1555,11725],[6,"Option",11726],[17,"Item"],[10,"Array",11727],[5,"Box",11728],[10,"Iterator",11729],[5,"AmortizedListIter",11730],[5,"PlSmallStr",2000,11731],[0,"mut"],[17,"IsNested"],[5,"FalseT",2000,11715],[10,"PolarsDataType",2000,11715],[6,"Cow",11732],[10,"Fn",11720],[10,"Copy",11733],[5,"AmortSeries",11636,11734],[5,"Float32Type",2000,11715],[5,"Float64Type",2000,11715],[5,"String",11735],[6,"DataType",2000,11736],[5,"View",11737],[5,"SortOptions",1683,11738],[5,"UInt32Type",2000,11715],[5,"BinaryOffsetType",2000,11715],[6,"Column",3900,11739],[5,"SortMultipleOptions",1683,11738],[10,"PolarsIntegerType",2000,11715],[10,"MetadataTrait",1271,11740],[6,"CastOptions",1165,11741],[10,"NumOpsDispatchCheckedInner",11681,11742],[5,"Iter",11743],[1,"usize"],[1,"fn"],[5,"Map",11744],[5,"Vec",11745],[5,"CompactString",11746],[5,"MetadataProperties",1271,11747],[10,"DoubleEndedIterator",11748],[1,"i64"],[5,"OffsetsBuffer",11749],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11750],[5,"Error",11750],[17,"Array"],[10,"IntoIterator",11751],[10,"Borrow",11752],[10,"PolarsAsRef",11753],[10,"AsRef",11754],[5,"Bitmap",11755],[10,"IntoParallelIterator",11756],[10,"Send",11733],[10,"Sync",11733],[10,"NoOption",11757],[10,"ExactSizeIterator",11758],[10,"Clone",11759],[10,"TrustedLen",11760],[6,"AnyValue",2000,11761],[1,"u32"],[5,"MetadataFlags",1271,11747],[10,"PolarsObjectSafe",1555,11725],[5,"BinaryArray",11762],[1,"f32"],[1,"u64"],[5,"Metadata",1271,11747],[5,"RwLockWriteGuard",11763],[5,"Int32Type",2000,11715],[5,"DateType",2000,11715],[5,"Logical",2000,11764],[5,"Int64Type",2000,11715],[6,"TimeUnit",2000,11765],[5,"DatetimeType",2000,11715],[5,"Int128Type",2000,11715],[5,"DecimalType",2000,11715],[5,"DurationType",2000,11715],[5,"TimeType",2000,11715],[10,"PolarsFloatType",2000,11715],[6,"IsSorted",11196,11766],[10,"PolarsIterator",1214,11767],[6,"ChunkedArrayLayout",17,11716],[10,"NumCast",11722],[5,"Scalar",4515,11768],[6,"MetadataReadGuard",1271,11769],[5,"IMMetadata",1271,11770],[5,"Arc",4515,11771],[5,"RwLockReadGuard",11763],[5,"UInt8Type",2000,11715],[1,"i32"],[5,"Int16Type",2000,11715],[1,"i16"],[1,"i128"],[5,"UInt64Type",2000,11715],[5,"UInt16Type",2000,11715],[1,"u16"],[5,"Range",11772],[5,"Int8Type",2000,11715],[1,"i8"],[5,"Field",2000,11773],[10,"ParallelIterator",11756],[10,"IndexedParallelIterator",11756],[6,"QuantileInterpolOptions",4515,11774],[5,"RollingOptionsFixedWindow",4515,11775],[10,"PolarsOpsNumericType",11776],[10,"Sized",11733],[5,"ChunkId",4515,11777],[17,"IsStruct"],[5,"RandomState",11778],[5,"BytesHash",11779],[5,"ViewRepr",11780],[1,"array"],[5,"Dim",11781],[5,"ArrayBase",11780],[5,"OwnedRepr",11782],[6,"Either",11783],[5,"TypeId",11784],[5,"DataFrame",3624,11785],[5,"NullableIdxSize",4515,11777],[10,"FnOnce",11720],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",859,11786],[5,"AnonymousListBuilder",887,11787],[5,"AnonymousOwnedListBuilder",887,11787],[5,"ListBooleanChunkedBuilder",887,11788],[5,"ListPrimitiveChunkedBuilder",887,11789],[10,"ListBuilderTrait",887,11790],[10,"ChunkedBuilder",887,11791],[5,"ListStringChunkedBuilder",887,11792],[5,"ListBinaryChunkedBuilder",887,11792],[5,"ListNullChunkedBuilder",887,11793],[5,"BinViewChunkedBuilder",887,11794],[10,"ViewType",11795],[5,"BooleanChunkedBuilder",887,11796],[5,"NullChunkedBuilder",887,11797],[5,"PrimitiveChunkedBuilder",887,11798],[5,"NullChunked",11799],[10,"NewChunkedArray",887,11791],[10,"Hasher",11800],[10,"ChunkedCollectInferIterExt",1194,11801],[10,"ChunkedCollectIterExt",1194,11801],[10,"Canonical",1208,11802],[10,"ChunkedCollectParIterExt",1210,11803],[10,"FromParIterWithDtype",1210,11803],[5,"BooleanArray",11804],[5,"BoolIterNoNull",1214,11767],[5,"FixedSizeListArray",11805],[5,"FixedSizeListIterNoNull",1214,11767],[5,"SomeIterator",1214,11767],[5,"MetadataEnv",1271,11806],[10,"MetadataCollectable",1271,11807],[5,"Iter",11808],[5,"IterNames",11808],[5,"File",11809],[5,"Mutex",11810],[6,"MetadataMerge",1271,11747],[5,"RwLock",11763],[5,"ObjectArray",1555,11725],[6,"ArrowDataType",2000,11811],[10,"Any",11784],[10,"Debug",11750],[5,"BitmapIter",11812],[6,"ZipValidity",11813],[5,"ObjectChunkedBuilder",1632,11814],[10,"AnonymousObjectBuilder",1655,11815],[5,"ObjectRegistry",1655,11815],[10,"ChunkAgg",1683,11816],[17,"FuncRet"],[10,"ChunkApply",1683,11816],[10,"ChunkApplyKernel",1683,11816],[10,"ChunkSort",1683,11816],[10,"ChunkUnique",1683,11816],[10,"ChunkCast",1683,11816],[6,"FillNullStrategy",1683,11816],[10,"ChunkCompare",11196,11816],[10,"ChunkExplode",1683,11816],[10,"ChunkFillNullValue",1683,11816],[10,"ChunkFilter",1683,11816],[10,"ChunkFull",1683,11816],[10,"ChunkFullNull",1683,11816],[10,"ChunkAnyValue",1683,11816],[10,"IsFirstDistinct",1683,11816],[10,"IsLastDistinct",1683,11816],[10,"ChunkQuantile",1683,11816],[10,"ChunkExpandAtIndex",1683,11816],[10,"Reinterpret",1683,11816],[10,"ChunkReverse",1683,11816],[10,"ChunkRollApply",1683,11816],[10,"ChunkSet",1683,11816],[10,"ChunkShift",1683,11816],[10,"ChunkShiftFill",1683,11816],[10,"SlicedArray",1683,11817],[10,"ChunkVar",1683,11816],[10,"ChunkTake",1683,11816],[10,"ChunkTakeUnchecked",1683,11816],[10,"ChunkBytes",1683,11816],[10,"ChunkZip",1683,11816],[10,"BinaryFnMut",1889,11818],[10,"StaticArray",2000,11819],[10,"TernaryFnMut",1889,11818],[10,"Error",11820],[10,"UnaryFnMut",1889,11818],[5,"PrimitiveArray",11821],[6,"SearchSortedSide",1930,11822],[5,"NoNull",4515,11823],[5,"RowsEncoded",11824],[5,"NaiveDateTime",11825],[6,"Tz",11826],[5,"NaiveTime",11827],[5,"CategoricalChunked",2000,11828],[5,"CategoricalChunkedBuilder",2000,11829],[10,"ArrayFromIter",2000,11830],[10,"ArrayFromIterDtype",2000,11830],[5,"Path",11831],[5,"OsStr",11832],[10,"AsRefDataType",2000,11736],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11833],[10,"From",11754],[5,"BinaryViewArrayGeneric",11795],[6,"RevMapping",2000,11834],[10,"CategoricalMergeOperation",2000,11835],[10,"LogicalType",2000,11764],[6,"CategoricalOrdering",2000,11834],[5,"OwnedObject",2000,11761],[6,"UnknownKind",2000,11736],[5,"CompatLevel",2000,11736],[5,"CategoricalType",2000,11715],[6,"ArrowTimeUnit",2000],[6,"Ordering",11836],[10,"ArrayCollectIterExt",2000,11830],[5,"GlobalRevMapMerger",2000,11835],[1,"char"],[10,"FromIterator",11751],[10,"Into",11754],[10,"NumericNative",2000,11715],[5,"ArrowField",4515],[6,"PrimitiveType",11837],[6,"IntegerType",11838],[5,"TimeDelta",11839],[5,"NaiveDate",11840],[10,"GetAnyValue",2000,11761],[10,"IntoScalar",2000,11841],[5,"CatIter",2000,11828],[6,"Expr",4515,11842],[1,"u128"],[6,"PhysicalType",11838],[6,"ToCompactStringError",11746],[5,"Arguments",11750],[5,"StringCacheHolder",3486,11843],[5,"EnumChunkedBuilder",3505,11844],[5,"ErrString",3525,11717],[6,"PolarsWarning",3525,11845],[5,"TryReserveError",11846],[6,"ParquetError",11847],[5,"Error",11848],[6,"Error",11849],[5,"Utf8Error",11850],[5,"Error",11851],[10,"Display",11750],[5,"Schema",11852],[10,"IntoColumn",3900,11739],[6,"NullStrategy",3624,11785],[6,"UniqueKeepStrategy",3624,11785],[5,"HashSet",11853],[5,"Row",4403,11854],[5,"GroupBy",4145,11855],[5,"DynamicGroupOptions",4515,11856],[5,"RangeTo",11772],[5,"RangeFrom",11772],[5,"RangeToInclusive",11772],[5,"RangeFull",11772],[5,"RangeInclusive",11772],[5,"RecordBatchIter",3624,11785],[5,"PhysRecordBatchIter",3624,11785],[5,"LazyFrame",4515,11857],[10,"IntoSeries",11196,11858],[5,"RollingGroupOptions",4515,11856],[10,"RangeBounds",11772],[10,"IntoVec",4515,11823],[6,"IndexOrder",4515,11859],[5,"StructArray",4515,11860],[5,"RecordBatchT",11861],[5,"Duration",4515,11862],[5,"ScalarColumn",3900,11739],[6,"BitRepr",11196,11766],[5,"UnpivotArgsIR",4116,11863],[5,"GroupsIdx",4145,11724],[5,"UnitVec",11864],[6,"GroupByMethod",4145,11855],[5,"SlicedGroups",4145,11724],[5,"GroupsProxyParIter",4145,11724],[10,"UnindexedConsumer",11865],[6,"GroupsIndicator",4145,11724],[6,"IRAggExpr",11866],[10,"IntoGroupsProxy",4145,11867],[5,"Copied",11868],[5,"Zip",11869],[5,"GroupsProxyIter",4145,11724],[6,"RollingFnParams",4515,11870],[10,"IsFloat",11871],[10,"NativeType",11872],[10,"AggList",4387,11873],[10,"TakeExtremum",4387,11874],[10,"PhysicalAggExpr",4400,11875],[6,"AnyValueBuffer",4403,11876],[6,"AnyValueBufferTrusted",4403,11876],[5,"Node",11877],[6,"IR",11878],[5,"Arena",11877],[6,"AExpr",11866],[10,"JoinDispatch",4515,11879],[5,"JoinArgs",4515,11880],[5,"StructNameSpace",4515,11881],[10,"SeriesTrait",11196,11766],[10,"DfTake",4515,11882],[10,"DataFrameOps",4515,11883],[5,"CsvReader",4515,11884],[10,"PhysicalIoExpr",11885],[10,"MmapBytesReader",11886],[10,"LhsNumOps",11660,11723],[6,"Selector",4515,11887],[10,"NumOpsDispatch",11660,11723],[5,"LazyGroupBy",4515,11857],[5,"OptFlags",4515,11888],[10,"Allocator",11889],[5,"JoinBuilder",4515,11857],[10,"AnonymousScan",4515,11890],[5,"ScanArgsAnonymous",4515,11891],[10,"FunctionOutputField",4515,11892],[5,"SpecialEq",4515,11892],[6,"VisitRecursion",11893],[6,"FunctionExpr",4515,11894],[10,"ArgAgg",4515,11895],[5,"ArrayNameSpace",4515,11896],[5,"ListNameSpace",4515,11897],[5,"FieldsMapper",4515,11898],[5,"IpcStreamReader",4515,11899],[10,"Read",11900],[10,"ColumnsUdf",4515,11892],[10,"AsBinary",4515,11901],[10,"StringMethods",10117,11902],[5,"BorrowedFd",11903],[10,"AsFd",11903],[10,"AsList",4515,11904],[10,"AsRawFd",11905],[6,"AggExpr",4515,11842],[10,"SeriesSealed",4515,11906],[10,"AsString",4515,11907],[20,"MaybeUninit",11908],[10,"StringNameSpaceImpl",4515,11909],[5,"OwnedBatchedCsvReader",4515,11910],[5,"CsvWriter",4515,11911],[5,"BatchedWriter",11911],[10,"Write",11900],[5,"IpcWriter",4515,11912],[5,"BatchedWriter",11912],[5,"ParquetReader",4515,11913],[5,"BatchedParquetReader",4515,11914],[5,"ParquetWriter",4515,11915],[5,"BatchedWriter",11916],[5,"BatchedCsvReader",4515,11910],[5,"BinaryNameSpace",10022,11917],[6,"Operator",4515,11842],[10,"RenameAliasFn",4515,11892],[5,"UserDefinedFunction",4515,11918],[10,"ColumnBinaryUdf",4515,11892],[5,"InProcessQuery",4515,11919],[5,"HashMap",11920],[5,"CategoricalNameSpace",4515,11921],[10,"RoundSeries",4515,11922],[10,"TemporalMethods",11081,11923],[10,"NumOpsDispatchChecked",11681,11742],[5,"LazyCsvReader",4515,11924],[5,"ScanArgsIpc",4515,11925],[5,"LazyJsonLineReader",4515,11926],[5,"ScanArgsParquet",4515,11927],[5,"RollingOptionsDynamicWindow",4515,11928],[5,"Bounds",4515,11929],[6,"ClosedWindow",4515,11930],[6,"Label",4515,11930],[6,"StartBy",4515,11930],[5,"Window",4515,11931],[5,"CsvReadOptions",4515,11932],[5,"CsvParseOptions",4515,11932],[6,"CsvEncoding",4515,11932],[6,"CommentPrefix",4515,11932],[6,"NullValues",4515,11932],[6,"JoinCoalesce",4515,11880],[5,"CsvWriterOptions",4515,11933],[5,"SerializeOptions",4515,11933],[6,"JoinType",4515,11880],[6,"QuoteStyle",4515,11933],[6,"JoinValidation",4515,11880],[5,"IpcScanOptions",4515,11934],[5,"AsOfOptions",4515,11935],[5,"IpcWriterOptions",4515,11912],[6,"AsofStrategy",4515,11935],[6,"IpcCompression",4515,11912],[5,"JsonWriterOptions",4515,11936],[6,"InterpolationMethod",4515,11937],[6,"ClosedInterval",4515,11938],[5,"ParquetOptions",4515,11939],[6,"RankMethod",4515,11940],[6,"ParallelStrategy",4515,11939],[5,"RankOptions",4515,11940],[5,"ParquetWriteOptions",4515,11941],[6,"ParquetCompression",4515,11941],[5,"GzipLevel",4515,11941],[5,"BrotliLevel",4515,11941],[5,"ZstdLevel",4515,11941],[6,"DslPlan",4515,11942],[5,"When",4515,11943],[5,"Then",4515,11943],[5,"ChainedWhen",4515,11943],[5,"ChainedThen",4515,11943],[6,"Excluded",4515,11842],[6,"BooleanFunction",4515,11944],[6,"CategoricalFunction",4515,11945],[6,"TemporalFunction",4515,11946],[6,"PowFunction",4515,11947],[6,"StringFunction",4515,11948],[6,"StructFunction",4515,11949],[5,"StatisticsOptions",4515,11950],[5,"DatetimeArgs",4515,11951],[5,"DurationArgs",4515,11951],[5,"RollingCovOptions",4515,11952],[5,"StrptimeOptions",4515,11952],[5,"JoinOptions",4515,11952],[6,"WindowType",4515,11952],[6,"WindowMapping",4515,11952],[6,"NestedType",4515,11952],[5,"UnpivotArgsDSL",4515,11952],[5,"FileMetadata",4515,11953],[6,"LiteralValue",4515,11954],[5,"AnonymousScanOptions",4515,11955],[5,"UnionArgs",4515,11955],[5,"RollingVarParams",4515,11870],[5,"RollingQuantileParams",4515,11870],[6,"NonExistent",4515,11956],[10,"LazyFileListReader",4515,11957],[5,"CloudOptions",10253,11958],[10,"Ord",11836],[6,"ColumnOrder",11959],[10,"BinaryNameSpaceImpl",4515,11960],[5,"JsonLineReader",4515,11961],[10,"CrossJoin",4515,11962],[10,"ExprEvalExtension",4515,11963],[10,"DateMethods",10117,11964],[10,"DatetimeMethods",10117,11965],[10,"DurationMethods",10117,11966],[5,"IpcStreamWriterOption",4515,11899],[10,"BinaryUdfOutputField",4515,11892],[5,"CStr",11967],[10,"Default",11968],[5,"ParquetStatistics",4515],[5,"ColumnChunkMetadata",11969],[6,"NullBehavior",11687,11970],[5,"Weak",11771],[5,"DateLikeNameSpace",10644,11971],[10,"SeriesMethods",4515,11972],[10,"PartialEq",11836],[10,"Scalar",11973],[10,"ListNameSpaceExtension",4515,11974],[10,"Command",11975],[5,"PathBuf",11831],[10,"SerReader",4515,11976],[10,"SerWriter",4515,11976],[5,"IpcReader",4515,11934],[5,"IpcStreamWriter",4515,11899],[5,"JsonWriter",4515,11936],[5,"JsonReader",4515,11936],[10,"UdfSchema",4515,11977],[6,"ListFunction",11978],[6,"BinaryFunction",11979],[6,"RangeFunction",11980],[6,"ArrayFunction",11981],[5,"MutableStatistics",11982],[5,"OsString",11832],[5,"CString",11983],[10,"ToOwned",11732],[1,"never"],[5,"GrowableStruct",11984],[5,"MutableStructArray",11985],[10,"SchemaExt",4515,11986],[10,"FromData",10638,11987],[5,"Buffer",11988],[10,"FromDataUtf8",10638,11987],[10,"FromDataBinary",10638,11987],[5,"ListArray",11989],[6,"Ambiguous",4515,11956],[10,"NamedFromOwned",4515,11990],[10,"DataFrameJoinOps",4515,11991],[5,"FunctionOptions",11955],[10,"PartialOrd",11836],[6,"Context",11942],[5,"BoundsIter",4515,11931],[6,"ReaderBytes",11886],[10,"PolarsTemporalGroupby",4515,11856],[10,"Hash",11800],[10,"SeriesJoin",4515,11992],[10,"TimeMethods",10117,11993],[5,"NonZero",11994],[10,"IntoListNameSpace",4515,11974],[5,"StructValueIter",11995],[17,"DataType"],[10,"SchemaNamesAndDtypes",4515,11986],[10,"AsofJoinBy",4515,11996],[10,"ListNameSpaceImpl",4515,11997],[5,"ExprNameNameSpace",4515,11998],[5,"KeyValue",11999],[10,"IntoLazy",4515,11857],[10,"Literal",4515,11954],[5,"Null",4515,11954],[10,"CloneToUninit",11759],[5,"SuperTypeOptions",12000],[5,"RowIndex",12001],[10,"ChunkAggSeries",4515,12002],[10,"QuantileAggSeries",4515,12003],[10,"IndexToUsize",4515,12004],[10,"NamedFrom",4515,11990],[6,"RowGroupFetcher",11914],[6,"ScanSources",12005],[5,"SplitNChars",4515,12006],[5,"AnonymousScanArgs",4515,11890],[5,"Pin",12007],[5,"Request",11820],[10,"SeriesRank",4515,11940],[5,"BorrowedCursor",12008],[10,"VarInt",12009],[5,"IoSliceMut",11900],[10,"SeriesOpsTime",10117,12010],[10,"PolarsRound",4515,12011],[10,"ChunkedSet",4515,11776],[5,"SchemaDescriptor",12012],[6,"SeekFrom",11900],[10,"VarAggSeries",4515,12013],[5,"StringNameSpace",12014],[10,"TakeChunked",4515,11882],[5,"IRPlan",11878],[10,"ToDummies",4515,12015],[10,"PolarsTruncate",4515,12016],[5,"FileMetaData",11999],[5,"AllocError",11889],[5,"SchemaInferenceResult",11048,12017],[10,"PolarsUpsample",4515,12018],[10,"VecHash",4515,12019],[6,"JsonFormat",4515,11936],[5,"BTreeMap",12020],[10,"WriteDataFrameToFile",11976],[5,"IoSlice",11900],[6,"PrefilterMaskSetting",9933,11914],[5,"RowGroupMetadata",12021],[5,"MemSlice",12022],[6,"Filter",12023],[10,"ArrayNameSpace",10003,12024],[10,"AsArray",10003,12025],[6,"Buffer",10039,12026],[10,"AsString",10183,11902],[6,"Pattern",10183,12027],[5,"DatetimeInfer",10222,12028],[10,"StrpTimeParser",10222,12028],[17,"Error"],[10,"TryFromWithUnit",10222,12028],[6,"CloudType",10253,11958],[6,"SupportedCompression",10312,12029],[5,"AnonymousBuilder",10699,12030],[6,"RollingFunction",10941,12031],[6,"RollingFunctionBy",10972,12032],[5,"MutableNullArray",11017,12033],[5,"MutableBitmap",12034],[10,"AsSeries",11081,11923],[5,"Utf8Array",12035],[5,"_SerdeSeries",11739],[5,"SeriesIter",11196,12036],[5,"Rc",12037],[8,"FillNullLimit",1683],[10,"InitHashMaps",2000],[10,"InitHashMaps2",2000],[5,"TrueT",2000],[8,"PolarsResult",3525],[15,"IO",9913],[15,"Context",9913],[15,"Count",9907],[15,"Slice",9908],[8,"ChunkJoinOptIds",4515],[10,"ListFromIter",4515],[15,"Quantile",9789],[15,"Min",9789],[15,"Max",9789],[15,"IsBetween",10894],[15,"Any",10894],[15,"All",10894],[15,"GroupBy",9799],[15,"Union",9799],[15,"Sort",9799],[15,"Scan",9799],[15,"ExtContext",9799],[15,"DataFrameScan",9799],[15,"IR",9799],[15,"Select",9799],[15,"HStack",9799],[15,"MapFunction",9799],[15,"Cache",9799],[15,"Filter",9799],[15,"Distinct",9799],[15,"Slice",9799],[15,"Sink",9799],[15,"Join",9799],[15,"HConcat",9799],[15,"SortBy",9850],[15,"Filter",9850],[15,"Cast",9850],[15,"Sort",9850],[15,"Gather",9850],[15,"RenameAlias",9850],[15,"Ternary",9850],[15,"Function",9850],[15,"Window",9850],[15,"AnonymousFunction",9850],[15,"Slice",9850],[15,"BinaryExpr",9850],[15,"Round",10897],[15,"RoundSF",10897],[15,"Clip",10897],[15,"BackwardFill",10897],[15,"ForwardFill",10897],[15,"Random",10897],[15,"GatherEvery",10897],[15,"ValueCounts",10897],[15,"Rank",10897],[15,"ReplaceStrict",10897],[15,"CumCount",10897],[15,"CumSum",10897],[15,"CumProd",10897],[15,"CumMin",10897],[15,"CumMax",10897],[15,"Range",9910],[15,"ConcatHorizontal",10919],[15,"ConcatVertical",10919],[15,"ExtractGroups",10919],[15,"SplitExact",10919],[15,"Contains",10919],[15,"Find",10919],[15,"Replace",10919],[15,"DatetimeFunction",10933],[5,"Utf8Field",10039],[5,"CategoricalField",10039],[5,"DatetimeField",10039],[15,"Datetime",10113],[10,"Utf8FromIter",11192],[10,"BinaryFromIter",11192]],"r":[[1,12038],[2,12038],[3,12038],[4,12038],[6,11843],[7,12038],[8,12038],[9,12038],[13,12038],[14,12038],[16,11843],[17,11716],[18,11716],[19,11716],[24,12039],[116,11716],[140,11716],[141,11716],[169,11716],[171,11716],[226,11716],[279,11716],[429,11716],[479,11716],[584,11716],[587,11716],[728,11716],[859,11786],[887,11787],[888,11787],[889,11794],[890,11794],[891,11796],[892,11791],[893,11792],[894,11788],[895,11790],[896,11793],[897,11789],[898,11792],[899,11791],[900,11797],[901,11798],[902,11794],[1039,11791],[1055,11790],[1083,11791],[1148,11787],[1149,11787],[1150,11792],[1151,11788],[1152,11790],[1153,11793],[1154,11789],[1155,11792],[1163,11790],[1165,11741],[1194,11801],[1195,11801],[1208,11802],[1210,11803],[1211,11803],[1214,11767],[1215,11767],[1216,11767],[1217,11767],[1253,11767],[1269,12040],[1270,12040],[1276,11770],[1281,11747],[1282,11807],[1283,11806],[1284,11747],[1285,11747],[1286,11747],[1287,11769],[1288,11740],[1555,11725],[1556,11725],[1557,11725],[1558,11725],[1570,11725],[1601,11725],[1602,12041],[1632,11814],[1655,11815],[1656,11815],[1657,11815],[1658,11815],[1670,11815],[1671,11815],[1672,11815],[1675,11815],[1677,11815],[1684,11816],[1685,11816],[1686,11816],[1687,11816],[1688,11816],[1689,11816],[1690,11816],[1691,11816],[1692,11816],[1693,11816],[1694,11816],[1695,11816],[1696,11816],[1697,11816],[1698,11816],[1699,11816],[1700,11816],[1701,11816],[1702,11816],[1703,11816],[1704,11816],[1705,11816],[1706,11816],[1707,11816],[1708,11816],[1709,11816],[1710,11816],[1713,11816],[1714,11816],[1723,11816],[1724,11817],[1726,11738],[1727,11738],[1741,11816],[1786,11816],[1789,11816],[1798,11816],[1801,11816],[1844,11816],[1850,11816],[1887,11816],[1889,11818],[1893,11818],[1894,11818],[1895,11818],[1896,11818],[1897,11818],[1898,11818],[1899,11818],[1900,11818],[1901,11818],[1902,11818],[1903,11818],[1904,11818],[1905,11818],[1906,11818],[1907,11818],[1908,11818],[1909,11818],[1910,11818],[1911,11818],[1912,11818],[1913,11818],[1914,11818],[1915,11818],[1916,11818],[1917,11818],[1918,11818],[1919,11818],[1920,11818],[1921,11818],[1922,11818],[1923,11818],[1924,11818],[1925,12042],[1926,12042],[1927,12043],[1928,12043],[1929,12043],[1933,11822],[1935,11822],[1954,11822],[1960,11817],[1961,12044],[1962,12044],[1963,12044],[1964,12044],[1967,12045],[1968,12046],[1969,12046],[1970,12046],[1971,12046],[1972,12046],[1973,12046],[1974,12046],[1975,12046],[1976,11817],[1977,11738],[1978,11738],[1989,12047],[1990,12048],[1991,12048],[1992,12048],[1993,12047],[1994,12047],[1995,12049],[1996,12047],[1997,12048],[1998,12048],[1999,12048],[2001,11761],[2005,11715],[2006,11830],[2007,11830],[2008,11830],[2009,11811],[2011,11736],[2015,11715],[2017,11715],[2018,11715],[2020,11715],[2025,11715],[2026,11715],[2027,11828],[2030,11828],[2031,11829],[2032,11835],[2033,11834],[2035,11715],[2036,11736],[2037,11736],[2038,11736],[2039,11736],[2044,12050],[2045,11715],[2048,12051],[2050,11715],[2055,12052],[2056,11715],[2061,12053],[2062,11715],[2069,11715],[2070,11773],[2071,11773],[2074,11715],[2080,11715],[2081,11715],[2085,11715],[2086,11715],[2087,11761],[2089,11835],[2093,12054],[2094,12004],[2095,12054],[2096,12054],[2097,12055],[2098,12054],[2100,11715],[2101,11715],[2105,11715],[2106,11715],[2110,11715],[2111,11715],[2115,11715],[2116,11715],[2120,11715],[2121,11715],[2123,11841],[2134,11715],[2135,11715],[2137,11764],[2138,11764],[2150,11715],[2153,11715],[2155,11715],[2156,11761],[2160,12055],[2161,12055],[2162,12054],[2163,12055],[2164,12055],[2165,12055],[2166,11731],[2167,11715],[2168,11715],[2169,11715],[2170,11715],[2172,11834],[2174,11819],[2178,11715],[2180,11715],[2185,11715],[2190,12056],[2191,11715],[2192,11765],[2193,11736],[2196,11715],[2200,11715],[2201,11715],[2205,11715],[2206,11715],[2210,11715],[2211,11715],[2215,11715],[2216,11715],[2220,11736],[2397,11835],[2410,11764],[2534,11736],[2706,11764],[3086,11835],[3087,11835],[3091,11736],[3463,11828],[3464,11828],[3465,11829],[3466,11835],[3467,11834],[3469,11835],[3473,11834],[3474,11835],[3476,11835],[3477,11835],[3478,11828],[3479,11828],[3480,11834],[3485,11834],[3486,11843],[3492,11843],[3495,11843],[3503,11843],[3505,11844],[3531,11717],[3538,11717],[3539,11717],[3540,11845],[3556,11717],[3569,11717],[3585,11845],[3592,11717],[3594,11717],[3595,11717],[3596,11717],[3597,11717],[3598,11845],[3599,11717],[3621,12057],[3622,12057],[3623,12057],[3625,11785],[3630,11785],[3631,11785],[3633,11785],[3634,11785],[3675,11785],[3712,11785],[3744,11785],[3814,11785],[3900,11739],[3901,11739],[3903,11739],[4116,11863],[4145,11724],[4148,11855],[4149,11855],[4151,11724],[4152,11724],[4153,11724],[4154,11724],[4155,11724],[4156,11724],[4159,11724],[4161,11867],[4173,11724],[4182,11855],[4253,11855],[4263,11855],[4387,11873],[4388,11874],[4389,11874],[4390,11874],[4391,11874],[4392,11874],[4393,11874],[4394,11874],[4395,11874],[4396,11874],[4400,11875],[4405,11876],[4406,11876],[4426,11854],[4460,11854],[4481,11854],[4495,11854],[4496,11854],[4497,11854],[4513,12058],[4514,12059],[4518,11842],[4525,11888],[4527,11956],[4530,11890],[4531,11890],[4532,11955],[4538,11761],[4539,11771],[4540,11895],[4543,11786],[4548,11715],[4549,11830],[4551,11830],[4552,11830],[4553,11896],[4554,11727],[4555,11811],[4557,12060],[4559,11901],[4560,11904],[4562,11935],[4563,11736],[4564,11907],[4566,11935],[4567,11996],[4568,11935],[4571,12061],[4577,11910],[4578,11914],[4583,11715],[4584,11794],[4587,11960],[4589,11715],[4590,11715],[4592,11715],[4593,11892],[4600,11715],[4601,11796],[4602,11944],[4603,11715],[4604,11724],[4607,11929],[4608,11931],[4610,11941],[4619,11828],[4623,11828],[4624,11829],[4625,11945],[4626,11835],[4627,11921],[4628,11834],[4630,11715],[4634,11943],[4635,11943],[4636,11816],[4637,12002],[4638,11816],[4639,11816],[4640,11816],[4641,11816],[4642,11816],[4643,11816],[4644,11816],[4645,11816],[4646,11816],[4647,11816],[4648,11816],[4649,11816],[4650,11777],[4651,11880],[4652,11816],[4653,11816],[4654,11816],[4655,11816],[4656,11816],[4657,11816],[4658,11816],[4659,11816],[4660,11816],[4661,11816],[4662,11816],[4663,11816],[4664,11716],[4665,11791],[4666,11801],[4667,11801],[4668,11776],[4670,11938],[4671,11930],[4674,11739],[4676,11892],[4680,11892],[4682,11932],[4683,11736],[4695,11962],[4696,11932],[4697,11932],[4698,11932],[4699,11884],[4700,11911],[4701,11933],[4708,11736],[4709,11736],[4710,11785],[4711,11991],[4712,11883],[4716,11736],[4724,12050],[4725,11964],[4727,11715],[4731,11951],[4732,12051],[4734,11965],[4736,11715],[4743,12052],[4744,11715],[4746,11882],[4753,11942],[4757,11862],[4763,11951],[4764,12053],[4765,11966],[4766,11715],[4767,11856],[4778,11842],[4782,11842],[4783,11963],[4784,11998],[4793,12061],[4794,12061],[4795,11715],[4796,11773],[4800,11773],[4801,11898],[4802,11998],[4803,11953],[4804,12062],[4806,11816],[4807,11816],[4817,11715],[4825,11715],[4826,11715],[4831,11715],[4832,11715],[4840,11987],[4841,11987],[4842,11987],[4846,11894],[4847,11892],[4851,11761],[4853,11892],[4855,11835],[4856,11855],[4858,11855],[4860,11724],[4861,11724],[4862,11724],[4863,11724],[4864,11724],[4865,11724],[4870,11941],[4880,12054],[4881,12061],[4887,12004],[4888,12054],[4889,11724],[4890,11777],[4891,12054],[4894,11919],[4896,11859],[4897,12004],[4898,12055],[4899,12054],[4901,11880],[4904,11715],[4905,11715],[4910,11715],[4911,11715],[4916,11715],[4917,11715],[4922,11715],[4923,11715],[4928,11715],[4929,11715],[4933,11937],[4935,11739],[4936,11867],[4937,11857],[4938,11974],[4939,11841],[4940,11858],[4941,11823],[4943,11912],[4944,11934],[4945,11934],[4946,11899],[4947,11899],[4948,11899],[4949,11912],[4950,11912],[4953,11816],[4957,11816],[4971,11880],[4972,11857],[4973,11880],[4974,11879],[4975,11952],[4977,11880],[4978,11880],[4981,11936],[4982,11961],[4984,11936],[4985,11936],[4986,11936],[4990,11930],[4992,12063],[4994,12063],[4995,12063],[5001,11924],[5002,11957],[5003,11857],[5004,11857],[5005,11926],[5012,11880],[5017,11723],[5024,11792],[5025,11788],[5026,11790],[5027,11715],[5029,12064],[5030,11897],[5031,11974],[5032,11997],[5033,11789],[5034,11792],[5035,11715],[5036,11954],[5038,11954],[5040,11764],[5043,11764],[5092,11954],[5097,11990],[5098,11990],[5110,11952],[5112,11791],[5114,11823],[5115,11956],[5126,11954],[5134,11932],[5135,11777],[5136,11777],[5137,11723],[5138,11742],[5139,11715],[5142,11715],[5144,11715],[5149,11842],[5150,11888],[5159,11910],[5160,11761],[5162,12065],[5165,11939],[5166,11941],[5167,11939],[5168,11913],[5170,11941],[5171,11915],[5174,12055],[5175,12055],[5176,12054],[5177,12055],[5178,12055],[5179,12055],[5180,11731],[5182,11715],[5183,11717],[5184,11715],[5185,11715],[5186,11767],[5187,11715],[5188,11725],[5189,11717],[5190,12011],[5191,11856],[5192,12016],[5194,12018],[5196,11947],[5199,11798],[5203,12003],[5204,11774],[5206,11933],[5215,11940],[5216,11940],[5217,11816],[5219,11892],[5227,11834],[5237,11952],[5240,11870],[5241,11856],[5242,11928],[5243,11775],[5244,11870],[5245,12066],[5246,11870],[5251,11922],[5252,12067],[5260,11768],[5264,11891],[5265,11925],[5266,11927],[5267,11986],[5268,11986],[5271,11986],[5272,11986],[5273,11822],[5277,11887],[5279,11976],[5280,11976],[5281,11933],[5282,11719],[5285,11992],[5286,11972],[5287,12010],[5288,11940],[5289,11906],[5290,11766],[5303,11817],[5304,11724],[5310,11738],[5311,11738],[5312,11892],[5316,12006],[5318,11930],[5320,11819],[5321,11950],[5329,11843],[5331,11715],[5332,11794],[5334,11948],[5335,11902],[5336,11909],[5338,11715],[5345,11952],[5349,11860],[5350,12039],[5353,11949],[5354,11881],[5356,11715],[5366,11882],[5368,11946],[5369,11923],[5371,11943],[5379,12056],[5380,11993],[5382,11715],[5383,11765],[5384,11736],[5388,12015],[5402,11715],[5409,11715],[5410,11715],[5415,11715],[5416,11715],[5421,11715],[5422,11715],[5427,11715],[5428,11715],[5429,12068],[5430,11977],[5434,11955],[5436,11785],[5439,11736],[5440,11952],[5441,11863],[5444,11918],[5454,12013],[5455,12019],[5459,11943],[5461,11931],[5464,11952],[5465,11952],[5475,11941],[5569,12069],[5573,12070],[5574,12069],[5586,12071],[5597,11855],[5599,12072],[5602,12073],[5613,12073],[5624,12074],[5630,12075],[5633,12076],[5646,12077],[5651,12077],[5654,11816],[5664,12078],[5689,12079],[5693,12080],[5697,12081],[5705,12075],[5707,11943],[5971,12082],[5979,11835],[5984,12080],[5995,12075],[6009,12083],[6012,12084],[6014,12084],[6016,12084],[6301,12085],[6309,12073],[6313,12086],[6314,12072],[6316,12087],[6329,12072],[6338,12068],[6342,12087],[6344,12088],[6347,12087],[6348,12087],[6349,12088],[6350,12088],[6359,12064],[6360,12089],[6366,12090],[6367,12090],[6368,11736],[6374,12091],[6376,12073],[6377,12091],[6379,12091],[6381,12091],[6383,12073],[6384,12091],[6388,12038],[6390,12076],[6391,12078],[6392,11951],[6394,12076],[6395,12076],[6396,12048],[6397,12048],[6398,12048],[6463,12064],[6464,11879],[6725,11982],[6727,12038],[6729,12092],[6874,12093],[6875,12075],[6884,12072],[6885,12072],[6887,11951],[6895,11862],[6896,11862],[6897,11986],[7161,12065],[7162,12065],[7163,12065],[7169,11855],[7190,11816],[7227,12075],[7231,12064],[7235,11816],[7240,12094],[7344,11855],[7348,12073],[7352,12088],[7581,11816],[7591,12075],[7593,11816],[7618,12065],[7628,12061],[7640,11930],[7641,11930],[7722,12095],[7733,12096],[7734,12097],[7735,12097],[7737,12098],[7749,12072],[7752,12004],[7753,12017],[7888,12076],[7889,12076],[7891,12099],[7892,11937],[7894,12099],[7895,12100],[8047,11938],[8049,12065],[8057,12101],[8062,12102],[8065,12103],[8074,12080],[8077,12080],[8084,12089],[8119,12075],[8134,12075],[8143,11954],[8191,11835],[8192,11835],[8197,12074],[8208,12075],[8211,12075],[8219,12104],[8220,12061],[8221,12080],[8232,12080],[8238,12080],[8248,11736],[8257,12080],[8278,12078],[8316,12078],[8327,12105],[8328,12106],[8375,12107],[8399,12080],[8404,12075],[8405,12064],[8438,12061],[8456,11717],[8457,11717],[8458,11717],[8459,11717],[8464,11991],[8473,12080],[8504,12073],[8511,11936],[8515,12108],[8516,12109],[8518,12110],[8525,12110],[8526,12110],[8528,12097],[8530,12065],[8621,12082],[8625,11816],[8638,12083],[8690,11816],[8710,12006],[8712,12006],[8730,12095],[8740,12078],[8741,12111],[8743,12111],[8745,12111],[8747,12111],[8749,12111],[8764,12080],[8789,11943],[8793,12076],[9379,12075],[9404,12064],[9567,11943],[9779,12112],[9787,11816],[9936,11914],[9939,11914],[9947,12113],[9949,12114],[9954,11873],[9955,11874],[9956,11874],[9957,11874],[9958,11874],[9959,11874],[9960,11874],[9961,11874],[9962,11874],[9963,11874],[9967,11818],[9971,11818],[9972,11818],[9973,11818],[9974,11818],[9975,11818],[9976,11818],[9977,11818],[9978,11818],[9979,11818],[9980,11818],[9981,11818],[9982,11818],[9983,11818],[9984,11818],[9985,11818],[9986,11818],[9987,11818],[9988,11818],[9989,11818],[9990,11818],[9991,11818],[9992,11818],[9993,11818],[9994,11818],[9995,11818],[9996,11818],[9997,11818],[9998,11818],[9999,11818],[10000,11818],[10001,11818],[10002,11818],[10003,12024],[10004,12025],[10022,11917],[10040,12026],[10042,12026],[10045,12026],[10059,12026],[10091,12026],[10116,11921],[10117,11964],[10118,11965],[10119,11966],[10120,11928],[10121,12010],[10122,11902],[10123,11993],[10176,12115],[10183,11902],[10189,12027],[10190,11902],[10213,11902],[10222,12028],[10224,12028],[10225,12028],[10236,12028],[10255,11958],[10256,11958],[10292,12116],[10305,11958],[10306,11958],[10313,12029],[10325,12029],[10331,11761],[10335,11715],[10336,11830],[10337,11830],[10338,11830],[10339,11811],[10341,11736],[10345,11715],[10347,11715],[10348,11715],[10350,11715],[10355,11715],[10356,11715],[10357,11828],[10360,11828],[10361,11829],[10362,11835],[10363,11834],[10365,11715],[10366,11736],[10367,11736],[10368,11736],[10369,11736],[10374,12050],[10375,11715],[10378,12051],[10380,11715],[10385,12052],[10386,11715],[10391,12053],[10392,11715],[10397,11715],[10398,11773],[10399,11773],[10402,11715],[10408,11715],[10409,11715],[10413,11715],[10414,11715],[10415,11761],[10417,11835],[10421,12054],[10422,12004],[10423,12054],[10424,12054],[10425,12055],[10426,12054],[10428,11715],[10429,11715],[10433,11715],[10434,11715],[10438,11715],[10439,11715],[10443,11715],[10444,11715],[10448,11715],[10449,11715],[10451,11841],[10462,11715],[10463,11715],[10465,11764],[10466,11764],[10478,11715],[10481,11715],[10483,11715],[10484,11761],[10488,12055],[10489,12055],[10490,12054],[10491,12055],[10492,12055],[10493,12055],[10494,11731],[10495,11715],[10496,11715],[10497,11715],[10498,11715],[10500,11834],[10502,11819],[10506,11715],[10508,11715],[10513,11715],[10518,12056],[10519,11715],[10520,11765],[10521,11736],[10524,11715],[10528,11715],[10529,11715],[10533,11715],[10534,11715],[10538,11715],[10539,11715],[10543,11715],[10544,11715],[10548,11736],[10561,11835],[10564,11764],[10569,11736],[10572,11764],[10587,11835],[10588,11835],[10589,11736],[10607,11828],[10608,11828],[10609,11829],[10610,11835],[10611,11834],[10613,11835],[10617,11834],[10618,11835],[10620,11835],[10621,11835],[10622,11828],[10623,11828],[10624,11834],[10629,11834],[10630,11843],[10631,11843],[10632,11843],[10633,11843],[10634,11844],[10635,12097],[10636,12097],[10637,12097],[10638,11987],[10639,11987],[10640,11987],[10644,11971],[10696,11875],[10699,12030],[10719,12042],[10720,12042],[10735,11944],[10738,11945],[10777,11894],[10820,11947],[10852,11948],[10860,11949],[10865,11946],[10890,11894],[10891,11894],[10892,11894],[10893,11894],[10935,11945],[10939,11947],[10945,12031],[10976,12032],[11003,12043],[11004,12043],[11005,12043],[11006,11937],[11009,11937],[11010,12100],[11011,12117],[11012,12118],[11013,12118],[11014,12118],[11015,12118],[11016,12118],[11017,12033],[11048,12017],[11059,12017],[11064,12017],[11065,12017],[11078,11822],[11079,11822],[11080,11822],[11081,11923],[11082,11923],[11103,11817],[11104,12044],[11105,12044],[11106,12044],[11107,12044],[11110,12045],[11111,12046],[11112,12046],[11113,12046],[11114,12046],[11115,12046],[11116,12046],[11117,12046],[11118,12046],[11119,11817],[11120,11738],[11121,11738],[11132,11907],[11133,12006],[11134,11909],[11153,12095],[11161,12006],[11163,12006],[11166,12095],[11172,12111],[11174,12111],[11176,12111],[11178,12111],[11180,12111],[11186,11918],[11192,12119],[11193,12119],[11197,11766],[11198,11816],[11200,11858],[11201,11766],[11205,11719],[11206,12036],[11207,12036],[11208,11766],[11219,11719],[11225,11719],[11416,11719],[11539,11719],[11636,11734],[11637,11734],[11660,11723],[11661,11723],[11662,11723],[11664,11723],[11668,11723],[11681,11742],[11682,11742],[11689,11970]],"b":[[29,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[30,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[31,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[32,"impl-Add-for-ChunkedArray%3CStringType%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[36,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[37,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[38,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[39,"impl-Add-for-ChunkedArray%3CT%3E"],[40,"impl-Add-for-%26ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CT%3E"],[44,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[46,"impl-AggList-for-ChunkedArray%3CListType%3E"],[47,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[49,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[60,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[61,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CFloat64Type%3E"],[73,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[83,"impl-ChunkedArray%3CT%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[96,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[104,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[118,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[127,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[156,"impl-ChunkedArray%3CStructType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[161,"impl-ChunkedArray%3CT%3E"],[162,"impl-Container-for-ChunkedArray%3CT%3E"],[182,"impl-Div-for-ChunkedArray%3CT%3E"],[183,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[185,"impl-Div-for-%26ChunkedArray%3CT%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[198,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[207,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[217,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[220,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[221,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[222,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[227,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[228,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[229,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[230,"impl-Debug-for-ChunkedArray%3CListType%3E"],[231,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[232,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-Debug-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkedArray%3CListType%3E"],[236,"impl-ChunkedArray%3CFixedSizeListType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[247,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[249,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[252,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[254,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[255,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[256,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[257,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[258,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[259,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[260,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[269,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[270,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[274,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[276,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[277,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[281,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[283,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[284,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[287,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[292,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[305,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[307,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkedArray%3CFixedSizeListType%3E"],[323,"impl-ChunkedArray%3CListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CFixedSizeListType%3E"],[349,"impl-ChunkedArray%3CListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[370,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[375,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[377,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[380,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[383,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[384,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[386,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[387,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[393,"impl-ChunkedArray%3CFixedSizeListType%3E"],[394,"impl-ChunkedArray%3CListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[411,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[414,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[448,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[450,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[455,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[456,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[457,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[458,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[459,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[460,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[461,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[462,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[463,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[464,"impl-ChunkedArray%3CBooleanType%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[467,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[468,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[469,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[470,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[471,"impl-ChunkedArray%3CBooleanType%3E"],[472,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[473,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[474,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[475,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[476,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[477,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[485,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[486,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[492,"impl-ChunkedArray%3CT%3E"],[493,"impl-ChunkedArray%3CBooleanType%3E"],[494,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[495,"impl-Mul-for-ChunkedArray%3CT%3E"],[496,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[497,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[500,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[501,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[502,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[507,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[508,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[510,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[512,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[513,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[515,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[516,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[518,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[520,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[521,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[522,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[525,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[530,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[531,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[532,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[533,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[535,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[539,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[541,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[543,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[544,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[545,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[547,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[548,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[549,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[550,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[551,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[552,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[553,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[554,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[555,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[561,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[562,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[564,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[566,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[573,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[576,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[578,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[582,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[585,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[586,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[588,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkedArray%3CStringType%3E"],[590,"impl-ChunkedArray%3CListType%3E"],[591,"impl-ChunkedArray%3CStringType%3E"],[594,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[596,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[598,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[599,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[628,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[629,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[630,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[631,"impl-Rem-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[646,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[647,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[649,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[650,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[654,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[656,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[657,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[658,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[659,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[666,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[667,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[668,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[669,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[670,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[671,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[672,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[674,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[675,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[676,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[677,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[678,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[679,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[680,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[681,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[684,"impl-Container-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkedArray%3CT%3E"],[686,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[687,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[690,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[691,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[694,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[695,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[696,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[697,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[698,"impl-ChunkedArray%3CT%3E"],[699,"impl-Container-for-ChunkedArray%3CT%3E"],[701,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[702,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[703,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[705,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[706,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[707,"impl-Sub-for-ChunkedArray%3CT%3E"],[708,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[710,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkedArray%3CBooleanType%3E"],[712,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[713,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[714,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[716,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[722,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[723,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[724,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[725,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[726,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[732,"impl-ChunkedArray%3CListType%3E"],[733,"impl-ChunkedArray%3CFixedSizeListType%3E"],[734,"impl-ChunkedArray%3CT%3E"],[735,"impl-ChunkedArray%3CListType%3E"],[740,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[741,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[742,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[743,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[744,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[745,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[747,"impl-ChunkedArray%3CFixedSizeListType%3E"],[748,"impl-ChunkedArray%3CListType%3E"],[762,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[763,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[764,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[765,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[766,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[772,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[773,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[774,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[776,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[781,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[783,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[787,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[800,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[801,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[858,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1034,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1035,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1309,"impl-MetadataProperties"],[1310,"impl-Flags-for-MetadataProperties"],[1311,"impl-MetadataFlags"],[1312,"impl-Flags-for-MetadataFlags"],[1375,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1376,"impl-Metadata%3CT%3E"],[1401,"impl-Octal-for-MetadataProperties"],[1402,"impl-UpperHex-for-MetadataProperties"],[1403,"impl-Debug-for-MetadataProperties"],[1404,"impl-Binary-for-MetadataProperties"],[1405,"impl-LowerHex-for-MetadataProperties"],[1406,"impl-UpperHex-for-MetadataFlags"],[1407,"impl-Octal-for-MetadataFlags"],[1408,"impl-Debug-for-MetadataFlags"],[1409,"impl-LowerHex-for-MetadataFlags"],[1410,"impl-Binary-for-MetadataFlags"],[1420,"impl-Flags-for-MetadataProperties"],[1421,"impl-MetadataProperties"],[1422,"impl-Flags-for-MetadataFlags"],[1423,"impl-MetadataFlags"],[1434,"impl-Metadata%3CT%3E"],[1435,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1478,"impl-Metadata%3CT%3E"],[1479,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1483,"impl-Metadata%3CT%3E"],[1484,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1561,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1562,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1597,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1598,"impl-ObjectArray%3CT%3E"],[1613,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1614,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1624,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1626,"impl-ObjectArray%3CT%3E"],[1627,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1629,"impl-ObjectArray%3CT%3E"],[1630,"impl-Array-for-ObjectArray%3CT%3E"],[1633,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1634,"impl-ObjectChunkedBuilder%3CT%3E"],[1636,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1637,"impl-ObjectChunkedBuilder%3CT%3E"],[2296,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2297,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2298,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2299,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2401,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2402,"impl-Logical%3CDurationType,+Int64Type%3E"],[2404,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2405,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2406,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2407,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2408,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2695,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2696,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2697,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2698,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2699,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2711,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2712,"impl-PartialEq-for-DataType"],[2719,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2720,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2724,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2757,"impl-Debug-for-PlSmallStr"],[2758,"impl-Display-for-PlSmallStr"],[2762,"impl-Debug-for-AnyValue%3C\'a%3E"],[2763,"impl-Display-for-AnyValue%3C\'_%3E"],[2765,"impl-Display-for-DataType"],[2766,"impl-Debug-for-DataType"],[2769,"impl-Display-for-TimeUnit"],[2770,"impl-Debug-for-TimeUnit"],[2773,"impl-From%3C%26String%3E-for-PlSmallStr"],[2774,"impl-From%3CString%3E-for-PlSmallStr"],[2775,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2777,"impl-From%3C%26str%3E-for-PlSmallStr"],[2781,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2782,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2796,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2797,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2798,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2799,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2800,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2802,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2803,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2804,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2808,"impl-From%3C%26ArrowField%3E-for-Field"],[2809,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2833,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2834,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2841,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2842,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2843,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2844,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2845,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2846,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2847,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2848,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2866,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2867,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2868,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2869,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2870,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2873,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2874,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2875,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2876,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2877,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2913,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2914,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2915,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2916,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2917,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2918,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3026,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3027,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3028,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3029,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3030,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3080,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3081,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3082,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3083,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3084,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3085,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3121,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3122,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3123,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3124,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3125,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3126,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3127,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3128,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3134,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3136,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3137,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3139,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3142,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3143,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3164,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3165,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3171,"impl-Logical%3CDurationType,+Int64Type%3E"],[3172,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3179,"impl-Logical%3CDateType,+Int32Type%3E"],[3180,"impl-Logical%3CTimeType,+Int64Type%3E"],[3181,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3197,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3198,"impl-Logical%3CDurationType,+Int64Type%3E"],[3248,"impl-Logical%3CDateType,+Int32Type%3E"],[3249,"impl-Logical%3CTimeType,+Int64Type%3E"],[3250,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3255,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3256,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3571,"impl-Debug-for-ErrString"],[3572,"impl-Display-for-ErrString"],[3573,"impl-Debug-for-PolarsError"],[3574,"impl-Display-for-PolarsError"],[3578,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3579,"impl-From%3CParquetError%3E-for-PolarsError"],[3580,"impl-From%3CError%3E-for-PolarsError"],[3582,"impl-From%3CError%3E-for-PolarsError"],[3583,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3584,"impl-From%3CError%3E-for-PolarsError"],[3721,"impl-Debug-for-DataFrame"],[3722,"impl-Display-for-DataFrame"],[3728,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3729,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3755,"impl-Index%3C%26str%3E-for-DataFrame"],[3756,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3757,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3758,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3759,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3760,"impl-Index%3Cusize%3E-for-DataFrame"],[3761,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3762,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3781,"impl-DataFrame"],[3782,"impl-Container-for-DataFrame"],[3790,"impl-DataFrame"],[3791,"impl-Container-for-DataFrame"],[3835,"impl-DataFrame"],[3836,"impl-Container-for-DataFrame"],[3840,"impl-Container-for-DataFrame"],[3841,"impl-DataFrame"],[3864,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3866,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3907,"impl-Add-for-Column"],[3908,"impl-Add%3CT%3E-for-%26Column"],[3909,"impl-Add%3CT%3E-for-Column"],[3910,"impl-Add-for-%26Column"],[3933,"impl-BitAnd-for-%26Column"],[3934,"impl-Column"],[3935,"impl-BitAnd-for-Column"],[3936,"impl-BitOr-for-Column"],[3937,"impl-BitOr-for-%26Column"],[3938,"impl-BitXor-for-Column"],[3939,"impl-BitXor-for-%26Column"],[3967,"impl-Div%3CT%3E-for-%26Column"],[3968,"impl-Div%3CT%3E-for-Column"],[3969,"impl-Div-for-%26Column"],[3970,"impl-Div-for-Column"],[3994,"impl-From%3CScalarColumn%3E-for-Column"],[3995,"impl-From%3CSeries%3E-for-Column"],[4041,"impl-Mul-for-Column"],[4042,"impl-Mul-for-%26Column"],[4043,"impl-Mul%3CT%3E-for-Column"],[4044,"impl-Mul%3CT%3E-for-%26Column"],[4059,"impl-Rem-for-Column"],[4060,"impl-Rem%3CT%3E-for-%26Column"],[4061,"impl-Rem%3CT%3E-for-Column"],[4062,"impl-Rem-for-%26Column"],[4081,"impl-Sub%3CT%3E-for-%26Column"],[4082,"impl-Sub%3CT%3E-for-Column"],[4083,"impl-Sub-for-%26Column"],[4084,"impl-Sub-for-Column"],[4261,"impl-Display-for-GroupByMethod"],[4262,"impl-Debug-for-GroupByMethod"],[4269,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4270,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4271,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4304,"impl-IntoIterator-for-GroupsIdx"],[4305,"impl-IntoIterator-for-%26GroupsIdx"],[4307,"impl-IntoParallelIterator-for-GroupsIdx"],[4308,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5657,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5658,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5662,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5663,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5691,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5692,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5715,"impl-OptFlags"],[5716,"impl-Flags-for-OptFlags"],[6441,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6442,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6443,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6453,"impl-Default-for-Arc%3CCStr%3E"],[6454,"impl-Default-for-Arc%3CT%3E"],[6455,"impl-Default-for-Arc%3Cstr%3E"],[6456,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6938,"impl-Expr"],[6939,"impl-PartialEq-for-Expr"],[6942,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6943,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6962,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6963,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6964,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6969,"impl-PartialEq-for-StructArray"],[6970,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7249,"impl-Debug-for-Duration"],[7250,"impl-Display-for-Duration"],[7267,"impl-Display-for-JoinType"],[7268,"impl-Debug-for-JoinType"],[7270,"impl-Debug-for-JoinValidation"],[7271,"impl-Display-for-JoinValidation"],[7289,"impl-Display-for-Expr"],[7290,"impl-Debug-for-Expr"],[7292,"impl-Display-for-Operator"],[7293,"impl-Debug-for-Operator"],[7295,"impl-Display-for-BooleanFunction"],[7296,"impl-Debug-for-BooleanFunction"],[7297,"impl-Debug-for-CategoricalFunction"],[7298,"impl-Display-for-CategoricalFunction"],[7299,"impl-Debug-for-TemporalFunction"],[7300,"impl-Display-for-TemporalFunction"],[7301,"impl-Display-for-PowFunction"],[7302,"impl-Debug-for-PowFunction"],[7303,"impl-Display-for-StringFunction"],[7304,"impl-Debug-for-StringFunction"],[7305,"impl-Debug-for-StructFunction"],[7306,"impl-Display-for-StructFunction"],[7308,"impl-Debug-for-FunctionExpr"],[7309,"impl-Display-for-FunctionExpr"],[7322,"impl-Binary-for-OptFlags"],[7323,"impl-UpperHex-for-OptFlags"],[7324,"impl-Octal-for-OptFlags"],[7325,"impl-LowerHex-for-OptFlags"],[7326,"impl-Debug-for-OptFlags"],[7329,"impl-Display-for-Arc%3CT,+A%3E"],[7330,"impl-Pointer-for-Arc%3CT,+A%3E"],[7331,"impl-Debug-for-Arc%3CT,+A%3E"],[7363,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7364,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7441,"impl-From%3Cu64%3E-for-Expr"],[7442,"impl-From%3Ci8%3E-for-Expr"],[7443,"impl-From%3CAggExpr%3E-for-Expr"],[7444,"impl-From%3Ci32%3E-for-Expr"],[7445,"impl-From%3Cbool%3E-for-Expr"],[7446,"impl-From%3C%26str%3E-for-Expr"],[7447,"impl-From%3Cf32%3E-for-Expr"],[7449,"impl-From%3Ci16%3E-for-Expr"],[7450,"impl-From%3Ci64%3E-for-Expr"],[7451,"impl-From%3Cu32%3E-for-Expr"],[7452,"impl-From%3Cf64%3E-for-Expr"],[7453,"impl-From%3Cu8%3E-for-Expr"],[7454,"impl-From%3Cu16%3E-for-Expr"],[7457,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7458,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7459,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7460,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7462,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7463,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7464,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7465,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7466,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7467,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7476,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7477,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7478,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7479,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7492,"impl-From%3CString%3E-for-Selector"],[7493,"impl-From%3C%26str%3E-for-Selector"],[7495,"impl-From%3CPlSmallStr%3E-for-Selector"],[7496,"impl-From%3CExpr%3E-for-Selector"],[7501,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7502,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7503,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7504,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7505,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7506,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7507,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7508,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7509,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7510,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7511,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7512,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7513,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7514,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7516,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7517,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7524,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7525,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7527,"impl-From%3Ci64%3E-for-Scalar"],[7528,"impl-From%3Cf64%3E-for-Scalar"],[7529,"impl-From%3Ci32%3E-for-Scalar"],[7530,"impl-From%3Ci8%3E-for-Scalar"],[7531,"impl-From%3Cu16%3E-for-Scalar"],[7532,"impl-From%3Cu8%3E-for-Scalar"],[7533,"impl-From%3Cf32%3E-for-Scalar"],[7534,"impl-From%3Cu32%3E-for-Scalar"],[7536,"impl-From%3Cu64%3E-for-Scalar"],[7537,"impl-From%3Ci16%3E-for-Scalar"],[7546,"impl-OptFlags"],[7547,"impl-Flags-for-OptFlags"],[7552,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7553,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7561,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7562,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7575,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7576,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8679,"impl-Array-for-StructArray"],[8680,"impl-StructArray"],[8686,"impl-StructArray"],[8687,"impl-Array-for-StructArray"],[8952,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8953,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8957,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[8958,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[9407,"impl-Array-for-StructArray"],[9408,"impl-StructArray"],[9661,"impl-LazyFileListReader-for-LazyCsvReader"],[9662,"impl-LazyCsvReader"],[9663,"impl-LazyJsonLineReader"],[9664,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9705,"impl-LazyFileListReader-for-LazyCsvReader"],[9706,"impl-LazyCsvReader"],[9707,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9708,"impl-LazyJsonLineReader"],[9751,"impl-Array-for-StructArray"],[9752,"impl-StructArray"],[10242,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10243,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10248,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10249,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10959,"impl-Display-for-RollingFunction"],[10960,"impl-Debug-for-RollingFunction"],[10990,"impl-Debug-for-RollingFunctionBy"],[10991,"impl-Display-for-RollingFunctionBy"],[11215,"impl-Add%3CT%3E-for-%26Series"],[11216,"impl-Add%3CT%3E-for-Series"],[11217,"impl-Add-for-%26Series"],[11218,"impl-Add-for-Series"],[11234,"impl-AsSeries-for-Series"],[11235,"impl-SeriesSealed-for-Series"],[11288,"impl-Div-for-%26Series"],[11289,"impl-Div%3CT%3E-for-%26Series"],[11290,"impl-Div-for-Series"],[11291,"impl-Div%3CT%3E-for-Series"],[11302,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11303,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11304,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11306,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11307,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11308,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11324,"impl-Display-for-Series"],[11325,"impl-Debug-for-Series"],[11330,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11331,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11332,"impl-From%3C_SerdeSeries%3E-for-Series"],[11334,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11335,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11336,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11342,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11343,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11344,"impl-FromIterator%3Cu64%3E-for-Series"],[11345,"impl-FromIterator%3Ci32%3E-for-Series"],[11346,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11347,"impl-FromIterator%3C%26i64%3E-for-Series"],[11348,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11349,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11350,"impl-FromIterator%3C%26u32%3E-for-Series"],[11351,"impl-FromIterator%3C%26i16%3E-for-Series"],[11352,"impl-FromIterator%3Ci64%3E-for-Series"],[11353,"impl-FromIterator%3Ci16%3E-for-Series"],[11354,"impl-FromIterator%3Cu32%3E-for-Series"],[11355,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11356,"impl-FromIterator%3C%26u16%3E-for-Series"],[11357,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11358,"impl-FromIterator%3Cu8%3E-for-Series"],[11359,"impl-FromIterator%3CString%3E-for-Series"],[11360,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11361,"impl-FromIterator%3C%26str%3E-for-Series"],[11362,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11363,"impl-FromIterator%3C%26i32%3E-for-Series"],[11364,"impl-FromIterator%3Cu16%3E-for-Series"],[11365,"impl-FromIterator%3C%26bool%3E-for-Series"],[11366,"impl-FromIterator%3C%26u8%3E-for-Series"],[11367,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11368,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11369,"impl-FromIterator%3C%26u64%3E-for-Series"],[11370,"impl-FromIterator%3C%26f64%3E-for-Series"],[11371,"impl-FromIterator%3Cf64%3E-for-Series"],[11372,"impl-FromIterator%3Ci8%3E-for-Series"],[11373,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11374,"impl-FromIterator%3C%26f32%3E-for-Series"],[11375,"impl-FromIterator%3Cf32%3E-for-Series"],[11376,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11377,"impl-FromIterator%3C%26i8%3E-for-Series"],[11378,"impl-FromIterator%3Cbool%3E-for-Series"],[11379,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11380,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11381,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11382,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11383,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11384,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11385,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11386,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11387,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11388,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11389,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11401,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11402,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11403,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11405,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11406,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11407,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11449,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11450,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11451,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11453,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11454,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11455,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11464,"impl-Mul%3CT%3E-for-%26Series"],[11465,"impl-Mul-for-Series"],[11466,"impl-Mul%3CT%3E-for-Series"],[11467,"impl-Mul-for-%26Series"],[11472,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11473,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11474,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11475,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11476,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11477,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11478,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11479,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11480,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11481,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11482,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11483,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11484,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11485,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11486,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11487,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11488,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11489,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11490,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11491,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11492,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11493,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11494,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11495,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11496,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11497,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11498,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11499,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11500,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11501,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11502,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11503,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11504,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11505,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11506,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11507,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11508,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11509,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11510,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11511,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11512,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11513,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11514,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11515,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11516,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11517,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11518,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11519,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11520,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11521,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11522,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11523,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11524,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11530,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11531,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11532,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11534,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11535,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11536,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11544,"impl-Rem-for-%26Series"],[11545,"impl-Rem%3CT%3E-for-%26Series"],[11546,"impl-Rem%3CT%3E-for-Series"],[11575,"impl-Sub-for-%26Series"],[11576,"impl-Sub%3CT%3E-for-%26Series"],[11577,"impl-Sub-for-Series"],[11578,"impl-Sub%3CT%3E-for-Series"],[11602,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11603,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11605,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11606,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAFYQoRDdEOAQ4RDiEOMQ5BDpEOwQ8RDyEBgR","e":"OzAAAAEAANMhewQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAFAF8ABABlAAYAbwAFAHYAFQCNAAAAjwAAAJEAEACjAAAApgADAKsAAgCyAA0AwQAVANkACADjAAsA8QABAPUAHQAZARUAMQETAEcBFQBfAQEAYwEBAGYBHgCHAQIAjwERAKIBAwCpAQIArgECALIBBwC/ASEA5gEGAO8BCAD5ATUAMgIVAEkCAgBNAgQAUwIFAF0CAABfAhoAewIHAIcCEQCbAhAArQIAAK8CCwC8Ag8AzwICANQCAADYAgAA2gIBAOECAADlAgYA7QIAAO8CAgDzAg0AAgMAAAQDKAAvAwIAMwMjAFoDNQCSAwgAnwMRALQDXAAeBBIAPAQHAEUESQCSBA4AogQBAKUEGQDABAAAwwQOANUEAgDbBAIA4AQcAP4ECQAJBQoAHwUAACEFAAAmBQ0ANQUPAEkFEgBeBQAAYAUJAGwFAwByBQEAdgUNAI0FAACPBQAAlwUHAKAFBwC1BQEAuQUAALwFAwDEBQUAywUEANcFCwDqBQQA8QUNAAEGBgALBgcAFAYBABgGFwAxBgcAOgYAAD0GAQBABgEARQYQAFcGAABZBgAAWwYCAF8GAwBkBgEAZwYHAHAGAAByBgUAegYBAH0GAAB/BgEAggYDAIcGAwCMBgIAkAYDAJYGAACZBgAAoQYAAKYGAACpBgEArgYBALEGAAC0BgAAvAYAAMIGAwDOBgYA2AYQAOsGBQDzBggA/gYDAAMHAAAFBwAABwcAAAkHAQAPBwUAGAcBACEHAQAtBwAALwcBADIHAAA1BwAANwcAADsHAAA9BwAAQgcMAFEHAgBgBwAAYgcHAGsHAQBuBwAAcgcAAHQHAwB5BwEAfAcFAIgHFgCgBwEApAcEAKoHAwCxBwcAxgcDAMsHCADVBwQA3AcCAOAHBQDoBwAA6gcOAP0HAQABCAAAAwgAAAgIAQAMCAAADggGABYIAAAYCAAAGwgBAB8IAAAhCAEAJAgAACYIAgAqCAwAOAgAADoIAQA9CAAAPwgBAEIIAABECAEARwgAAEkIAQBMCAMAUwgAAFcIAQBbCAAAXggAAGAIAABiCAMAZwgAAGoICAB0CAIAeQgEAH8IAQCDCAAAhQgCAIkIAQCPCAMAlAgBAJcIAACZCAEAnAgAAJ4IAQChCAAAowgBAKYIAACoCAEAqwgAAK0IAACwCCUA1wgYAPEIAwD2CGoAZAl5AN8JCADpCZ0AiAoFAJAKMQDDChUA2goAAN4KAQDtCgQA8woCAPkKAgASCwEAFQsAABoLBwAlCwAAKAsCACwLBQAzCwQAOQsFAEALAABCCxoAYgsOAHMLLQCiCwAAzwsJANoLAADcCwAA3gsCAOILAwDnCwEA7AsAAO4LBwD3CwAA+gsCAP8LAwAEDAAABwwOABgMAAAbDA8ALAwAAC8MCwA8DA0ASwwBAE4MAABQDA4AYAwAAGgMAABqDAEAcAwRAIQMAACGDAIAiwwhAK8MAQC0DGYAHA0yAFANAQBTDTkAjg0BAJENCACbDQAAnQ0BAKANBACmDQEAqw0AAK0NAgCxDQoAvQ0AAL8NBADGDQQAzA0EANINEgDmDREA+Q0AAPsNAgD/DQYACQ4FABAOGAAsDgAALw4LAD0OAwBHDhUAXw4QAHkOAQB9DgIAgQ4AAIMOAACIDgMAmg4AAKEOAACjDgAApQ4BAKwODAC/DgIAxw4AAMoOAQDQDgAA1g4BANkOAADmDgEA6g4AAPEOAAD6DgEA/Q4BAAEPAAADDwEACw8AAA0PBAAVDwYAHg8KACoPAAAtDwEAMg8EAD8PAABBDwYAUw8CAFgPAQBbDxAAbg8dAI4PCwCbDwEAnw8GAKkPCQC1DwMAug8LAMgPDQDYDwoA5A8TAPoPAAD9DwIAARATABYQDgAmEAIAKhAKADYQAQA5EAMAPhADAEMQCQBOEAcAVxABAFoQHAB4ECgAohAGAK4QAgCyEAAAtRADALsQAAC/EAcAzxANAN4QAQDlEAMA6hABAO4QAgDzEAAA9RAgABkRDAAoEQUALxEHADgRIwBeEQ4AbhEPAH8RAACCEQMAiREGAJMRDgCkEQYArREAALARCAC6EQEAvhEEAMQRBQDLEQAA0BEJANsRAQDfEQQA5REBAOgRCgD0EQAA9xEAAPkRCQAEEgAAChIJABUSBQAfEgAAIhIAACoSAgAxEgAANBIBADoSCABEEgAARhIAAEgSAABKEhEAXxIHAGgSAQBrEgUAdRIEAH0SAgCBEgEAiBIDAI0SAACPEgkAmhIAAJ0SAwCiEgYAqxICALASAACzEgAAtRICALoSAgC+EgUAxRIEAMsSAwDSEgIA2BIAANoSAQDeEgAA4BIEAOcSDwD4EgAA+xIBAP4SAwAEEwIAChMgAC0TAAAvEwEAMxMAADUTAQA5EwAAOxMBAD8TAABBEwUAShMCAE8TAABSEwAAVRMAAFcTAgBbEwIAXxMKAGwTBwB1EwAAdxMAAHsTAQB/EwAAgRMAAIMTAQCGEwEAiRMBAI4TAACQEw0AoRMFAKgTBwCyEwIAthMGAMETAQDEEwAAxhMBAMkTBADPEwMA1BMCANgTAADaEwQA4BMAAOITBgDqEwQA8BMBAPMTAQD2EwEA+RMBAPwTAAD+EwAAABQAAAMUAgAIFAMADRQHABcUAgAeFAAAIBQGACgUAwAuFAAAMBQAADMUAAA1FAMAOhQCAD4UAABAFAIARBQAAEYUBwBPFAcAWRQVAHAUFQCJFAEAjBQPAJ4UAACgFAEApBQMALIUAAC0FAIAuRQBAL0UAQDCFAcAyxQDANMUBgDbFAkA5xQDAOwUCAD2FAAA+BQCAP0UAgAEFQUACxUSACAVAAAiFQEAJhUAACgVAQAsFQAALhUBADIVAAA0FQQAOxUDAEAVAQBDFQEASRUKAFUVAABYFQYAYRUCAGUVXgDFFQUA0BUAANIVAADVFQYA3hUAAOYVAADqFQAA7BUAAPAVBQD6FQAA/hUAAAUWAAAJFgAAFRYCABkWCAAjFgAAJRYBACgWAgAvFgEAMhYEADgWAQBAFgoATRYAAE8WAABSFgAAVRYBAFgWAABaFvcAUxcCAFcXAQBaFwAAXBcCAGIXAABmFwAAahcAAGwXAABuFwAAdBcAAHYXAQB5FwAAgxdPANQXCwDhF7kAnBgBAKIYAgCoGAIArhgKAL0YBADDGAAAyRgAAMsYAADVGAEA2RgAANsYAADhGAAA5hgBAPgYAAD9GAIAAxkAAAUZBQANGSgAOhkCAT8aAABEGgEARxoDAE4aAABQGgMAWBoJAGMaYwDIGg0A2xoBAOAaAQDjGgAA5xoAAOkaAADrGgIA7xorABwbFgA0Gw4ARhutAPgbAAD/GwAAARwBAAQcAAAGHAAAChwAAA4cAAAQHAAAFBwAABccAAAaHAAAIRwAACQcAgArHAYAMxwBADYcAAA4HAMAQBwAAEIcAABEHAEASRxpALccAADEHAEA5xwAAO8cAADyHAAAEh0GABodBQAiHQMAJx0FADMdAAA1HQMAQR0AAEUdAQBIHQEAVh0AAFwdAABlHQEAaB0HAHEdAQB5HQAAfB0AAH4dAACBHQEAih0BAI8dAgCVHQUAnB0CAKAdAQCkHQIAqB0AAKodAACsHQAAsR0AALcdAAC6HQEAvR0DAMIdAADEHQEAyh0EANIdAQDWHQAA4R0AAOMdQAAnHgMALx4AADEeAAAzHgQAOh4AADweAAA+HgEAQR4AAEQeAQBJHgAATB5/AM4eAADTHgIA1x4BAFcfAQBbHwAAXR8GAGcfBQBuHwMAcx8CAHgfAAB6HwEAfR8AAH8fAACCHwEAiR8AAJAfAACSHwEAlh8CAJofAwCgHwIApR8AAKcfAACuHwEAsR8CALsfAAC9HwEAwB8AAMQfAgDKHwEA0h8DANgfAQDcHwIA4B8DAOYfDgD6HwAAACABAAcgAAAKIAUAEyAAABsgAgAoIAAAMiAAADkgAAA7IAEAPiAAAEEgAABGIAAASCAAAEogAABPIAAAUyAAAFUgAgBcIAYAaSAIAHcgAAB5IAAAfSAAAIMgAACFIAQAjiABAJEgAQCUIAAAlyAIAKIgAQClIAAAqCABAKwgAACwIAAAuCAAALsgAQDCIAEAyCABAMsgBADWIAIA3iABAOUgAgDpIAIA9CAAAPYgBAD8IAUAAyEAAAkhAwAOIQAAECECABYhAAAYIQAAJCEAACchAQAqIQEALSEDADMhBQA6IQQAQCEAAEUhAABLIQAAUSEBAFchAABbIQAAXSEAAF8hAQCCIQAAhyEAAI8hAwCUIQUAnCEBAKYhAACqIQIAriEEALYhAAC4IQEAuyEBAL4hAQDCIQAAxCEAAMYhAwDNIQAA1iEAANghAADaIQAA4CEDAOghAADqIQAA7CEAAO4hAADwIQAA8yEAAPUhAAD7IQIA/yECAAMiBwAMIgAADiIAABIiAAAYIgAAGyIAACEiAAAlIgoAMiICADciAAA6IgIARSIBAFYiAABYIgAAWyICAF8iAwBkIgIAaCIAAGsiAABvIl4A0CIOAOIiAQDnIgoA8yIAAPUiAQD4Io4AiCN7AAckAAAJJAMAFCQAABckDwAoJHoApCQAAKwkAACxJAAAsyQAALUkAAC7JAUAwiQBAMYkAQDKJAAAziQAANQkAQDXJAAA2SR7AFslAwBkJQAAZyUAAGklAABtJQEAcSUBAHQlAAB8JQAAgCUBAIYlAACMJQAAliUAAJ0lAQCoJQMAryUBAL4lAADBJQAAxCUAAMYlAADOJQEA0SUBANclAADkJQAA6iUAAOwlAADwJQAA+CUAAP0lAAAJJgAADCYBAA8mAAARJgEAGCYAABomAQAfJhQANSYBADsmAQA+Jg0ATSYEAFMmMACGJgAAiCYAAIomAQCNJgEAkCYGAJgmPwDZJgEA3CYIAOcmBQDuJgkA+SYBAPwmAAAAJwAAAicDAAcnAQAKJwUAFCcSACgnAQArJwIAMCcAADQnFgBMJxcAaCcEAHEnEwCGJwYAnScAAKsnAgDBJwAAyCcIANUnAADXJwwA5ScCAOknEgD9JwEAACgPABEoGQAtKAAALygCADQoCgBAKAEAQygGAEsoAwBQKAIAVCgAAFcoBgBfKAQAZigCAGooBQByKAAAdCgOAIcoAQCLKAAAjSgAAJIoAQCWKAAAmCgEAJ4oAACgKAAAoygBAKcoAACpKAEArCgAAK4oAgCyKAwAwCgAAMIoAQDFKAAAxygBAMooAADMKAEAzygAANEoAQDUKAMA2ygAAN8oAQDjKAAA5igAAOgoAADqKAMA7ygAAPIoCAD8KAIAASkEAAcpAQALKQAADSkCABEpAQAXKQMAHCkBAB8pAAAhKQEAJCkAACYpAQApKQAAKykBAC4pAAAwKQEAMykAADUpAAA4KRIATCkHAFYpAABZKREAbCkIAHYpAQB5KQgAgykAAIUpAQCLKQEAjikEAJcpAQCgKQIApikAAKgpAACyKQAAwSkDAMkpCgDVKQAA1ykIAOIp7wDTKgEA1ioaAPIqAQD1KhAACCsSABwrAAAeKxcANysBADsrAAA9KwsASisCAFErAABhKwMAaCsHAH0rBQCFKwAAjisAAJArAQCXKwYAnysAAKUrCgC5KwUAwCsAAMIrAwDHKwUA0CsEANYrAQDaKwAA4CsEAOkrAgDtKwoA+ysCAP8rAAADLAIABywDAA8sEQAkLAEAKCwBACssAQAwLAIAPCwDAEMsAgBHLAIATCwBAE8sMACDLAAAhSwAAIosAACMLAAAjiwBAJIsAACYLAEAmywDAKMsBACvLAIAsywAALUsAAC4LAAAuywBAL8sAQDELAAAySwDAM4sAADRLCsA/iwHAAgtAQAMLQEADy0AABEtAAAULQEAGS0CAB4tAQAhLQAAJC0CACotAQAtLQAALy0AADEtAAA1LQAAOC0DAEEtAABJLQAASy0BAE4tDwBfLQUAay0AAG4tAwBzLQAAdi0LAIMtAACFLQAAhy0EAI0tFgCmLQEAqi0PALstAQC+LQQA"}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPKKKPFPPIIGKEEEPIIIPPEPEEEKEEPPPKKPEPGPPIFEKPPPFGEEIEPKGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","","gt_eq","","","","","","hash","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","","lt_eq","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompare","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[445,"polars_core::chunked_array::arithmetic"],[473,"polars_core::chunked_array::builder"],[581,"polars_core::chunked_array::builder::list"],[735,"polars_core::chunked_array::cast"],[764,"polars_core::chunked_array::collect"],[778,"polars_core::chunked_array::float"],[780,"polars_core::chunked_array::from_iterator_par"],[784,"polars_core::chunked_array::iterator"],[821,"polars_core::chunked_array::iterator::par"],[823,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1363,"polars_core::chunked_array::ops::arity"],[1399,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1401,"polars_core::chunked_array::ops::gather"],[1404,"polars_core::chunked_array::ops::search_sorted"],[1434,"polars_core::chunked_array::ops::sort"],[1441,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1442,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1450,"polars_core::chunked_array::ops::sort::options"],[1527,"polars_core::chunked_array::temporal"],[1528,"polars_core::chunked_array::temporal::conversion"],[1531,"polars_core::config"],[1535,"polars_core::datatypes"],[2996,"polars_core::datatypes::categorical"],[3138,"polars_core::datatypes::categorical::revmap"],[3192,"polars_core::datatypes::categorical::string_cache"],[3211,"polars_core::datatypes::enum_"],[3229,"polars_core::datatypes::revmap"],[3235,"polars_core::datatypes::string_cache"],[3239,"polars_core::error"],[3306,"polars_core::error::PolarsError"],[3310,"polars_core::error::constants"],[3313,"polars_core::export"],[3320,"polars_core::fmt"],[3351,"polars_core::frame"],[3635,"polars_core::frame::column"],[3845,"polars_core::frame::explode"],[3874,"polars_core::frame::group_by"],[4113,"polars_core::frame::group_by::GroupByMethod"],[4114,"polars_core::frame::group_by::GroupsProxy"],[4116,"polars_core::frame::group_by::aggregations"],[4129,"polars_core::frame::group_by::expr"],[4132,"polars_core::frame::row"],[4229,"polars_core::functions"],[4231,"polars_core::hashing"],[4279,"polars_core::prelude"],[4908,"polars_core::prelude::PolarsError"],[4912,"polars_core::prelude::default_arrays"],[4918,"polars_core::prelude::list"],[4941,"polars_core::prelude::null"],[4972,"polars_core::prelude::revmap"],[4978,"polars_core::prelude::slice"],[4981,"polars_core::prelude::string_cache"],[4985,"polars_core::prelude::utf8"],[4989,"polars_core::random"],[4990,"polars_core::scalar"],[5030,"polars_core::scalar::reduce"],[5031,"polars_core::schema"],[5053,"polars_core::series"],[5474,"polars_core::series::amortized_iter"],[5498,"polars_core::series::arithmetic"],[5523,"polars_core::series::arithmetic::checked"],[5531,"polars_core::series::ops"],[5558,"polars_core::utils"],[5769,"polars_core::utils::flatten"],[5774,"dyn_clone::sealed"],[5775,"num_traits"],[5776,"num_traits::cast"],[5777,"polars_error"],[5778,"polars_core::series::arithmetic::borrowed"],[5779,"polars_core::frame::group_by::proxy"],[5780,"core::option"],[5781,"core::iter::traits::iterator"],[5782,"polars_utils::pl_str"],[5783,"core::ops::function"],[5784,"core::marker"],[5785,"alloc::string"],[5786,"polars_core::datatypes::dtype"],[5787,"polars_arrow::array::binview::view"],[5788,"polars_core::datatypes::aliases"],[5789,"polars_core::chunked_array::metadata::md_trait"],[5790,"alloc::boxed"],[5791,"polars_core::series::arithmetic::borrowed::checked"],[5792,"polars_arrow::array"],[5793,"alloc::vec"],[5794,"compact_str"],[5795,"core::iter::traits::double_ended"],[5796,"core::fmt"],[5797,"core::iter::traits::collect"],[5798,"polars_arrow::bitmap::immutable"],[5799,"rayon::iter"],[5800,"polars_arrow::trusted_len"],[5801,"polars_core::datatypes::any_value"],[5802,"polars_utils::index"],[5803,"std::sync::rwlock"],[5804,"polars_core::chunked_array::logical::decimal"],[5805,"core::iter::traits::exact_size"],[5806,"polars_core::series::series_trait"],[5807,"core::slice::iter"],[5808,"core::iter::adapters::map"],[5809,"core::convert"],[5810,"polars_core::chunked_array::metadata::guard"],[5811,"polars_core::chunked_array::metadata::interior_mutable"],[5812,"alloc::sync"],[5813,"core::ops::range"],[5814,"polars_core::datatypes::field"],[5815,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5816,"polars_core::chunked_array::ops::rolling_window"],[5817,"polars_utils::aliases"],[5818,"polars_utils::hashing"],[5819,"ndarray::aliases"],[5820,"either"],[5821,"core::result"],[5822,"core::any"],[5823,"polars_core::chunked_array::arithmetic::numeric"],[5824,"polars_core::chunked_array::builder::string"],[5825,"polars_arrow::array::binview"],[5826,"polars_core::chunked_array::builder::boolean"],[5827,"polars_core::chunked_array::builder::null"],[5828,"polars_core::chunked_array::builder::primitive"],[5829,"core::clone"],[5830,"polars_core::chunked_array::builder::list::anonymous"],[5831,"polars_core::chunked_array::builder::list::boolean"],[5832,"polars_core::chunked_array::builder::list::primitive"],[5833,"polars_core::chunked_array::builder::list::binary"],[5834,"polars_core::chunked_array::builder::list::null"],[5835,"core::hash"],[5836,"polars_arrow::array::boolean"],[5837,"polars_core::chunked_array::metadata::env"],[5838,"polars_core::chunked_array::metadata::collect"],[5839,"bitflags::iter"],[5840,"std::fs"],[5841,"std::sync::mutex"],[5842,"polars_arrow::datatypes"],[5843,"polars_arrow::bitmap::utils::iterator"],[5844,"polars_arrow::bitmap::utils::zip_validity"],[5845,"polars_arrow::offset"],[5846,"polars_arrow::array::static_array"],[5847,"core::error"],[5848,"polars_arrow::array::primitive"],[5849,"polars_arrow::legacy::array::slice"],[5850,"polars_row::row"],[5851,"polars_arrow::array::binary"],[5852,"chrono::naive::datetime"],[5853,"alloc::borrow"],[5854,"polars_arrow::array::static_array_collect"],[5855,"bytemuck::zeroable"],[5856,"polars_core::chunked_array::logical::categorical"],[5857,"polars_core::chunked_array::logical::categorical::merge"],[5858,"polars_core::chunked_array::logical"],[5859,"polars_core::datatypes::time_unit"],[5860,"polars_arrow::datatypes::physical_type"],[5861,"polars_arrow::types"],[5862,"core::borrow"],[5863,"polars_arrow::pushable"],[5864,"polars_core::datatypes::into_scalar"],[5865,"core::cmp"],[5866,"polars_core::chunked_array::logical::categorical::builder"],[5867,"polars_core::chunked_array::logical::categorical::revmap"],[5868,"polars_core::chunked_array::logical::categorical::string_cache"],[5869,"polars_core::chunked_array::logical::enum_"],[5870,"polars_error::warning"],[5871,"polars_arrow::datatypes::schema"],[5872,"polars_core::series::from"],[5873,"polars_core::chunked_array::ndarray"],[5874,"polars_arrow::array::struct_"],[5875,"polars_arrow::record_batch"],[5876,"polars_core::series::iterator"],[5877,"polars_utils::idx_vec"],[5878,"rayon::iter::plumbing"],[5879,"polars_core::frame::group_by::into_groups"],[5880,"core::iter::adapters::copied"],[5881,"core::iter::adapters::zip"],[5882,"polars_arrow::legacy::kernels::rolling"],[5883,"polars_utils::float"],[5884,"polars_arrow::types::native"],[5885,"polars_core::frame::group_by::aggregations::agg_list"],[5886,"polars_core::frame::row::av_buffer"],[5887,"polars_core::hashing::identity"],[5888,"hashbrown::map"],[5889,"polars_core::hashing::vector_hasher"],[5890,"core::alloc"],[5891,"std::os::fd::owned"],[5892,"std::os::fd::raw"],[5893,"std::ffi::os_str"],[5894,"std::path"],[5895,"core::mem::maybe_uninit"],[5896,"polars_arrow::legacy::kernels::time"],[5897,"core::default"],[5898,"core::ffi::c_str"],[5899,"polars_arrow::scalar"],[5900,"std::io::error"],[5901,"regex::error"],[5902,"simdutf8::basic"],[5903,"alloc::collections"],[5904,"alloc::ffi::c_str"],[5905,"polars_arrow::legacy::array::default_arrays"],[5906,"polars_arrow::buffer::immutable"],[5907,"polars_arrow::array::list"],[5908,"polars_core::named_from"],[5909,"polars_core::chunked_array::ops::aggregate"],[5910,"polars_core::chunked_array::ops::aggregate::quantile"],[5911,"polars_arrow::legacy::index"],[5912,"core::pin"],[5913,"core::io::borrowed_buf"],[5914,"std::io"],[5915,"polars_core::chunked_array::ops::aggregate::var"],[5916,"alloc::collections::btree::map"],[5917,"polars_arrow::legacy::array::list"],[5918,"polars_arrow::legacy::array::null"],[5919,"polars_arrow::bitmap::mutable"],[5920,"polars_arrow::array::utf8"],[5921,"polars_schema::schema"],[5922,"alloc::rc"],[5923,"polars_core::utils::supertype"],[5924,"polars_arrow::legacy::utils"],[5925,"polars_arrow::legacy::trusted_len::rev"],[5926,"core::iter::sources::repeat"],[5927,"core::iter::adapters::take"],[5928,"polars_core::chunked_array::object::extension"],[5929,"polars_error::constants"],[5930,"polars_core::frame::horizontal"],[5931,"polars_arrow::legacy::prelude"],[5932,"polars_arrow::legacy::array"],[5933,"polars_arrow::legacy::array::utf8"],[5934,"polars_core::utils::any_value"],[5935,"polars_core::utils::schema"],[5936,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kl000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`000000000000000000000000000000001000010000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fd000000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGb0Ib`3Lb22````````42110Ld4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541F`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf000000000000000000000````AEj00AEl0000000```00`0`10000AG````````````````````````````0AFf``AGb22222CE`3033AFb3AFh044AFj0AFl`77AFn00888888866AGd0`AGhAGj`;;`AGlAGn`AH`0<<>>>AHbAHd>><<AHf==:AHhAGb0:2AHjAHlAHn0`0AI`AIb`AFj0AIdAFbAIfAIhAIjAG`000AFl61`AIl`AJfAJbAIn`````````````````````````````````````AJj00`0`000000000000000000`00000`````AJl0````````````EdEj101010101010101010101011100010110010101010101010221010101010101010010010````````AMj`C```````HnDnADj`1``2`0210```21````2`````100`1`2100``010`2120```0040210``210```BBn`4CEbCEd``````7``543``543``543``543``3`666333BC`654``3``4AOfAMn1010A`987`98`9``:3:```````````B@``3`<:9`:`8988```80`:98``:98``:98``:98``898`88AJ`0<0AMfAMh=?<AMlMj7AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfE`JdGf0D`00El00HnjJbLnMbMdLjCnClDjDdAnE`?>=AEhGf0220020D`El344AKlAKn43243232664325643253432AKd54305436AL`0ALb06HnDnMjALdAJ`><<<<<<AMfCEfBnjJbIdAMh;AMj;AMl;AMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMfCEfBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfDn`AMd0Hn2E`GfD`ElAKd6Jd54321`JbLnMbMdLjCnClAMfAMh?AMjDnAMlMjAMnAN`ANb>=ANdANf>=<;ANhANjDjDdANlAnANnAO`AObAOdADjAOfAMfAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMfAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfMjAOh000Dn00`HnAMj26AMf0CEfBnjJbIdAMh879AMl<AMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMf0CEfBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfJdjJbLnMbMdLjCnClAMfCEfBn:9IdAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMdJdHnMj0`1AMjDn0AMl3AMn985E`GfD`0El0321100999777666555888444===<<<3AMf3121AEhAMb6431AMh==;::9<88ADjAOf95CEfBnjJbId7Hn00000AMjDn000AMlMj00AMn0AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADj00AOfDnE`00GfD`0El0AEh32104432211AKd01432154433225432143214AJ`00654312065431260JdAMd08765341008765348C`jJbIdAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdE`AEh0HnB@nAJ`4D`AKd6Gf2El278133008133006AMjDnMjAMnADjAOf<<4AMfCEfBnjJbIdAMhHn=<AMl<;AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfE`Dn3AMfCEfBnjJbIdAMhHnAMj9AMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMfBA`0E`GfD`ElAKdAEhBAbJd8HnDn0010000101000010=1010100001000010=AJ`:01:98877:98877``1AMj::98:AKlAKn10`<<;:<6jJbLnMbMdLjCnClD`ElMj0CEbCEdBBh55554444AEh040E`Gf87AKd333AMfAMl3343;;::43;;::404;4;HnAMn3Jd4AKlAKn108jJbLnMbMdLjCnClE`GfD`ElAKdAEh`JdAMf65465465477Mj87654387654376547654AKlAKnHn0`5jJbLnMbMdLjCnClGf0ElD`011Dn?AMn102E`ADj1AMfAMhHnAMj7AMlMj8AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfDn2JdAMfHn3AMnEl2E`0AL`0ALb0AOh00067CEfBnjJbIdAMh<AMjDnAMlMj?AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfAMfCEfBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfHnDn10AMnE`AMfCEfBnjJbIdAMh:AMj:AMlMj;AN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOf1GfD`ElAEhAJ`0Dn1AKlAKn7BAjBAlAOlBAnBB`BBbBBdBBfBA`:9?>AKd>Gf:98765432<;D`El3AEhAMfCEfBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbLnMbANdANfMdLjCnClANhANjDjDdANlAnANnAO`AObAOdADjAOfCEbCEdBBhEfAJ`HnE``````BBn`BC`10`AM`00BBj10010BCbBBl32103`3333021032103221033333333AMb3132144444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCh0000`00`0000000`0`BCj0000000000000000`8787`````BCnAKh000Ah`112101```11111112BCl3030`3003030`300300`3030`0``````0303003030CEhCEj10```````````BDb0000000000`0`````00`````00000BDl`0BDj11``0``01BCf0000000000000000000BF`BFb3421034222342342342`224210342103422221034222222222242224442`2222223422103422222222222222222`222422222222222222103422103421022222222222222222222221022222222222222222`222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Eh`00BGb1111111111111111110110111111111111010101010111010101110101111110110111111111111110111001111111111101111111010BDh212221222222221222222222212121222222222222221222222222222122222221222212121212122222222212222`BGh000000000000000000000000000`BGn0``0``````BHfAl`2`22222222210`222BGj1BEd40`1023BI`BHbBH`453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BHj04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CElCEn0``````````BIlBIn0`BJ`0BJbBJd``101010101010`10101010BEb211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BJfBJh10110101010100001010`101010BJn0002122222`````````BFl````````````AKh00`0Bh0BO`Ah4```BBn`N`5```````5```3BC``1``````211``1`6`4BLf````471``````BIf``61`````88`88``8``8`8``0``7OfBL`LfNb=B@d85BLbBLd84444>>>>4>44?>>65443=BFl3;8219AKhBh9876BO`36>;54<`87BKn02;:9847?<65=2;:9847?<65=2;:9847?<65=29AOh0003:44``7::3::::958N``544=<;;:3690>87?54=<;:3690>87?;`;;;54=<;;:3690>87?994=;;;:690>87?444===;;;666999000???<AMb<6655>=<<<;7:1?98BLf<7777766666??>==================<58;2BIf;:1BNfBNjBNl::::::::LfCF`0000111<<;<BOb222Fl3>3BFlB@d<:Of66`AKhBh2BL`9NbBO`76N`BIfBLbBLdBLf:7198:7Lf76=<543210000098;<0;0BE`1`1``1BOl0BOn?:11?3C@`C@b5B@d6666666666`Of?Bh888````:6688588888`8`AJl09C@nBL``;994340;NbBFl7N`BIfBLbBLdBLfAKh;LfAOh0002=>:119BO`9B@d987654?Of=4<2;1:9876C@`555555556Bh66702?6>4=3<;:986`C@n813BL`8Nb7BFl7N`BIfBLbBLdBLf?66<AKhLf;;;0CEhCEj10```BNfBNjBNl`CAh000000000000000000000`CAl00000000000000000000000000000`BBnBC`10``AJl0``````CFbCFd``L`000000000000000000000000000000`0000000`CBn0`````BDfCBj1010121010101Jn0``00```BGd11````01AfBOh0111111`10000`10001001001110000001CCb342034211122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFd32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`3322233323325223333222331233222322223333333322332222333533331453333314533333314533333223222221453333``Ch000000000000000000000```CCf0CChAj0`2100210021002100``BKnFf0100CCj0`000000000000000000000000CCl0``````````0CCnCDb```````211````22222222CDjAJn43210432CD`543543543``CDd06``6653322654322654632654``636533366655565`6666653265546666226CDh337333````4764376577743765375BFh6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dh{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dj}}}}c}{{l{Dj}}}{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dj}}}}}El}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEn{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fb{F`}}}C`}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}Fd}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Ff}{{{f{{l{c}}}}e}{{Ah{Af}}}FfAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}C`}{{{f{{l{c}}}}}FjC`}{{{f{{l{c}}}}}{{f{{Fn{Fl}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fn{Fl}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fG`}{{{f{{l{c}}}}}{{Ah{{f{Dh}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gb}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gb}bC`C`}{{{f{{l{c}}}}}{{`{{Gd{}{{Bb{{f{Dh}}}}}}}}}A`}{{}{{l{c}}}C`}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bC`}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gf}}}{{Ah{{l{c}}}}}{{C`{}{{Gh{Bn}}{Gj{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}H`{{C`{}{{Hb{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}Hd{{C`{}{{Hb{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Hb{}}}}C`}Hd}{{Bh{Fn{Fl}}}{{l{c}}}C`}{{Bh{Fn{Fl}}Dn}{{l{c}}}C`}{c{{l{e}}}{{Hd{}{{Bb{{Hh{Fn{B`{Hf}}}}}}}}}A`}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}21{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dh}}}{{l{c}}}A`}{{Bh{f{{Dh{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhFn}{{l{c}}}A`}{{BhFn{B`{Hf}}}{{l{c}}}A`}{{BhFh}{{l{c}}}A`}0{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{BhFh{f{Dn}}}E`}{{{f{{l{c}}}}Fh}B`C`}{{{f{{l{c}}}}Fh}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fh}HnA`}{{{f{{l{j}}}}Fh}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}IbC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{Id{c}}}}}}Fh}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FhdFh}AlEn}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}018{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{}Fh}0{{FhIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}C`}{{}c{}}0{{}Eh}{{{l{Jb}}{B`{Fh}}Fh}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fh}}Fh}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GdHl}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}GfJl}000{{{f{{l{c}}}}}GfC`}02{{{f{{l{c}}}}}JnC`}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{l{c}}}}}{{Kh{{Kd{Fl}}{Kf{{f{Fl}}}{{Cb{{B`{{f{Hf}}}}}}}}}}}C`}`{{fc}G`{{Kj{Dl}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}{{{f{{l{c}}}}}{{Kl{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{c}}}}}FhC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}En}{{{f{{l{c}}}}}L`En}{{{f{Bj{l{c}}}}{In{c}}}bC`}`{{{f{{l{c}}}}}{{Lb{c}}}C`}{{{f{{l{c}}}}}{{f{{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Lh{F`}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{Lf{{Ld{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{Dh}}}{{l{c}}}A`}{{Bh{f{{Dh{Df}}}}FhFh}{{l{An}}}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FhC`}{{{f{{l{c}}}}}{{Ah{Fh}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bhc}{{l{Lj}}}{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{{B`{Ll}}}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dh{M`}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dh{{B`{M`}}}}}}}}{{Bhc}{{l{Mb}}}{{Kj{{Dh{{B`{Il}}}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{d}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dh{{Fn{Df}}}}}}}}{{Bhc}{{l{Mb}}}{{Kj{{Dh{Il}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}{{l{Dj}}}{{Kj{{Dh{Db}}}}}}{{Bhc}{{l{Md}}}{{Kj{{Dh{Mf}}}}}}{{Bhc}{{l{Lj}}}{{Kj{{Dh{Kb}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dh{{B`{d}}}}}}}}{{Bh{Mh{M`}}}{{l{Ln}}}}{{Bh{Mh{Il}}}{{l{Mb}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{Ij}}}}}}{{Bh{Mh{Mf}}}{{l{Md}}}}{{Bh{Mh{Kb}}}{{l{Lj}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}{{l{Md}}}{{Kj{{Dh{{B`{Mf}}}}}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dh{n}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dh{Ll}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FhFh}{{l{c}}}A`}{{Bh{Fn{c}}}{{l{{Id{c}}}}}Ih}{{Bh{Fn{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhFn}{{l{c}}}A`}{{{Lf{Mj}}{Fn{Fl}}I`I`}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{{l{c}}}}}FhC`}``{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dj}}}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{{l{c}}}}}L`A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}En}{{{f{{l{c}}}}nN`}{{Ah{L`}}}En}{{BhFhn}{{Ah{{l{An}}}}}}{{BhFhnn}{{Ah{{l{c}}}}}A`}{{BhFh}{{l{c}}}A`}{{BhFhnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Mj}}}C`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fhe}{{Ah{{l{c}}}}}Jl{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Fhdd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Gf}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}I`}bC`}{{{f{Bj{l{c}}}}Jn}bC`}{{{f{{l{c}}}}Kb}{{l{c}}}A`}{{{f{{l{c}}}}KbB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}KbFh}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Kb}{{Hh{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kj{{Dh{I`}}}}Nd}}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}{{Kj{{Dh{I`}}}}Nd}}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}}`{{{f{{l{c}}}}dNh}{{Fn{{Fn{Nj}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dj}}}}Fh}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{j}}}}}{{Ah{Nl}}}}{{{f{{l{c}}}}}{{Ah{Nn}}}A`}{fc{}}{{{f{{l{Dd}}}}}D`}{{{f{{l{c}}}}}{{Fn{B`}}}A`}{{{f{{l{c}}}}}{{O`{Fn{Fn{B`}}}}}A`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{Ob{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{C`{}{{Hb{c}}}}C`}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fh}{}C`}{{{f{{l{c}}}}Df}{{B`{n}}}A`}{{{f{{l{c}}}}Df}L`En}{{}c{}}0{{Bhc}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{c}}}}{Fn{Fl}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}C`}{{{f{{l{c}}}}}eA`{}}{{{l{c}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}3201{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}452301543276453201453210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kj{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kj{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{Fhb}000{A@b{{l{c}}}C`}{{{A@d{Dl}}}D`}{{{A@d{{Dh{Df}}}}}El}{AA`D`}{AAbEl}{A@hGf}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dh{c}}}}}AAd{}}{{Bh{f{{Dh{{B`{c}}}}}}}AAd{}}{{}Fh}000{{}c{}}000`{{BhFh}{{A@d{c}}}{A@fNd}}{{BhFh}A@h}{{BhFh}A@j}{{BhFh}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dh}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dh}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Dl}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dh{Df}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Dl}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dh{Df}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fh{{f{c}}}{}}000000{Fh{{f{Bjc}}}{}}000000{Fhb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}E`}{{{f{BjAAh}}}E`}{{{f{BjABd}}}E`}{{{f{BjAAn}}}E`}{cc{}}000000{{{f{Dn}}FhFhBh}{{Ah{{Fb{AAn}}}}}}{{}Fh}000000{{{f{BjAB`}}}Fl}{{{f{BjABb}}}Fl}{{{f{BjAAj}}}Fl}{{{f{Bj{AAl{c}}}}}FlA`}{{{f{BjAAn}}}Fl}{{}c{}}000000{{BhFh{B`{Dn}}}AAf}{{BhFh{B`{Dn}}}AAh}{{BhFhFh}AB`}{{BhFhFh}ABb}{{BhFhFh}AAj}{{BhFh}ABd}{{BhFhFhDn}{{AAl{c}}}A`}{{BhFhFhDnDn}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Fd}}}Fd}{{f{f{Bjc}}}b{}}{fb}{{}Fd}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{Fd}}{f{Fd}}}d}{{f{f{c}}}d{}}00{{{f{Fd}}{f{BjGl}}}Gn}{cc{}}{{{f{Fd}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{Fd}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}C`}{{ABj{f{{l{c}}}}}{{l{c}}}C`}10{{ABjBhDn}{{l{c}}}C`}0{{ABhBh}{{Ob{{l{c}}e}}}C`{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}C`{}}10{{ABjBhDn}{{Ob{{l{c}}e}}}C`{}}0`{ABlABl}``{{ABnBhDn}e{}{{AC`{c}}}}{{eBhDn}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{cc{}}0{{}Fh}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gd{}}`{{{f{ACd}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fh{B`{Fh}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gb}{{}Ib}{{GbGb}Gb}{{IbIb}Ib}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}3210{{{f{Gb}}}M`}0{{{f{Ib}}}Df}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Ld{c}}}}}{{Fb{F`}}}C`}{{{f{{Ld{c}}}}}{{Ld{c}}}C`}{{{f{{In{c}}}}}{{In{c}}}C`}{{{f{ACh}}}ACh}{{{f{Gb}}}Gb}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GbGb}{IbIb}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}{{Ld{c}}}C`}{{}{{In{c}}}C`}{{}Gb}{{}Ib}{Fh{{f{c}}}{}}{{{f{{Lb{c}}}}}{{f{e}}}C`{}}111111{Fh{{f{Bjc}}}{}}000000{{GbGb}Gb}{{IbIb}Ib}{{}d}{{{f{F`}}}{{B`{I`}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{In{c}}I`}{{In{c}}}C`}{{{In{c}}{B`{I`}}}{{In{c}}}C`}{Fhb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGb}}c}b{{Hd{}{{Bb{Gb}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}C`}{{{In{c}}{B`{d}}}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{e}}}C`C`}{{{In{c}}Ib}{{In{c}}}C`}{{{In{c}}{B`{Ib}}}{{In{c}}}C`}{{{f{{In{c}}}}{f{BjGl}}}GnC`}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gb}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{M`{{B`{Gb}}}}{Df{{B`{Ib}}}}{M`Gb}0{DfIb}010{cGb{{Hd{}{{Bb{Gb}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Dl}}}{{B`{Gb}}}}{{{f{Dl}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{f{{In{c}}}}}dC`}{{{f{Ib}}}d}{{{f{F`}}}Ib}{{{f{{In{c}}}}}IbC`}0{{{f{{In{c}}}}}{{B`{f}}}C`}0{{{f{Bj{Ld{c}}}}}{{f{Bj{In{c}}}}}C`}{{{f{Ib}}}Jn}{{}Fh}000000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{GbGb}Gb}{{IbIb}Ib}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gbc{}}{Ibc{}}{{{f{Gb}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dC`}21{{{f{{In{c}}}}}JnC`}111{{{f{Gb}}}{{ACl{Gb}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gb}}}{{ACn{Gb}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{F`}}}{{B`{L`}}}}{{{In{c}}}{{In{c}}}C`}{{{f{{In{c}}}}}{{B`{L`}}}C`}{{{In{c}}B`}{{In{c}}}C`}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}C`}4321{{{In{c}}}{{Ld{c}}}C`}{GbGb}{IbIb}{{{f{{Ld{c}}}}}{{Lh{{In{c}}}}}C`}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{{f{BjGb}}Gbd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bC`}{{{f{Bj{In{c}}}}d}bC`}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bC`}{{{f{Bj{In{c}}}}B`}bC`}033{{{f{Bj{In{c}}}}Jn}bC`}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}C`}{{{In{c}}{B`{Jn}}}{{In{c}}}C`}{{GbGb}Gb}{{IbIb}Ib}>=10{{{Ld{c}}}{{In{c}}}C`}{fc{}}0000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Ld{c}}}}}{{B`{{Lh{{In{c}}}}}}}C`}{{{f{{Ld{c}}}}}{{B`{{J`{{In{c}}}}}}}C`}{fOd}000000:9{{{f{{Ld{c}}}}}{{f{{ADf{F`}}}}}C`}{{}c{}}000000{ACjACj}0{{{f{{Ld{c}}}}}{{J`{{In{c}}}}}C`}````{{fh}b}{{{f{{ADh{c}}}}Fh}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fh}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{{{Fn{c}}}{{ADh{c}}}Ih}{cc{}}{{FhADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fh}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fh}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fh}dIh}{{fFh}d}1{{{f{{ADh{c}}}}}{{AEd{{f{c}}{AE`{c}}AEb}}}Ih}{{{f{{ADh{c}}}}}{{AEd{egAEb}}}Ih{}{}}{{{f{{ADh{c}}}}}FhIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FhFh}bIh}{{fFhFh}c{}}01{{{f{{ADh{c}}}}Fh}{{Hh{{Fb{H`}}{Fb{H`}}}}}Ih}0{{{f{If}}}{{Fb{If}}}}{{{f{{ADh{c}}}}}{{Fb{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Dl}}}}{{}{{f{Dl}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fh}{{f{c}}}Ih}0{{{f{{ADh{c}}}}Fh}eIh{}}{{{f{{ADh{c}}}}}{{AE`{c}}}Ih}{{{f{{ADh{c}}}}}eIh{}}{{}c{}}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fb{H`}}}Ih}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}0`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{}Fh}{{}c{}}{{BhFh}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{BhFh}{{Fb{AEj}}}}{{}AEn}{{}ADj}{{}Fh}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6``````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFh}}{f{Cd}}}AFh}{{{f{AFh}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dh{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFj}}Ed}Ef}{{{f{AFj}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AFl}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFn}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gf}}}{{Ah{{l{c}}}}}C`}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFh}AGl{}}{{BhFh}AGn}`{{{f{AH`}}Fh}{{Ah{Hn}}}}{{{f{AH`}}Fh}Hn}::{{{f{AG`}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{AHb}}}{{Ah{Gf}}}}{{{f{AHd}}}{{Ah{Gf}}}}??{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHf}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fh}}}}{{{f{AHh}}FhFh}{{l{c}}}C`}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Kb}}}}}}{{{f{AHf}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHj}}}AHj}{{{f{AHl}}{f{Cd}}Nb}{{Ah{Af}}}}{{{f{AHn}}c{B`{e}}}{{Ah{AHn}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AHn}}ci}{{Ah{AHn}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AHn}}{f{Gf}}{B`{c}}}{{Ah{AHn}}}{}}{{{f{AI`}}Kb}{{l{c}}}C`}{{{f{AIb}}Kbc}{{l{e}}}{}C`}`{{{f{AFj}}d}{{l{c}}}C`}{{{f{AFj}}Ed}{{l{c}}}C`}{{{f{AId}}Df}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIf}}{f{c}}}{{Ah{AIf}}}Nd}{{{f{AIh}}{f{c}}}AIhNd}{{{f{AIj}}}{{Fn{{f{{Dh{Df}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIl}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AIn{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{H`AJ`}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`H`{{Cj{}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{Ob{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJb{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`H`AJd{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}C`C`H`AJd{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}C`C`AJd{{Cj{ff}{{Cb{{Ob{{Fb{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{Ob{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{Ob{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{H`AJ`}AJd{{Cj{f}{{Cb{{Ob{eg}}}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJf{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJfC`}{{{f{{l{c}}}}g}{{l{i}}}C`H`{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}C`H`{{Cj{}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{H`AJ`}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FhA`}0{{JnJn}Jn}{{{f{Ef}}I`}{{Ah{b}}}}{{{f{{AJh{I`}}}}I`}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJjd}{{Fn{I`}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJj}}}AJj}{{f{f{Bjc}}}b{}}{fb}{{}AJj}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AJj}}{f{AJj}}}d}{{f{f{c}}}d{}}00{{{f{AJj}}{f{BjGl}}}Gn}{cc{}}{{{f{AJj}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{{Dh{f}}}}cI`e}{{Fn{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFhf}{{Cb{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fh{f{Bj{Fn{d}}}}}b}```{{{f{AJl}}FhFh}AJl}0{{Fh{f{{Dh{Eh}}}}{f{BjEj}}}{{Ah{{AJn{Ef}}}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AK`}}}}{{{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{{AKb{Kb}}}}}}{{Bh{f{{Dh{Eh}}}}{f{{Dh{d}}}}{f{{Dh{d}}}}}{{Ah{AKd}}}}{{Bh{f{{Dh{Af}}}}}{{Ah{AKd}}}}{{{f{Af}}}{{Ah{Fl}}}}{{{f{{Dh{Af}}}}}{{Ah{AK`}}}}{{{f{{Dh{Af}}}}}{{Ah{AKd}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Ej}}}Ej}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Ej}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0``{Fhb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Ej}}{f{Ej}}}d}{{f{f{c}}}d{}}00000{{{f{Ed}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{{{f{Ej}}}Ed}{cc{}}{{{f{Ed}}}Ej}1{{{f{Ed}}{f{Bjc}}}bABf}{{{f{Ej}}{f{Bjc}}}bABf}{{}Fh}0{{}c{}}0````{{}Ed}{{}Ej}``{{{f{AJl}}FhFh}AJl}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Edd}Ed}{{Ejd}Ej}1010{{Ejc}Ej{{Hd{}{{Bb{d}}}}}}210{EdEd}{EjEj}`{AKfKb}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000{{{f{E`}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Gf}}{f{Gf}}}c{}}{{GfGf}c{}}{{{f{D`}}{f{D`}}}c{}}{{D`D`}c{}}{{{f{D`}}{f{Dl}}}c{}}{{{f{El}}{f{El}}}c{}}{{{f{El}}{f{{Dh{Df}}}}}c{}}{{ElEl}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{El}}{f{Af}}}{{Ah{Af}}}}{{{f{Gf}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{Gf}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{El}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gf}}}d}{{{f{Gf}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{{AKj{Dl}}}}}}}}Cf}}{{{f{El}}c}El{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{AKj{{Dh{Df}}}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKl}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AKn}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Gf}}{f{Cd}}}Gf}{{{f{D`}}{f{Cd}}}D`}{{{f{El}}{f{Cd}}}El}{{{f{Gf}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{El}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Dl}}}{{Cb{{f{Dl}}}}}}}}{{{f{El}}c}El{{Cj{{f{{Dh{Df}}}}}{{Cb{{f{{Dh{Df}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{Gf}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{Dl}}}}{f{c}}}{{Cb{c}}}}}}{{{f{El}}e{f{Bj{Dh{c}}}}}b{}{{Cd{{B`{{f{{Dh{Df}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dh{e}}}}}bIh{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Dl}}}{{Cb{{AKj{Dl}}}}}}Cf}}{{{f{El}}c}El{{Cd{{f{{Dh{Df}}}}}{{Cb{{AKj{{Dh{Df}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Dl}}}{{Cb{Eb}}}}Cf}}{{{f{Gf}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{El}}Ed}Ef}{{{f{AKd}}Ed}Ef}{{{f{Gf}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{El}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AKd}}{f{{Dh{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{Gf}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{El}}}{{Ah{Ef}}}}{{{f{{AEh{c}}}}}{{Ah{Ef}}}Ih}{eAL`{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALb{}{{Hd{}{{Bb{c}}}}}}0{{{f{D`}}}El}{{{f{Hn}}}Hn}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mj}}}{{f{Dn}}}}{{{f{ALd}}}{{f{Dn}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{{f{{Dh{c}}}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{Gf}}{f{Gf}}}c{}}{{GfGf}c{}}1010{f{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000000000000000000000000{Dn{{Fb{Dn}}}}{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AMd}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hn}}{f{Dn}}}Hn}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{El}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Jd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{El}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}Fd}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}0000{{{f{AKl}}{f{Af}}}{{Ah{Af}}}}{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMf{ce}}}}}{{AMf{ce}}}C`C`}{{{f{AMh}}}AMh}{{{f{Hn}}}Hn}{{{f{AMj}}}AMj}{{{f{Dn}}}Dn}{{{f{AMl}}}AMl}{{{f{Mj}}}Mj}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{Ln}}}Ln}{{{f{Mb}}}Mb}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{Md}}}Md}{{{f{Lj}}}Lj}{{{f{Cn}}}Cn}{{{f{Cl}}}Cl}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{Dj}}}Dj}{{{f{Dd}}}Dd}{{{f{ANl}}}ANl}{{{f{An}}}An}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{ADj}}}ADj}{{{f{AOf}}}AOf}{{f{f{Bjc}}}b{}}00000000000000000000000000000{fb}00000000000000000000000000000{{{f{BjMj}}Dn}b}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{{f{Dn}}}d}00{AOjDn}{{}Hn}{{}AMj}{{}Dn}{{}ADj}{Fh{{f{c}}}{}}{{{f{{AMf{ce}}}}}{{f{g}}}C`C`{}}1111111111111111111111111111111111{Fh{{f{Bjc}}}{}}{{{f{Bj{AMf{ce}}}}}{{f{Bjg}}}C`C`{}}1111111111111111111111111111111111{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{Fhb}0000000000000000000000000000000000{{{f{AMd}}}{{f{Dn}}}}{{{f{Jd}}}{{f{Dn}}}}{{{f{Hn}}}Dn}{{{f{Mj}}}{{f{Dn}}}}``{{{f{Hn}}{f{Hn}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{Dn}}{f{ADj}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}543201{{f{f{c}}}d{}}00000000000000000000000{{{f{E`}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}{{{f{{AMf{ce}}}}}MjC`C`}{{{f{Gf}}d}{{Ah{Gf}}}}{{{f{El}}{f{{Dh{Df}}}}}{{Ah{El}}}}{{{f{D`}}{f{Gf}}}{{Ah{{l{Dj}}}}}}{{{f{El}}{f{Gf}}}{{Ah{{l{Dd}}}}}}{{{f{{AEh{c}}}}{f{Gf}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{E`}}{f{BjGl}}}Gn}{{{f{D`}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMh}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Dn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AMn}}{f{BjGl}}}Gn}0{{{f{ADj}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{AOf}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}0000000{dHn}{{{f{Dl}}}Hn}{{{f{{Dh{Df}}}}}Hn}{cHnB@`}{{{B`{c}}}Hn{{B@b{Hn}}}}5{HnDn}6{{{f{ADj}}}Dn}{{{f{Hn}}}Dn}8{{{f{Hn}}}Mj}9{{{f{B@d}}}Mj}:{{{f{AOf}}}AMn};;;;;;;;;;;;;;;;;;;;{B@fADj}<{B@hADj}={{{f{ADj}}d}Dn}{cE`{{Hd{}{{Bb{{B`{Af}}}}}}}}{cE`{{Hd{}{{Bb{{B`{{Fb{H`}}}}}}}}}}{eE`{{B@j{Af}}}{{Hd{}{{Bb{c}}}}}}{cGf{{Hd{}{{Bb{d}}}}}}{eD`{{Kj{Dl}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eD`{{`{Dl}}}{{Hd{}{{Bb{c}}}}}}{eEl{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}{eEl{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}}<:98756{eAKd{{Kj{{Dh{Df}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAKd{{`{{Dh{Df}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}El{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cE`{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGf{{Hj{}{{Bb{{B`{d}}}}}}}}{cGf{{Hj{}{{Bb{d}}}}}}{eD`{{`{Dl}}JfJhB@l}{{Hj{}{{Bb{c}}}}}}{eD`{{Kj{Dl}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEl{{Kj{{Dh{Df}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dh{Df}}}}JfJhB@l}{{Hj{}{{Bb{c}}}}}}{{cBhDn}E`{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dh{d}}}}}Gf}{{Bh{f{{Dh{c}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{c}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dh{{B`{d}}}}}}}Gf}{{Bh{f{{Dh{{B`{c}}}}}}}D`{{Kj{Dl}}}}{{Bh{f{{Dh{{B`{c}}}}}}}El{{Kj{{Dh{Df}}}}}}{{Bh{f{{Dh{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGf{{Hl{}{{Bb{{B`{d}}}}}}}}{{{Fn{c}}ADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{Fn{c}}ADj}{{AJ`{}{{ALf{e}}{ALh{c}}{ALj{g}}}}}{ALl{ALn{e}}}A@n{{Gd{}{{Bb{e}}}}HlJfJh}}{{FhcADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fh}E`}{{BhdFh}Gf}{{Bh{f{Dl}}Fh}D`}{{Bh{f{{Dh{Df}}}}Fh}El}{{Bh{f{{Dh{Df}}}}Fh}AKd}{{BhcFh}{{AEh{c}}}Ih}{{FhADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{BhFh}E`}{{BhFh}Gf}{{BhFh}D`}{{BhFh}El}{{BhFh}AKd}{{BhFh}{{AEh{c}}}Ih}{{BhFh{f{Dn}}}E`}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Jd}}Fh}{{Ah{Hn}}}}{{{f{AMd}}Fh}{{Ah{Hn}}}}0{{{f{E`}}Fh}{{Ah{Hn}}}}{{{f{Gf}}Fh}{{Ah{Hn}}}}{{{f{D`}}Fh}{{Ah{Hn}}}}{{{f{El}}Fh}{{Ah{Hn}}}}{{{f{AKd}}Fh}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fh}{{Ah{Hn}}}Ih}{{{f{Jd}}Fh}Hn}{{{f{AMd}}Fh}Hn}0{{{f{E`}}Fh}Hn}{{{f{Gf}}Fh}Hn}{{{f{D`}}Fh}Hn}{{{f{El}}Fh}Hn}{{{f{AKd}}Fh}Hn}{{{f{{AEh{c}}}}Fh}HnIh}{{{f{E`}}Fh}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEh{c}}}}Fh}{{B`{{f{If}}}}}Ih}0{{{f{Hn}}}{{B`{{f{Dl}}}}}}{{{f{B@n}}Fh}Hn}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Fh}{{{f{D`}}}Fh}{{{f{AKd}}}Fh}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{Gf}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{El}}dd}{{Ah{Al}}}}{{{f{AKd}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}543210{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMj}}{f{Bjc}}}bABf}{{{f{Dn}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AMn}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOf}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{DnDn}{{}Fh}0000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}0000000000000000000000000000000000{{}Eh}{{BA`{B`{Fh}}Fh}{{Ah{Jd}}}}{{BA`{B`{Fh}}Fh}Jd}{{{f{E`}}}c{}}{{{f{Gf}}}c{}}{{{f{D`}}}c{}}{{{f{El}}}c{}}{{{f{AKd}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAbDn}{{Ah{L`}}}}{JdAf}{BA`Af}{HnHn}{{{f{Dn}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}12121222212222120{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{AEd{cgAEb}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}{{f{Dn}}}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}542301{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMj}}}{{B`{Dn}}}}{{{f{Gf}}}{{B`{d}}}}{{{f{Gf}}}L`}{{{f{D`}}}L`}{{{f{El}}}L`}{{{f{Gf}}}{{B`{n}}}}{{{f{AKl}}}{{B`{Ij}}}}{{{f{AKn}}}{{B`{n}}}}{{{f{AKl}}}L`}{{{f{AKn}}}L`}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dh{Df}}}}FhFh}Gf}{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{D`}}}{{Ah{Fh}}}}{{{f{El}}}{{Ah{Fh}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kj{{Dh{{B`{{AKj{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{AKj{Dl}}}}}}}}{{Bhc}D`{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}D`{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}El{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{AKj{{Dh{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bhc}El{{Kj{{Dh{{B`{{AKj{{Dh{Df}}}}}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Kj{{Dh{{B`{c}}}}}}}}{{Bh{f{{Dh{c}}}}}{{AEh{c}}}Ih}{{BhDn}Mj}{Bh{{AEh{c}}}Ih}{{{f{E`}}FhFh}E`}{{{f{Gf}}FhFh}Gf}{{{f{D`}}FhFh}D`}{{{f{El}}FhFh}El}{{{f{AKd}}FhFh}AKd}{{{f{{AEh{c}}}}FhFh}{{AEh{c}}}Ih}{{Bh{Fn{c}}}{{AEh{c}}}Ih}{{Bh{Fn{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMf{ec}}}C`C`}{{}AMl}{Gfc{}}{{{f{Gf}}}c{}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Dl}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dh{Df}}}}}Gf}{{{f{El}}{f{El}}}Gf}542310{{{f{E`}}}{{Ah{{AGf{Kb}}}}}}9{{{f{E`}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Ml{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mn{}{{Bb{{B`{{f{Dl}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{BAd}}}}{{{f{AMn}}{f{AMn}}}{{B`{BAd}}}}{{{f{{AMf{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{Jd}}}{{B`{Fh}}}}{{{f{{AMf{ANnJb}}}}}{{B`{Fh}}}}{{{f{AKl}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AKn}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKl}}nN`}{{Ah{L`}}}}{{{f{AKn}}nN`}{{Ah{L`}}}}{{BhFhn}{{Ah{Gf}}}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{E`}}}E`}{{{f{Gf}}}Gf}{{{f{D`}}}D`}{{{f{El}}}El}{{{f{AKd}}}AKd}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fh}{{{f{{AMf{ANnJb}}}}}Fh}{{{f{Gf}}c{B`{d}}}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}}{{{f{D`}}c{B`{{f{Dl}}}}}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}}{{{f{El}}c{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gf}}ce}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{Dl}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{El}}ce}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{{Dh{Df}}}}}}}{{Cb{{B`{{Fn{Df}}}}}}}}}}{{{f{Gf}}{f{Gf}}{B`{d}}}{{Ah{Gf}}}}{{{f{D`}}{f{Gf}}{B`{{f{Dl}}}}}{{Ah{D`}}}}{{{f{El}}{f{Gf}}{B`{{f{{Dh{Df}}}}}}}{{Ah{El}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMj}}Bh}b}{{{f{E`}}Kb}E`}{{{f{Gf}}Kb}Gf}{{{f{D`}}Kb}D`}{{{f{El}}Kb}El}{{{f{AKd}}Kb}AKd}{{{f{{AEh{c}}}}Kb}{{AEh{c}}}Ih}{{{f{E`}}Kb{B`{{f{Af}}}}}E`}{{{f{Gf}}Kb{B`{d}}}Gf}{{{f{D`}}Kb{B`{{f{Dl}}}}}D`}{{{f{El}}Kb{B`{{f{{Dh{Df}}}}}}}El}{{{f{AKd}}Kb{B`{{f{{Dh{Df}}}}}}}AKd}{{{f{{AEh{c}}}}Kb{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gf}}d}Gf}{{{f{D`}}d}D`}{{{f{El}}d}{{l{Dd}}}}{{{f{AKd}}d}AKd}{{{f{Gf}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dj}}}}{{{f{El}}Ed}{{l{Dd}}}}{{{f{AKd}}Ed}AKd}{{{f{AKl}}Df}L`}{{{f{AKn}}Df}L`}{{{f{Hn}}}{{AKj{Dl}}}}{{{f{Hn}}{f{Dn}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{Gf}}}{{B`{I`}}}}{{{f{Gf}}}L`}{{{f{El}}}L`}{{{f{D`}}{f{Ef}}}D`}{{{f{D`}}{f{c}}}D`{{Kj{{Dh{I`}}}}Nd}}{{{f{El}}{f{Ef}}}El}{{{f{El}}{f{c}}}El{{Kj{{Dh{I`}}}}Nd}}{{{f{Dn}}AMl}ADj}{{{f{Mj}}AMl}B@d}{AMnAOf}{{{f{Dn}}BhAMl}B@d}{AMn{{f{Dl}}}}{{{f{D`}}Fh}{{Ah{Af}}}}{{{f{BjE`}}Dn}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{E`}}}{{Ah{Nl}}}}{fc{}}00000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADj}}}BAf}{{{f{Jd}}Fh}{{Ah{{AKj{Jd}}}}}}{{{f{{AMf{ANnJb}}}}Fh}{{Ah{{AKj{{AMf{ANnJb}}}}}}}}{fDb}00{{{f{El}}}D`}{{{f{Hn}}{f{Hn}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{Ob{AL`e}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{AOh{{Ob{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{Ob{eg}}}{}{{ALb{c}}AJ`}{}}0{{{f{Hn}}}{{Ah{c}}}Kn}{c{{Ob{e}}}{}{}}0000000000000000000000000000000000{{}{{Ob{c}}}{}}0000000000000000000000000000000000{{{f{Hn}}{f{Dn}}}{{Ah{Hn}}}}{{{f{Dn}}AMl}{{Ah{ADj}}}}{f{{Ob{G`BAh}}}}00{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gf}}}{{Ah{Gf}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{El}}}{{Ah{El}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}cA@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}0{{{f{Dn}}Hn}d}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}gA@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{AKl}}Df}L`}{{{f{AKn}}Df}L`}{{{f{Gf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAj}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AOl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BA`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}Ih}{{{f{Gf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BAj}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BAl}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AOl}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BAn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{BA`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKl}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{AKd}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}Ih}{{}c{}}0000000000000000000000000000000000{Fhc{}}0{Fh{{BBh{ce}}}{}{}}{{{f{{Dh{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}{B`{Hf}}}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}Hn}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AM`}}}d}{{AM`d}AM`}{{{f{BjBBj}}{B`{{f{Dl}}}}}b}{{{f{BjAM`}}{f{AM`}}}{{Ah{b}}}}{{{f{BjBBj}}}b}{{{f{BjBBj}}{f{Dl}}}b}{{{f{AM`}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AM`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AM`}}}AM`}{{f{f{Bjc}}}b{}}{fb}{{}BBl}{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{{BBjc}AM`{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{Fhb}000{{{f{AM`}}}{{f{Dn}}}}{{{f{AM`}}{f{Dl}}}c{}}{{{f{AM`}}{f{AM`}}}c{}}{{{f{AM`}}{f{D`}}}c{}}012{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{BBjAM`}{BBl{{Lf{BBn}}}}{cc{}}000{{AOl{Lf{BBn}}dBC`}AM`}{{AOlBC`}AM`}{{{f{D`}}{f{AOj}}BC`}{{Ah{AM`}}}}{{BhdFhBC`}AM`}{{{f{AM`}}Fh}{{Ah{Hn}}}}{{{f{AM`}}Fh}Hn}{{{f{AM`}}}{{f{{Lf{BBn}}}}}}<=;;<={{}Fh}000{{}c{}}000{{}Eh}1{AM`Af}{{{f{AM`}}}d}0{{{f{AM`}}}BCb}{{{f{AM`}}}Fh}{{{f{AM`}}{f{Dl}}}c{}}{{{f{AM`}}{f{AM`}}}c{}}{{{f{AM`}}{f{D`}}}c{}}210{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{AM`}}}L`}{{{f{BjBBl}}{f{{Lf{BBn}}}}}{{Ah{b}}}}1{{{f{AM`}}}{{Ah{Fh}}}}{{{f{AM`}}}{{f{Bh}}}}{{BhFhBC`}BBj}{{{Lf{BBn}}}BBl}{{{f{BjBCb}}}{{B`{c}}}{}}9;:9:;<{{{f{AM`}}}{{f{AOl}}}}{{{f{BjBBj}}{f{Dl}}}{{Hh{M`d}}}}`{{{f{BCb}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{AM`}}d}AM`}{{{f{AM`}}Ed}AM`}`{{{f{AM`}}AMld}Fl}{{{f{AM`}}{f{AOj}}BCd}AM`}{{{f{AM`}}}{{Ah{AM`}}}}{{{f{AM`}}}AM`}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AM`}}}d}{{{f{AM`}}}{{Ah{BCf}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{AOjBBn}{{{f{BC`}}}BC`}{{{f{BBn}}}BBn}{{f{f{Bjc}}}b{}}0{fb}0{{}BC`}{{}BBn}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{{{f{BC`}}{f{BC`}}}d}{{{f{BBn}}{f{Dl}}}{{B`{M`}}}}{{{f{BC`}}{f{BjGl}}}Gn}{{{f{BBn}}{f{BjGl}}}Gn}{cc{}}0{{{f{BBn}}M`}{{f{Dl}}}}{{{f{BBn}}}{{f{AOj}}}}{{{f{BBn}}M`}{{B`{{f{Dl}}}}}}{{}Fh}0{{}c{}}0{{{f{BBn}}}d}0{{{f{BBn}}}Fh}{{{f{BBn}}{f{BBn}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCh}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{{}b}{Fhb}{{{f{BjBCh}}}b}2{cc{}}6{{}Fh}{{}c{}}=<;{{}d}1`{{{f{BjBCj}}M`{f{BBn}}}{{Ah{{f{BjBCj}}}}}}{{{f{BjBCj}}}{{f{BjBCj}}}}{{{f{BjBCj}}{f{Dl}}}{{Ah{{f{BjBCj}}}}}}>=;:8{BCjAM`}765{{BhFh{Lf{BBn}}BC`d}BCj}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}9```````>>8````````````````````````{{{f{BCl}}}{{f{Dl}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0`{Fh{{f{c}}}{}}{{{f{BCl}}}f}1{Fh{{f{Bjc}}}{}}0{Fhb}0`{{{f{BCn}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BCl}}{f{BjGl}}}{{Ob{bAOn}}}}0{cc{}}0{cBCl{{B@b{{AKj{Dl}}}}}}{{}{{Kf{{f{Dl}}BCn}{{Cb{b}}}}}}{{}Fh}0{{}c{}}0{cAKhAJd}{{{f{Dl}}}BCl}````{{{Kf{{f{Dl}}BCn}{{Cb{b}}}}}b}{cAKhBD`}{fDb}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{G`BAh}}}}{fOd}099`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BDb}}}BDb}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BjGl}}LlFh}Gn}{cc{}}{{}BDd}{{}BDb}{{}{{B`{Fh}}}}{{}Db}{{}d}{{}Fh}{{}c{}}{{{B`{BDd}}}b}{BDbb}{{{B`{Fh}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCf}}{Fn{Eh}}{f{BDf}}}{{Ah{b}}}}{{{f{BjBCf}}{Fn{Af}}{f{BDf}}}{{Ah{b}}}}{{{f{BCf}}{f{Cd}}}{{Fn{Eh}}}}0{{{f{BCf}}{f{Gf}}}{{Ah{BCf}}}}{{{Fn{Eh}}}BCf}{{{f{BCf}}{f{{Dh{Bh}}}}}{{Ah{BCf}}}}0{{{f{BCf}}{f{{Dh{Bh}}}}{f{BDf}}d}{{Ah{BCf}}}}{{{f{BCf}}KbFh}BCf}{{{f{BCf}}}BCf}{{{f{BCf}}{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BjBCf}}}{{f{BjBCf}}}}{{{f{BjBCf}}{f{Dl}}e}{{Ah{{f{BjBCf}}}}}BDh{{Oh{{f{Eh}}}{{Cb{c}}}}}}{{{f{BjBCf}}Fhe}{{Ah{{f{BjBCf}}}}}BDh{{Oh{{f{Eh}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCf}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}9{{{f{BDj}}}BDj}{{{f{BDl}}}BDl};{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCf}}{f{Dl}}}{{Ah{{f{Eh}}}}}}{{{f{BCf}}e}{{Ah{{Fn{{f{Eh}}}}}}}{{Kj{Dl}}}{{Hd{}{{Bb{c}}}}}}{{}BDl}{{}BCf}{Fh{{f{c}}}{}}0000{Fh{{f{Bjc}}}{}}0000{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{Fhb}0000{{{f{BCf}}{f{Dl}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Dl}}}{{Ah{Eh}}}}{{{f{BCf}}e}BCf{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}{f{{BDn{Bh}}}}}BCf}{{{f{BCf}}{B`{{f{{Dh{c}}}}}}}{{Ah{BCf}}}{}}{{{f{BCf}}}{{Fn{Dn}}}}<{{{f{BE`}}}BCf}{{{f{BDf}}}BCf}{{{f{BDl}}{f{BDl}}}d}{{{f{BCf}}{f{BCf}}}d}00{{f{f{c}}}d{}}00{{{f{BCf}}}Fh}`{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}{Fn{Eh}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}}{{Fn{Mj}}}}{{{f{BCf}}AG`}{{Ah{BCf}}}}{{{f{BCf}}{f{Gf}}}{{Ah{BCf}}}}{{{f{BDj}}{f{BjGl}}}Gn}{{{f{BDl}}{f{BjGl}}}Gn}{{{f{BCf}}{f{BjGl}}}Gn}0{cc{}}0000{cBCf{{Hd{}{{Bb{Eh}}}}}}{cBCf{{Hd{}{{Bb{Af}}}}}}{{{f{{Dh{BEb}}}}}{{Ah{BCf}}}}{{{f{{Dh{BEb}}}}{f{BDf}}}{{Ah{BCf}}}}{{c{f{BDf}}}{{Ah{BCf}}}{{Bf{}{{Bb{{f{BEb}}}}}}}}{{{f{BCf}}Fh}{{B`{{Fn{Hn}}}}}}{{{f{BCf}}{f{Dl}}}{{B`{Fh}}}}{{{f{BCf}}}{{Fn{{f{Bh}}}}}}{{{f{BCf}}}{{Fn{Bh}}}}{{{f{BCf}}}{{Fn{{f{Dl}}}}}}{{{f{BCf}}}{{f{{Dh{Eh}}}}}}{{{f{BjBCf}}}{{f{Bj{Fn{Eh}}}}}}{{{f{BCf}}Fh}{{Ah{BEb}}}}{{{f{BCf}}Fh{f{BjBEb}}}{{Ah{b}}}}{{{f{BCf}}Fh{f{BjBEb}}}b}{{{f{BCf}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCf}}e}{{Ah{BEd}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCf}}{Fn{Eh}}dd}{{Ah{BEd}}}}{{{f{BDl}}{f{Bjc}}}bABf}{{{f{BjBCf}}{B`{Nh}}}{{Ah{BAn}}}}{{{f{BCf}}{B`{Fh}}}BCf}{{{f{BCf}}}Fh}{{{f{BCf}}{f{{Dh{Eh}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{{Dh{Eh}}}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{{Dh{Eh}}}}}{{f{BjBCf}}}}{{{f{BCf}}BEf}{{f{c}}}{}}{{{f{BCf}}Fh}{{f{c}}}{}}{{{f{BCf}}{Mh{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEh{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEj{Fh}}}{{f{c}}}{}}{{{f{BCf}}{f{Dl}}}{{f{c}}}{}}{{{f{BCf}}{BEl{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEn{Fh}}}{{f{c}}}{}}{{}Fh}0000{{{f{BjBCf}}Fhc}{{Ah{{f{BjBCf}}}}}BDh}{{}c{}}000000{{{f{BCf}}}{{Ah{Gf}}}}{{{f{BCf}}}d}1{{{f{BCf}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}AMld}BF`}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{BCf}}}BFb}{{{f{BCf}}}Fh}4{{{f{BCf}}}{{Ah{{B`{Af}}}}}}{{{f{BCf}}BDj}{{Ah{{B`{Af}}}}}}1{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}55{{{Fn{Eh}}}{{Ah{BCf}}}}{{{Fn{Eh}}}BCf}111{{{f{BjBF`}}}{{B`{c}}}{}}{{{f{BjBFb}}}{{B`{c}}}{}}{{{f{BCf}}}BCf}{{{f{BCf}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}ed}{{Ah{{Fn{BCf}}}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCfe}{{Ah{c}}}{}{{Cd{BCf}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}e}{{Ah{c}}}{}{{Cd{{f{BjBCf}}}{{Cb{{Ah{c}}}}}}}}{{BCfgc}{{Ah{e}}}{}{}{{Cd{BCfc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCf}}}{{B`{Eh}}}}{{{f{BCf}}{f{BCf}}}d}><={{{f{BjBCf}}{f{Dl}}Bh}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{Dl}}c}{{Ah{{f{BjBCf}}}}}BFd}{{{f{BjBCf}}Fhc}{{Ah{{f{BjBCf}}}}}BDh}{{{f{BjBCf}}Bhc}{{Ah{{f{BjBCf}}}}}BFd};`{{{f{BCf}}{f{Af}}dd{B`{Il}}}{{Ah{BCf}}}}0{{{f{BCf}}Fhdd{B`{Il}}}{{Ah{BCf}}}}{{{f{BCf}}}BDf}{{{f{BCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}Fh}{{B`{{f{Eh}}}}}}{{{f{BCf}}c}{{Ah{BCf}}}{{BFf{Fh}}}}{{{f{BCf}}c}{{Ah{{Fn{Eh}}}}}{{BFh{Bh}}}}3{{{f{BCf}}e{f{BFj}}}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}e{f{BDf}}}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCf}}e}{{Ah{b}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}}{{Hh{FhFh}}}}{{{f{BCf}}Kb}BCf}{{{f{BCf}}}d}{{{f{BjBCf}}}b}{{{f{BCf}}}Fh}{{{f{BF`}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BFb}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BCf}}KbFh}BCf}00{{{f{BCf}}cEj}{{Ah{BCf}}}{{BFh{Bh}}}}{{{f{BjBCf}}cEj}{{Ah{{f{BjBCf}}}}}{{BFh{Bh}}}}{{{f{BCf}}Kb}{{Hh{BCfBCf}}}}0{{{f{BjBCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{BCfFhd}{{Fn{BCf}}}}{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{{{f{BCf}}BDj}{{Ah{{B`{Af}}}}}}{{{f{BCf}}{B`{Fh}}}BCf}{{{f{BCf}}{f{Ef}}}{{Ah{BCf}}}}{BCf{{Fn{Eh}}}}{{{f{BCf}}{f{Ef}}}BCf}{{{f{BCf}}{f{Ef}}d}BCf}{{{f{BCf}}BFl}{{Ah{Nl}}}}{fc{}}00{fDb}{{{f{BjBCf}}{B`{{f{Dl}}}}{B`{{O`{Db{Fn{Db}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{B`{{f{Dl}}}}{B`{{O`{Bh{Fn{Bh}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Dl}}e}{{Ah{{f{BjBCf}}}}}BDh{{Oh{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}Fhe}{{Ah{{f{BjBCf}}}}}BDh{{Oh{{f{Eh}}}{{Cb{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{BFn{{Ah{BCf}}}}{{{Hh{BG`{f{BE`}}}}}{{Ah{BCf}}}}2{{c{f{BDf}}}{{Ah{BCf}}}{{Bf{}{{Bb{{Ah{{f{BEb}}}}}}}}}}{{{f{BCf}}{f{Dl}}}{{Ah{Fh}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{G`BAh}}}}{fOd}0000{{{f{BCf}}{B`{{f{{Dh{Db}}}}}}BDl{B`{{Hh{KbFh}}}}}{{Ah{BCf}}}}{{{f{BCf}}d{B`{{Fn{Bh}}}}BDl{B`{{Hh{KbFh}}}}}{{Ah{BCf}}}}1{{{f{BCf}}{f{BCf}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{BCf}}}b}{{}c{}}0000{{{f{BCf}}}Fh}{{{f{BjBCf}}c}{{Ah{{f{BjBCf}}}}}BDh}{{{f{BjBCf}}c{f{BDf}}}{{Ah{{f{BjBCf}}}}}BDh}{{{f{BjBCf}}Eh}{{f{BjBCf}}}}{{{f{BCf}}Bh{B`{I`}}}{{Ah{BCf}}}}{{{f{BjBCf}}Bh{B`{I`}}}{{f{BjBCf}}}}`````{{fh}b}0{{Ehc}e{AbKn}{}}{{{f{Eh}}c}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Al}}}Eh}0000000{{{f{Eh}}{f{Al}}nN`}Eh}1{{{f{Eh}}{f{Al}}Df}Eh}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}Ed}Ef}{{{f{Eh}}}{{f{Af}}}}{{{f{BGb}}}{{f{Af}}}}{{{f{Eh}}}{{B`{{f{BGb}}}}}}{{{f{Eh}}}{{B`{{f{Af}}}}}}{{{f{BGb}}}Af}{{{f{Eh}}}{{Ah{{f{El}}}}}}{{{f{Eh}}}{{Ah{{f{AKd}}}}}}{{{f{Eh}}}{{B`{BGd}}}}=>{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}>??>{{{f{Eh}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BGb}}{f{Dn}}}{{Ah{BGb}}}}10{{{f{Eh}}{f{Dn}}Fd}{{Ah{Eh}}}}{{{f{BGb}}{f{Dn}}Fd}{{Ah{BGb}}}}{{{f{Eh}}}{{Ah{{f{AM`}}}}}}{{{f{Eh}}}Eh}0{{{f{BGb}}}BGb}{{f{f{Bjc}}}b{}}0{fb}0{{{f{Eh}}}{{Ah{{f{Jd}}}}}}{{}Eh}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{Fhb}0={{{f{Eh}}}{{f{Dn}}}}{{{f{BGb}}}{{f{Dn}}}}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}011{{{f{Eh}}}{{Ah{Eh}}}}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}HnFh}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AKl}}}}}}{{{f{Eh}}}{{Ah{{f{AKn}}}}}}{{{f{Eh}}}{{AKj{Mj}}}}{{{f{Eh}}AG`}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{BjGl}}}Gn}{{{f{BGb}}{f{BjGl}}}Gn}{BGbEh}{cc{}}{AfEh}1{{AfFh}{{Ah{BGb}}}}{{BhFh{f{Dn}}}Eh}{{{f{Eh}}FhFh}Eh}{{{f{Eh}}Fh}{{Ah{Hn}}}}{{{f{Eh}}}Fh}{{{f{Eh}}}Ib}{{{f{Eh}}}{{B`{{Fb{F`}}}}}}{{{f{Eh}}Fh}{{B`{{f{If}}}}}}{{{f{Eh}}Fh}Hn}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}d}{{{f{BGb}}}d}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}}{{Ah{{f{BBb}}}}}}{{{f{Eh}}}{{Ah{{f{BBd}}}}}}{{{f{Eh}}}{{Ah{{f{BBf}}}}}}{{{f{Eh}}}{{Ah{{f{BB`}}}}}}{{{f{Eh}}}{{Ah{{f{Ef}}}}}}{{}Fh}0{{}c{}}0{BDhEh}{EhEh}{BGbEh}{EhBCf}{{{f{BjEh}}}{{f{BjAf}}}}>={{{f{Eh}}}{{Ah{Gf}}}}000{{{f{Eh}}}Gf}0{{{f{Eh}}}Jn}{{{f{Eh}}}Fh}{{{f{BGb}}}Fh}{{{f{Eh}}}{{Ah{{f{E`}}}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}{{Ah{L`}}}}0{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{EhEh}c{}}{{Ehc}e{AbKn}{}}{{{f{Eh}}}{{f{Bh}}}}{{{f{BGb}}}{{f{Bh}}}}{{Bhc}Eh{}}{{BhL`Fh}BGb}{{Bh{f{Dn}}}Eh}{{BhDn}BGb}{{{f{Eh}}FhFh}Eh}{{BhL`Fh}Eh}=={{{f{Eh}}}Fh}{{{f{Eh}}}BGf}>{{{f{Eh}}}Eh}>;=<{{{f{BjEh}}Bh}b}{{{f{Eh}}{f{{Dh{Kb}}}}}{{Ah{Eh}}}}{{{f{BGb}}Fh}BGb}3{{{f{Eh}}ndd{B`{Il}}}{{Ah{Eh}}}}{{{f{Eh}}Fhdd{B`{Il}}}{{Ah{Eh}}}}{{{f{BjEh}}Jn}b}{{{f{Eh}}Kb}Eh}{{{f{BjEh}}}b}{{{f{Eh}}{B`{Il}}}Eh}{{{f{Eh}}KbFh}Eh}{{{f{Eh}}Ed}{{Ah{Eh}}}}{{{f{Eh}}Kb}{{Hh{EhEh}}}}{{{f{Eh}}}{{Ah{{f{D`}}}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BGb}}{f{Dn}}}{{Ah{BGb}}}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}{f{Ef}}}{{Ah{Eh}}}}{EhAf}{BGbAf}{{{f{Eh}}{f{{Dh{I`}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{Dh{I`}}}}}Eh}{{{f{Eh}}{f{Ef}}}Eh}{fc{}}0{{{f{Eh}}}Eh}{{{f{BGb}}}Af}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}0{{{f{Eh}}}{{Ah{{f{BAl}}}}}}{{{f{Eh}}}{{Ah{{f{AOl}}}}}}{{{f{Eh}}}{{Ah{{f{BAn}}}}}}{{{f{Eh}}}{{Ah{{f{BAj}}}}}}{{{f{Eh}}}{{Ah{Eh}}}}0{{{f{Eh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{Eh}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EhBh}Eh}{{{f{Eh}}c}Eh{AbKn}}{{{f{Eh}}{f{Gf}}{f{Eh}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}{f{Eh}}}{{Ah{Eh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGh}}}BGh}{{f{f{Bjc}}}b{}}{fb}{{}BGh}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BGh}}{f{BGh}}}d}{{f{f{c}}}d{}}00{{{f{BGh}}{f{BjGl}}}Gn}{cc{}}{{{f{BGh}}{f{Bjc}}}bABf}`{{}Fh}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEd}}}{{Ah{BCf}}}}`{{{f{BGj}}}{{f{{Dh{BGl}}}}}}{{{f{BEd}}c}{{Ah{BCf}}}{{Cj{BCf}{{Cb{{Ah{BCf}}}}}}JfJh}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BGj}}}BGj}{{{f{Al}}}Al}{{{f{BEd}}}BEd}{{{f{BGn}}}BGn}{{f{f{Bjc}}}b{}}000{fb}000;{{}BGj}{{}Al}{Fh{{f{c}}}{}}00{{{f{BH`}}}{{f{c}}}{}}11111{Fh{{f{Bjc}}}{}}0000000`{{BHbe}{}{}{{BHd{c}}}}{Fhb}0000{{{f{BjBGj}}}b}111{{{f{BGj}}{f{BGj}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}00000`{{{f{BHf}}}I`}{{{f{BGj}}}{{f{{Dh{I`}}}}}}{{{f{BEd}}}{{Ah{BCf}}}}{{{f{BjBGj}}}{{f{Bj{Fn{I`}}}}}}{{{f{BGj}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEd}}{f{BjGl}}}Gn}{{{f{BGn}}{f{BjGl}}}Gn}0{{{f{Dl}}BGn}Bh}{cc{}}0000{{{Fn{BHh}}}BGj}{{{Fn{{Hh{{Fn{I`}}{Fn{BGl}}}}}}}BGj}{{{Fn{{Fn{BHh}}}}}BGj}3{BGjAl}44{cBGj{{Hd{}{{Bb{BHh}}}}}}{cBGj{{Hj{}{{Bb{BHh}}}}}}{{{f{Al}}Fh}BHf}{{{f{BEd}}}{{f{Al}}}}{{{f{BjBEd}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BHj}}dd}{{Ah{Al}}}}0{{{f{BEd}}}{{Ah{BCf}}}}{{{f{BjAl}}}{{f{BjBGj}}}}{{}Fh}0000000{{}c{}}0000000{AlBGj}1{BGjc{}}{{{f{BGj}}}c{}}301{{{f{BHf}}}d}{{{f{Al}}}d}{{{f{BGj}}}d}{{{f{BGj}}}{{BHn{{BHl{{Kd{I`}}}}{Kd{BGl}}}}}}{{{f{Al}}}BI`}{{{f{BEd}}}{{Fn{Eh}}}}{{{f{BEd}}{B`{{Hh{KbFh}}}}}{{Fn{Eh}}}}={{{f{BHf}}}Fh}{{{f{Al}}}Fh}?????{{{Fn{I`}}{Fn{BGl}}d}BGj}{{{f{BCf}}{Fn{Eh}}Al{B`{{Fn{Bh}}}}}BEd}{{{f{BjBI`}}}{{B`{c}}}{}}{{{f{BjBI`}}Fh}{{B`{c}}}{}}{{{f{BEd}}c}{{Ah{BCf}}}{{Cd{BCf}{{Cb{{Ah{BCf}}}}}}JfJh}}{f}{{{f{Al}}}BHb}{{{f{BEd}}nN`}{{Ah{BCf}}}}{{BEde}BEd{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}KbFh}BH`}{{{f{BjBGj}}}b}{{{f{BjAl}}}b}{{{f{BEd}}Df}{{Ah{BCf}}}}{{{f{BEd}}}{{Ah{BCf}}}}{Al{{Fn{I`}}}}0{BEdAl}{{{f{BjBEd}}}Al}{fc{}}000{fDb}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{G`BAh}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BGj}}}}{{{f{Al}}}{{f{BIb}}}}={{}c{}}0000000`````{{{f{BGj}}c}Af{{Cd{{Hh{I`{f{BGl}}}}}{{Cb{B`}}}}JfJh}}{{{f{BGj}}c}Af{{Cd{{Hh{I`{f{BGl}}}}}{{Cb{}}}}JfJh}}{{{f{{Dh{{BId{I`}}}}}}c}Af{{Cd{{BId{I`}}}{{Cb{B`}}}}JfJh}}{{{f{{Dh{{BId{I`}}}}}}c}Af{{Cd{{BId{I`}}}{{Cb{}}}}JfJh}}{{{f{{Dh{c}}}}e{B`{BIf}}}{{AJh{c}}}{BIhBIj}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dh{c}}}}{f{Hf}}e{B`{BIf}}}{{AJh{c}}}{BIhBIj}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}C`}{{{f{BIb}}{f{{Dh{Fl}}}}}d}{{{f{BIl}}{f{Al}}}Af}{{BInBIn}BIn}0`{{{f{BJ`}}{f{BCf}}{f{Al}}}{{Ah{Af}}}}{{{f{BJ`}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJb}}Hn}{{B`{b}}}}{{{f{BjBJd}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJb}}}BJb}{{{f{BJd}}}BJd}{{{f{BEb}}}BEb}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dh{c}}}}}Dn{{B@j{Dn}}}}{{}BEb}{Fh{{f{c}}}{}}00{Fh{{f{Bjc}}}{}}00{Fhb}00{{{f{BEb}}{f{BEb}}}d}{{f{f{c}}}d{}}00{{{f{BEb}}{f{BjGl}}}Gn}{{{Hh{{f{Dn}}Fh}}}BJb}{cc{}}{{{Hh{{f{Dn}}Fh}}}BJd}11{{gFh}BDf{{B@b{Bh}}}{{B@b{Dn}}}{{Bf{}{{Bb{{Fn{{Hh{ce}}}}}}}}}}{{}Fh}00{{}c{}}00{BJbAf}{BJdAf}{{{f{Dn}}Fh}BJb}{{{f{Dn}}Fh}BJd}{{{Fn{Hn}}}BEb}{{{f{BjBJb}}Fh}Af}{{{f{BjBJd}}Fh}Af}{{{f{{Dh{BEb}}}}{B`{Fh}}}{{Ah{BDf}}}}0{{{f{{Dh{BEb}}}}{B`{Fh}}}{{Ah{{Fn{Dn}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dh{BCf}}}}}{{Ah{BCf}}}}{{{f{{Dh{BCf}}}}d}{{Ah{BCf}}}}`````{{IlIl}Il}{{{f{{Dh{BCf}}}}{B`{Nh}}}{{Ah{{Hh{{Fn{BAn}}Nh}}}}}}{{{f{{AKb{Kb}}}}Nh{f{Bj{Fn{Il}}}}}b}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{}BJf}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{{{f{BJf}}}Il}{{{f{BJh}}{f{BjGl}}}Gn}{cc{}}0{{{f{BJh}}{f{Bjc}}}bABf}``{{}Fh}0{{}c{}}0{{{f{Bj{BJj{BJhce}}}}I`Il{f{BCf}}gi}b{}BJl{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}0{{{f{BJn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}0{{{f{BJn}}Nh{f{Bj{Dh{Il}}}}}{{Ah{b}}}}066{{{f{BjBJf}}{f{{Dh{Df}}}}}b}{{{f{BjBJf}}Mf}b}{{{f{BjBJf}}Kb}b}{{{f{BjBJf}}M`}b}{{{f{BjBJf}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lf{ce}}}}}{{f{e}}}NdBK`}{{{f{{Lf{c}}}}}BKb{BKdNd}}{{{f{{Lf{ce}}}}}{}NdBK`}{{{f{{Lf{c}}}}}MfBKf}{{{f{Bh}}}{{f{Dl}}}}{{{f{Bh}}}{{f{{Dh{Df}}}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{BKj}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NdBK`}4{{{Lf{{Dh{{BKl{c}}}}e}}}{{Lf{{Dh{c}}e}}}{}BK`}{{{Lf{{BKl{c}}e}}}{{Lf{ce}}}{}BK`}{f{{f{c}}}{}}070030000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{{Lf{c}}}}}{{B`{{f{AJd}}}}}{AJdNd}}`{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BL`}}}BL`}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nd{BK`A@n}}{{{f{Nb}}}Nb}{{{f{BFl}}}BFl}{{{f{B@d}}}B@d}{{{f{N`}}}N`}{{{f{BIf}}}BIf}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{{f{BLf}}}BLf}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}BAd}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}BAd{BLhNd}BK`}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{f{f{c}}}BAd{}}0{{AKhBCl}AKh}{AKhAKh}{{{f{H`}}{f{ADj}}}{{Fb{H`}}}}``{{}b}{cbBK`}{{}Bh}{{}{{Lf{Dl}}}}{{}{{Lf{{Dh{c}}}}}{}}{{}{{Lf{c}}}BLj}{{}{{Lf{BLl}}}}{{}Nb}{{}BFl}{{}B@d}{{}N`}`{Fh{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{Lf{ce}}}}}{{f{c}}}NdBK`}222222222{Fh{{f{Bjc}}}{}}0000000000000{{{f{{Lf{c}}}}}{{f{Dl}}}{AJdNd}}`{{{Lf{ADlc}}}{{Ob{{Lf{ec}}{Lf{ADlc}}}}}BK`{ADlJfJh}}{{{Lf{ADlc}}}{{Lf{ec}}}BK`{ADlJfJh}}{{{f{{Lf{ce}}}}}{{BLn{ce}}}Nd{A@nBK`}}{Fhb}000{{{f{Bj{Lf{ce}}}}}bNdBK`}1111111111{{{f{B@d}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kj{Dl}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BM`Nd}BK`}{{{f{{Lf{BMb}}}}{f{BMb}}}d}{{{f{{Lf{H`}}}}{f{H`}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BFl}}{f{BFl}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BIf}}{f{BIf}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BLd}}{f{BLd}}}d}{{{f{BLf}}{f{BLf}}}d}{{f{f{c}}}d{}}00000000000000000000{BL`{{Hh{M`M`}}}}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{Bj{Lf{AD`}}}}}{{Ob{bBMd}}}}{{{f{AKh}}{f{BjGl}}}{{Ob{bAOn}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bAOn}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BL`}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}{BD`Nd}BK`}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}NdBK`}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}{ADnNd}BK`}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BFl}}{f{BjGl}}}Gn}{{{f{B@d}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BIf}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BLf}}{f{BjGl}}}{{Ob{bAOn}}}}`{cc{}}{BMdAKh}{BMfAKh}{BMhAKh}{BMjAKh}{{{f{Dl}}}Bh}5{DbBh}{{{f{Db}}}Bh}{G`Bh}8{M`Of}9{{{Fn{ce}}}{{Lf{{Dh{c}}e}}}{}{BK`A@n}}:{G`{{Lf{Dl}}}}{{{f{BKh}}}{{Lf{BKh}}}}{BMl{{Lf{BLl}}}}{{{f{BLl}}}{{Lf{BLl}}}}{c{{Lf{c}}}{}}{{{BId{c}}}{{Lf{{Dh{c}}}}}{}}{{{f{BKj}}}{{Lf{BKj}}}}{BMn{{Lf{BKj}}}}{{{f{Dl}}}{{Lf{Dl}}}}{Db{{Lf{Dl}}}}{BN`{{Lf{BKh}}}}{{{Fb{ce}}}{{Lf{ce}}}NdBK`}{{{AKj{c}}}{{Lf{c}}}{BNbNd}}{{{Lf{Dl}}}{{Lf{{Dh{Df}}}}}}{BNdc{}}{{{f{{Dh{c}}}}}{{Lf{{Dh{c}}}}}A@n}{cc{}}00000000{{c{B`{Hf}}}BNf{}}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNj}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNl}{cBh{{Hd{}{{Bb{{AKj{Dl}}}}}}}}{cBh{{Hd{}{{Bb{{Fb{Dl}}}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{BDd}}}}}}{cBh{{Hd{}{{Bb{{f{BDd}}}}}}}}{cBh{{Hd{}{{Bb{{f{Dl}}}}}}}}{cBh{{Hd{}{{Bb{Db}}}}}}{e{{Lf{{Dh{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFh}{{BNn{Kb}}}Kj{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BNn{Kb}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNn{Kb}}}BIj{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Lf{{Dh{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Lf{c}}}Nd}{c{{Lf{ec}}}BK`Nd}{{{f{Dl}}}Bh}0{{{f{Dl}}}{{Ob{BO`}}}}{DbBh}{{Bhc}BOb{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOdNd}BK`}{{{f{Bj{Lf{ce}}}}}{{B`{{f{Bjc}}}}}NdBK`}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}NdBK`}{{{f{Fl}}Fh}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Lf{ce}}}}{f{Bjg}}}b{BOfNd}BK`ABf}{{{f{BFl}}{f{Bjc}}}bABf}{{{f{B@d}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLf}}{f{Bjc}}}bABf}{{{f{Of}}}M`}{{}b}{cb{A@nBK`}}{{{f{{Dh{M`}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{}Fh}0000000000000`{{{f{BjBL`}}}{{f{BjIl}}}}`{{}c{}}0000000000000{{}Eh}{{{Lf{ce}}}{{B`{c}}}{}BK`}{{{Lf{ce}}}{}NdBK`}{{{Lf{ce}}}{{Hh{e}}}NdBK`}{{{Lf{BOh}}}Af}{BhDb}{{{f{BL`}}}d}{{{f{Of}}}d}`{{{f{{Lf{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BE`}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BOdNd}BK`}`0{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}{BOjNd}{BK`A@n}}{{{f{BOl}}}L`}0{{{f{BOn}}}L`}``11`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BM`Nd}BK`}{{C@`Fh}{{B`{Fh}}}}{{Bhc}C@b{}}{c{{Lf{c}}}{}}{{BhADjd}B@d}{e{{Lf{c}}}{}{{Oh{{f{{BLn{c}}}}}{{Cb{c}}}}}}{{ce}{{Lf{ce}}}{}BK`}{{}{{Lf{{BKl{c}}}}}{}}{c{{Lf{{BKl{e}}c}}}BK`{}}{Fh{{Lf{{Dh{{BKl{c}}}}}}}{}}{{Fhc}{{Lf{{Dh{{BKl{e}}}}c}}}BK`{}}3210`{{}Of}{{}BL`}{{{f{Bh}}{f{Bh}}}{{B`{BAd}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{B`{BAd}}}{BOdNd}BK`}{c{{C@d{{Lf{c}}}}}{}}{{ce}{{C@d{{Lf{ce}}}}}{}BK`}`````{{{f{BOl}}}L`}0{{{f{{Lf{c}}}}{f{BjC@f}}}b{AJdNd}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNdBK`}{{{f{BOn}}nN`}{{Ah{L`}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{Df}}}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}C@h}{{Ob{bBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Fn{Df}}}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{BjDb}}}{{Ob{FhBMd}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dh{C@j}}}}}{{Ob{FhBMd}}}}`{{{f{Bj{Lf{AD`}}}}C@l}{{Ob{IlBMd}}}}`{{{f{AJl}}FhFh}AJl}0{{{f{{Lf{c}}}}}{{B`{{f{AJd}}}}}{AJdNd}}{{{f{C@n}}Df}L`}{{M`M`}BL`}`{{{f{{Lf{ce}}}}}FhNdBK`}>>{{{f{Of}}}{{B`{M`}}}}{fc{}}00000000000{fDb}00{AOh{{Ob{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{Ob{eg}}}{}{{ALb{c}}AJ`}{}}0{c{{Ob{e}}}{}{}}0000{{{Lf{{Dh{c}}e}}}{{Ob{{Lf{{BId{c}}e}}}}}{}BK`}111111111{{}{{Ob{c}}}{}}0000000000000{{C@`Fh}{{Ob{FhAKh}}}}{c{{Ob{{Lf{c}}CA`}}}{}}{{ce}{{Ob{{Lf{ce}}CA`}}}{}BK`}{{}{{Ob{{Lf{{BKl{c}}}}CA`}}}{}}{c{{Ob{{Lf{{BKl{e}}c}}CA`}}}BK`{}}10{c{{Ob{{C@d{{Lf{c}}}}CA`}}}{}}{{ce}{{Ob{{C@d{{Lf{ce}}}}CA`}}}{}BK`}{f{{Ob{G`BAh}}}}00{{{Lf{ce}}}{{Ob{c{Lf{ce}}}}}{}BK`}{fOd}0000000000000{{{Lf{ce}}}cA@nBK`}`{{{f{C@n}}Df}L`}{{}c{}}0000000000000{{{f{{Lf{ce}}}}}FhNdBK`}``{{B@d{CAb{BhBh}}}B@d}{{{f{AKh}}c}AKh{{Oh{{f{Dl}}}{{Cb{Db}}}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{Df}}}}}{{Ob{FhBMd}}}}{{{f{BjBh}}BDd}{{Ob{bAOn}}}}{{{f{BjBh}}CAd}{{Ob{bAOn}}}}{{{f{BjBh}}{f{Dl}}}{{Ob{bAOn}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dh{CAf}}}}}{{Ob{FhBMd}}}}```````{{c{B`{Hf}}}BNf{}}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNj}{{{BNh{Kb}}{BNh{Df}}{B`{Hf}}}BNl}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{CAh{B`{{f{ADj}}}}}{{Ob{{BNn{Kb}}AKh}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAh}}}d}{FhCAh}{{{f{CAh}}}{{f{{Dh{Kb}}}}}}{{{f{BjCAh}}{f{H`}}}b}{{{f{BjCAh}}}b}{{{f{BjCAh}}{f{{Dh{{Fb{H`}}}}}}}b}1{{{f{BjCAh}}{B`{{f{H`}}}}}b}{CAh{{CAj{Kb}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAl}}}{{f{ADl}}}}{{{f{BjCAl}}}{{Fb{H`}}}}{{{f{BjCAl}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAl}}}CAl}{{f{f{Bjc}}}b{}}{fb}{{}CAl}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CAl}}}{{f{ADj}}}}{{{f{BjCAl}}Fh}b}{{{f{CAl}}{f{BjGl}}}{{Ob{bAOn}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAl}}}Fh}{FhCAl}{{{f{BjCAl}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAl}}}{{B`{{f{CAn}}}}}}8```````{{{f{AJl}}FhFh}AJl}0`{{}b}0{{}d}``{{eFhFh}{{CB`{Kb}}}{{Kj{Dl}}}{{Bf{}{{Bb{c}}}}}}{{eFhFh}{{AKb{Kb}}}{{Kj{{Dh{Df}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{L`}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{L`}}}L`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{L`}}}{{f{Dn}}}}{{{f{L`}}{f{L`}}}d}{{{f{L`}}{f{BjGl}}}Gn}{MfL`}{cc{}}{IlL`}{M`L`}{CBbL`}{DfL`}{KbL`}{nL`}{CBdL`}{CBfL`}{IjL`}{{}Fh}{{}c{}}{{L`Bh}Eh}{{L`Bh}Af}{{{f{L`}}}d}0{{DnHn}L`}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjL`}}Hn}b}{{{f{L`}}}{{f{Hn}}}}:{{{B`{n}}Dn}L`}``````{{{f{{CBh{c}}}}{f{{CBh{c}}}}}{{Ah{b}}}{}}{{{f{BEb}}}BDf}{{{f{BE`}}}CBj}{{{f{BE`}}}BDf}{{{f{CBj}}{f{Dl}}}{{B`{Mj}}}}{{{f{BDf}}{f{Dl}}}{{B`{Mj}}}}{{{f{CBj}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDf}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CBn{}{{CBl{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLjBM`}}{{{f{BDf}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBj}}AMl}BE`}{{{f{BDf}}AMl}BE`}{{{f{BjCBj}}{f{BDf}}}{{Ah{d}}}}{{{f{BjBDf}}{f{BDf}}}{{Ah{d}}}}{{{f{CBj}}{f{Dl}}}{{Ah{Mj}}}}{{{f{BDf}}{f{Dl}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOh}}}n}0{{Bh{Fn{Fl}}{f{ADj}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{ADj}}{B`{{f{CC`}}}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{Afc}e{AbKn}{}}`{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOh}}Ed}Ef}0{{{f{BOh}}}{{Ah{Ef}}}}0`{{{f{Af}}Fh}{{f{Fl}}}}{{{f{BOh}}}{{f{ADl}}}}{{{f{BjBOh}}}{{f{BjADl}}}}0{{{f{Af}}}E`}{{{f{BjBOh}}}{{f{Bj{l{c}}}}}C`}{{{f{BOh}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BOh}}}}{{{f{BjBOh}}}{{Ah{Fh}}}}0{{{f{BjAf}}}{{Ah{Fh}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}{{{f{Af}}}{{Ah{{f{AKd}}}}}}{{{f{BOh}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOh}}}{{B`{{Fb{F`}}}}}}0{{{f{BOh}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AM`}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOh}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{BOh}}}{{f{{Fn{Fl}}}}}}{{{f{BjBOh}}}{{f{Bj{Fn{Fl}}}}}}{{{f{BjAf}}}{{f{Bj{Fn{Fl}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOh}}}{{Lf{BOh}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fh{{f{c}}}{}}000{{{f{Af}}}{{f{c}}}{}}{Fh{{f{Bjc}}}{}}000{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fhb}000{{{f{BOh}}}Af}0{{{f{BOh}}}{{f{Dn}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}{{{f{Af}}c}eB@`{}}2{{{f{Af}}{f{Dl}}}c{}}55{{f{f{c}}}d{}}00{{{f{Af}}}Fh}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFh}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKl}}}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{BOh}}}{{AKj{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOh}}{f{Gf}}}{{Ah{Af}}}}{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Db}{cc{}}000{{{l{c}}}AfC`}{{Bh{f{{Dh{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dh{Hn}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFl}{{Ah{Af}}}}{{Bh{Fn{Fl}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{Dn}}}Af}{cAf{{Hd{}{{Bb{{B`{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Db}}}}}}}}{cAf{{Hd{}{{Bb{{B`{M`}}}}}}}}{cAf{{Hd{}{{Bb{M`}}}}}}{cAf{{Hd{}{{Bb{{f{M`}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Mf}}}}}}}}{cAf{{Hd{}{{Bb{Mf}}}}}}{cAf{{Hd{}{{Bb{{f{Mf}}}}}}}}{cAf{{Hd{}{{Bb{Kb}}}}}}{cAf{{Hd{}{{Bb{{f{Kb}}}}}}}}{cAf{{Hd{}{{Bb{Db}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Dl}}}}}}}}}}{cAf{{Hd{}{{Bb{{f{Dl}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{{Bh{Fn{n}}}Af}{{Bh{Fn{Il}}}Af}{{Bh{Fn{Ij}}}Af}{{Bh{Fn{Kb}}}Af}{{Bh{Fn{Ll}}}Af}{{Bh{Fn{M`}}}Af}{{Bh{Fn{Mf}}}Af}{{BhFh{f{Dn}}}Af}{{{f{Af}}FhFh}Af}{{{f{BOh}}Fh}{{Ah{Hn}}}}{{{f{Af}}}Fh}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOh}}}{{B`{{Lh{F`}}}}}}0{{{f{BOh}}Fh}{{B`{{f{If}}}}}}0{{{f{BOh}}FhFh}{{B`{{f{If}}}}}}0{{{f{BOh}}Fh}Hn}0{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}10{{{f{Af}}{f{Dl}}}c{}}{{{f{BOh}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fh}}}Af}{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Fh}000{{}c{}}000{{}Eh}{AfBCf}2{BFdAf}{AfAf}>>{{{f{Af}}}{{Ah{Gf}}}}000{{{f{BOh}}}Gf}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CCb}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOh}}}Fh}{{{f{Af}}}Fh}{{{f{BOh}}Fh}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Dl}}}c{}}021{{{f{Af}}}{{Ah{{B`{c}}}}}Kn}{{{f{BOh}}}{{Ah{L`}}}}0{{{f{BOh}}}{{B`{n}}}}0{{{f{Af}}}L`}1122322{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{AfAf}c{}}>>={{{f{BOh}}}{{Ah{Fh}}}}0{{{f{BOh}}}{{f{Bh}}}}{{Bhc}Af{{Kj{{Dh{{B`{M`}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Il}}}}}}}}{{Bhc}Af{{Kj{{Dh{{AKj{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{M`}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{f{{Dh{Df}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{AKj{{Dh{Df}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{f{{Dh{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{d}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{AKj{Dl}}}}}}}}}}{{Bhc}AfBFd}{{Bhc}Af{{Kj{{Dh{{AKj{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{Mf}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{f{Dl}}}}}}}}}}{{Bhc}Af{{Kj{{Dh{d}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kj{{Dh{{f{Dl}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Af}}}}}}}}{{Bhc}Af{{Kj{{Dh{Af}}}}}}{{Bh{Mh{M`}}}Af}{{Bhc}Af{{Kj{{Dh{Hn}}}}}}{{Bh{Mh{Il}}}Af}{{Bhc}Af{{Kj{{Dh{Il}}}}}}{{Bh{Mh{Mf}}}Af}{{Bhc}Af{{Kj{{Dh{Kb}}}}}}{{Bh{Mh{Kb}}}Af}{{Bhc}Af{{Kj{{Dh{Ll}}}}}}{{Bhc}Af{{Kj{{Dh{Ij}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{n}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Ij}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Db}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Ll}}}}}}}}{{Bhc}Af{{Kj{{Dh{{Fn{Df}}}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Kb}}}}}}}}{{Bhc}Af{{Kj{{Dh{Db}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{Mf}}}}}}}}{{Bhc}Af{{Kj{{Dh{n}}}}}}{{Bhc}Af{{Kj{{Dh{{B`{{Fn{Df}}}}}}}}}}{{Bh{f{Dn}}}Af}{{{f{BOh}}FhFh}Af}{{BhFh}Af}{{{f{BjCCb}}}{{B`{c}}}{}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Dl}}}{{Ah{Gf}}}}2{{{f{Af}}c}eB@`{}}{{{f{Af}}{f{Dl}}}c{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOh}}}Fh}`{{{f{Af}}}BGf}{{{f{Af}}}{{Ah{L`}}}}{{{f{BOh}}nN`}{{Ah{L`}}}}0{{{f{BOh}}}Af}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKn}{}}{{Afc}e{AbKn}{}}{{{f{BjBOh}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dh{Kb}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOh}}{f{Cd}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fhdd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fh}Af}{{{f{BjAf}}Jn}b}{{{f{BOh}}Kb}Af}{{{f{BjBOh}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CCb}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BOh}}KbFh}Af}{{{f{Af}}KbFh}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BOh}}Ed}{{Ah{Af}}}}0{{{f{BOh}}Kb}{{Hh{AfAf}}}}{{{f{Af}}Kb}{{Hh{AfAf}}}}{{{f{BOh}}Df}{{B`{n}}}}0{{{f{BOh}}Df}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Fh}{{Ah{{AKj{Dl}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{{f{Af}}c}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}}{{Ah{c}}}Kn}{{{f{BOh}}}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{L`}}}}{{{f{Af}}{B`{Fh}}}Af}{{{f{BOh}}{f{Ef}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dh{I`}}}}}{{Ah{Af}}}}{{{f{BOh}}{f{{Dh{I`}}}}}Af}{{{f{BOh}}{f{Ef}}}Af}{{{f{Af}}{f{{Dh{I`}}}}}Af}{{{f{Af}}FhAMl}Fl}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKj{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{c{{Ob{e}}}{}{}}00{{{Hh{{f{B@d}}{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{Bh{Fn{Fl}}}}}{{Ah{Af}}}}2{{{Hh{{f{B@d}}Fl}}}{{Ah{Af}}}}{{{Hh{BhFl}}}{{Ah{Af}}}}{{}{{Ob{c}}}{}}0006{{Bhc}{{Ob{Af}}}{}}{{{f{BjAf}}{In{c}}}dC`}8{f{{Ob{G`BAh}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BAl}}}}}}{{{f{Af}}}{{Ah{{f{AOl}}}}}}{{{f{Af}}}{{Ah{{f{BAn}}}}}}{{{f{Af}}}{{Ah{{f{BAj}}}}}}{{{f{BOh}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOh}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BOh}}Df}{{B`{n}}}}0{{{f{BOh}}Df}{{Ah{L`}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKn}}{{{f{Af}}{f{Gf}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{cc{}}{{}Fh}{{}c{}}{{{CCd{Af}}}Ch}{{{f{BjCh}}{f{BjFl}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCh}}{f{BjFl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CCf{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CCh}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Ff}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKn}}c}{{Ah{Af}}}Ad}{{{f{{l{Ff}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCj}}}CCj}{{f{f{Bjc}}}b{}}{fb}{{}CCj}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CCj}}{f{CCj}}}d}{{f{f{c}}}d{}}00{{{f{CCj}}{f{BjGl}}}Gn}{cc{}}{{{f{CCj}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{Fn{BCf}}}{{Ah{BCf}}}}{c{{Ah{BCf}}}{{Hd{}{{Bb{BCf}}}}}}{cBCf{{Hd{}{{Bb{BCf}}}}}}{c{{B`{BCf}}}{{Hd{}{{Bb{BCf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{e}}}}{AKj{{l{g}}}}}}}C`C`C`}{{}CCl}{{{f{CCn}}}d}0{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{DnFh}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}C`C`}{{CClCCl}CCl}{{{f{BjCCl}}CCl}b}10{{{f{CCl}}}Df}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CD`}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{{CDb{ec}}}}}{{CDb{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{c}}}}}}}C`}{{{f{Eh}}{f{Eh}}}{{Hh{EhEh}}}}{CDde{}{{CDf{c}}}}{CDde{}{{CDh{c}}}}{CClCCl}{c{{Ah{BCf}}}{{Hd{}{{Bb{{f{BCf}}}}}}}}{cBCf{{Hd{}{{Bb{{f{BCf}}}}}}}}{{{f{CCl}}CCl}d}{{}CCl}{{}CCn}{Fh{{f{c}}}{}}{{{f{{CDj{c}}}}}{{f{e}}}{}{}}1{{{f{{AJn{c}}}}}{{f{e}}}{}{}}222{Fh{{f{Bjc}}}{}}0{{{f{Bj{AJn{c}}}}}{{f{Bje}}}{}{}}111{{CClCCl}CCl}{Fhb}0000{cBDf{{Hd{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CDj{Af}}}}{f{{CDj{Af}}}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{f{f{c}}}d{}}00000000{{{f{BjCCl}}c}b{{Hd{}{{Bb{CCl}}}}}}``{{{f{CCl}}{f{BjGl}}}Gn}0000{{{f{CCn}}{f{BjGl}}}Gn}{cc{}}000{CClCCn}1{Df{{B`{CCl}}}}{DfCCl}00{c{{AJn{Gf}}}{{Hd{}{{Bb{d}}}}}}{c{{AJn{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{cCCl{{Hd{}{{Bb{CCl}}}}}}{eCDh{}{{Hd{}{{Bb{c}}}}}}32{{{f{Dl}}}{{B`{CCl}}}}{c{{AJn{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AJn{Gf}}}{{Hl{}{{Bb{d}}}}}}{c{{AJn{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CCn}{{B`{Dn}}}}{{{f{AMn}}{f{AMn}}}AMn}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDj{Af}}}}{f{Bjc}}}bABf}{{{f{CCl}}{f{Bjc}}}bABf}{{{f{CCn}}{f{Bjc}}}bABf}{{}Fh}0000{{{f{BjCCl}}CCl}b}{{CClCCl}CCl}{{{f{CCl}}CCl}d}{{}c{}}0000{{{AJn{c}}}c{}}{CClc{}}2{BFh{{Fn{c}}}{}}{{}{{Fn{Bh}}}}{{{f{CCl}}}d}0{{{f{CCl}}}{{ACl{CCl}}}}{{{f{CD`}}}{{`{{Bf{}{{Bb{CD`}}}}}}}}{{{f{CCl}}}{{ACn{CCl}}}}{{{f{CD`}}}Fh}{LlHn}1{c{{AJn{c}}}{}}{{eFh}{{CDb{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFh}{{CDb{{CDn{{CDl{c}}}}c}}}A@n}{{{f{Bj{CDb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CDb{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gd}}{CClCCl}{{{f{Dl}}}Db}`{{{f{BjCCl}}CCl}b}{{{f{BjCCl}}CCld}b}{{{f{{CDb{ec}}}}}{{Hh{Fh{B`{Fh}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CD`}}KbFh}CD`}{{{f{{Dh{c}}}}KbFh}{{f{{Dh{c}}}}}{}}{{{f{c}}Fh}{{Fn{c}}}CD`}0{{{f{CD`}}Kb}{{Hh{CD`CD`}}}}{{{f{BCf}}Fhd}{{Fn{BCf}}}}{{CClCCl}CCl}80{fc{}}009{{CDdFh}{{CDb{CDdc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dh{{Fn{c}}}}}}}{{Hh{Fh{Fn{Fh}}}}}{}}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{{Dh{c}}}}}{{AJh{I`}}}{{Kj{{Dh{Of}}}}JfJh}}{{{f{{Dh{e}}}}}{{Fn{c}}}{JfJhCf}{{Kj{{Dh{c}}}}}}{{{f{Af}}}{{Fn{Af}}}}","D":"JKj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5774],[5,"ListType",1535],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1535],[10,"Num",5775],[10,"ToPrimitive",5776],[5,"Series",5053],[8,"PolarsResult",4279,5777],[10,"NumOpsDispatchInner",5498,5778],[6,"GroupsProxy",3874,5779],[5,"BooleanType",1535],[6,"Option",5780],[17,"Item"],[8,"ArrayBox",5474],[10,"Iterator",5781],[5,"PlSmallStr",4279,5782],[0,"mut"],[17,"IsNested"],[5,"FalseT",1535],[10,"PolarsDataType",1535],[17,"Output"],[10,"Fn",5783],[10,"Copy",5784],[5,"AmortSeries",5474],[10,"FnMut",5783],[5,"Float64Type",1535],[5,"Float32Type",1535],[8,"StringChunked",1535],[5,"String",5785],[5,"BinaryType",1535],[1,"u8"],[1,"slice"],[5,"StringType",1535],[1,"str"],[6,"DataType",1535,5786],[8,"ListChunked",1535],[5,"View",5787],[5,"SortOptions",1450],[8,"IdxCa",1535,5788],[6,"Column",3635],[5,"SortMultipleOptions",1450],[8,"BinaryChunked",1535],[10,"PolarsIntegerType",1535],[10,"MetadataTrait",823,5789],[5,"Box",5790],[6,"CastOptions",735],[10,"NumOpsDispatchCheckedInner",5523,5791],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4279,5792],[5,"Vec",5793],[5,"CompactString",5794],[5,"MetadataProperties",823],[10,"DoubleEndedIterator",5795],[8,"BooleanChunked",1535],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5796],[8,"Result",5796],[10,"Array",5792],[17,"Array"],[10,"IntoIterator",5797],[5,"Bitmap",5798],[1,"tuple"],[10,"IntoParallelIterator",5799],[10,"TrustedLen",5800],[6,"AnyValue",1535,5801],[8,"IdxSize",4279,5802],[5,"MetadataFlags",823],[5,"ObjectType",1535],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",823],[5,"RwLockWriteGuard",5803],[5,"Int128Type",1535],[8,"DecimalChunked",1535,5804],[10,"Send",5784],[10,"Sync",5784],[10,"ExactSizeIterator",5805],[10,"PolarsFloatType",1535],[6,"IsSorted",5053,5806],[10,"PolarsIterator",784],[1,"i64"],[5,"Iter",5807],[1,"fn"],[5,"Map",5808],[10,"AsRef",5809],[6,"ChunkedArrayLayout",40],[10,"NumCast",5776],[5,"Scalar",4990],[6,"MetadataReadGuard",823,5810],[5,"IMMetadata",823,5811],[5,"Arc",4279,5812],[5,"RwLockReadGuard",5803],[5,"Int64Type",1535],[1,"i128"],[5,"UInt32Type",1535],[1,"u32"],[5,"UInt64Type",1535],[5,"Int32Type",1535],[1,"i32"],[5,"Range",5813],[5,"Field",1535,5814],[10,"ParallelIterator",5799],[10,"IndexedParallelIterator",5799],[6,"QuantileInterpolOptions",4279,5815],[5,"RollingOptionsFixedWindow",4279,5816],[10,"Sized",5784],[17,"IsStruct"],[8,"PlRandomState",1535,5817],[5,"BytesHash",5818],[8,"Array2",5819],[8,"ArrayView1",5819],[6,"Either",5820],[6,"Result",5821],[5,"TypeId",5822],[5,"NullableIdxSize",4279,5802],[10,"FnOnce",5783],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",445,5823],[10,"ChunkedBuilder",473],[5,"BinViewChunkedBuilder",473,5824],[10,"ViewType",5825],[5,"BooleanChunkedBuilder",473,5826],[5,"NullChunkedBuilder",473,5827],[5,"PrimitiveChunkedBuilder",473,5828],[10,"Clone",5829],[8,"StringChunkedBuilder",473,5824],[8,"BinaryChunkedBuilder",473,5824],[10,"NewChunkedArray",473],[5,"AnonymousListBuilder",581,5830],[5,"AnonymousOwnedListBuilder",581,5830],[5,"ListBooleanChunkedBuilder",581,5831],[5,"ListPrimitiveChunkedBuilder",581,5832],[10,"ListBuilderTrait",581],[5,"ListStringChunkedBuilder",581,5833],[5,"ListBinaryChunkedBuilder",581,5833],[5,"ListNullChunkedBuilder",581,5834],[10,"Hasher",5835],[10,"ChunkedCollectInferIterExt",764],[10,"ChunkedCollectIterExt",764],[10,"Canonical",778],[10,"ChunkedCollectParIterExt",780],[10,"FromParIterWithDtype",780],[5,"BooleanArray",5836],[5,"BoolIterNoNull",784],[5,"SomeIterator",784],[5,"MetadataEnv",823,5837],[10,"MetadataCollectable",823,5838],[5,"Iter",5839],[5,"IterNames",5839],[5,"File",5840],[5,"Mutex",5841],[6,"MetadataMerge",823],[5,"RwLock",5803],[5,"ObjectArray",1109],[6,"ArrowDataType",1535,5842],[10,"Any",5822],[10,"Debug",5796],[8,"ObjectValueIter",1109],[5,"BitmapIter",5843],[6,"ZipValidity",5844],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1535],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[10,"ChunkAgg",1237],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompare",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5845],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1363],[10,"StaticArray",1535,5846],[10,"TernaryFnMut",1363],[10,"Error",5847],[10,"UnaryFnMut",1363],[5,"PrimitiveArray",5848],[6,"SearchSortedSide",1404],[10,"SlicedArray",4279,5849],[5,"NoNull",5558],[5,"RowsEncoded",5850],[5,"BinaryArray",5851],[8,"BinaryOffsetChunked",1535],[5,"NaiveDateTime",5852],[6,"PolarsError",4279,5777],[6,"Cow",5853],[8,"Float32Chunked",1535],[8,"Float64Chunked",1535],[10,"ArrayFromIter",1535,5854],[10,"ArrayFromIterDtype",1535,5854],[10,"AsRefDataType",1535,5786],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5855],[10,"From",5809],[5,"CategoricalChunked",2996,5856],[10,"CategoricalMergeOperation",2996,5857],[10,"LogicalType",1535,5858],[5,"Logical",1535,5858],[5,"OwnedObject",1535,5801],[6,"UnknownKind",1535,5786],[5,"CompatLevel",1535,5786],[6,"TimeUnit",1535,5859],[5,"UInt8Type",1535],[5,"UInt16Type",1535],[5,"Int8Type",1535],[5,"Int16Type",1535],[5,"DateType",1535],[5,"TimeType",1535],[5,"BinaryOffsetType",1535],[5,"DecimalType",1535],[5,"DatetimeType",1535],[5,"DurationType",1535],[5,"CategoricalType",1535],[6,"ArrowTimeUnit",1535],[10,"ArrayCollectIterExt",4279,5854],[8,"Utf8ViewArray",5825],[8,"UInt32Chunked",1535],[5,"Error",5796],[10,"NumericNative",1535],[10,"Into",5809],[5,"ArrowField",4279],[6,"IntegerType",5860],[6,"PrimitiveType",5861],[10,"Borrow",5862],[10,"NoOption",5863],[10,"GetAnyValue",1535,5801],[8,"Int128Chunked",1535],[10,"IntoScalar",1535,5864],[6,"Ordering",5865],[6,"PhysicalType",5860],[6,"ToCompactStringError",5794],[8,"UInt8Chunked",1535],[8,"UInt16Chunked",1535],[8,"UInt64Chunked",1535],[8,"Int8Chunked",1535],[8,"Int16Chunked",1535],[8,"Int32Chunked",1535],[8,"Int64Chunked",1535],[8,"PlIdHashMap",1535,5788],[5,"CategoricalChunkedBuilder",2996,5866],[5,"GlobalRevMapMerger",2996,5857],[6,"RevMapping",3138,5867],[6,"CategoricalOrdering",3138,5867],[5,"CatIter",2996,5856],[1,"u128"],[5,"DataFrame",3351],[5,"StringCacheHolder",3192,5868],[5,"EnumChunkedBuilder",3211,5869],[5,"ErrString",3239,5777],[6,"PolarsWarning",3239,5870],[10,"Display",5796],[6,"FloatFmt",3320],[1,"char"],[8,"Schema",5031],[10,"IntoColumn",3635],[6,"NullStrategy",3351],[6,"UniqueKeepStrategy",3351],[8,"PlHashSet",1535,5817],[8,"ArrowSchema",4279,5871],[5,"Row",4132],[5,"GroupBy",3874],[5,"RangeFull",5813],[5,"RangeInclusive",5813],[5,"RangeFrom",5813],[5,"RangeTo",5813],[5,"RangeToInclusive",5813],[5,"RecordBatchIter",3351],[5,"PhysRecordBatchIter",3351],[10,"IntoSeries",5053,5872],[10,"RangeBounds",5813],[10,"IntoVec",5558],[8,"SchemaRef",5031],[6,"IndexOrder",4279,5873],[5,"StructArray",5874],[8,"RecordBatch",5875],[5,"ScalarColumn",3635],[6,"BitRepr",5053,5806],[8,"SeriesPhysIter",5053,5876],[5,"UnpivotArgsIR",3845],[5,"GroupsIdx",3874,5779],[8,"IdxVec",5877],[6,"GroupByMethod",3874],[5,"SlicedGroups",3874,5779],[5,"GroupsProxyParIter",3874,5779],[10,"UnindexedConsumer",5878],[6,"GroupsIndicator",3874,5779],[8,"IdxItem",3874,5779],[10,"IntoGroupsProxy",3874,5879],[5,"Copied",5880],[5,"Zip",5881],[5,"GroupsProxyIter",3874,5779],[8,"GroupsSlice",3874,5779],[1,"array"],[6,"RollingFnParams",4279,5882],[10,"IsFloat",5883],[10,"NativeType",5884],[10,"AggList",4116,5885],[10,"TakeExtremum",4116],[10,"PhysicalAggExpr",4129],[6,"AnyValueBuffer",4132,5886],[6,"AnyValueBufferTrusted",4132,5886],[5,"IdHasher",4231,5887],[5,"IdxHash",4231,5887],[5,"HashMap",5888],[10,"BuildHasher",5835],[10,"VecHash",4231,5889],[10,"Allocator",5890],[5,"BorrowedFd",5891],[10,"AsFd",5891],[10,"AsRawFd",5892],[5,"OsStr",5893],[5,"Path",5894],[20,"MaybeUninit",5895],[10,"NumOpsDispatchChecked",4279,5791],[5,"ChunkId",4279,5802],[5,"RollingVarParams",4279,5882],[5,"RollingQuantileParams",4279,5882],[6,"NonExistent",4279,5896],[10,"Ord",5865],[10,"Default",5897],[5,"CStr",5898],[5,"Weak",5812],[10,"PartialEq",5865],[10,"Scalar",5899],[5,"Error",5900],[6,"Error",5901],[5,"Utf8Error",5902],[5,"TryReserveError",5903],[5,"CString",5904],[5,"PathBuf",5894],[5,"OsString",5893],[10,"ToOwned",5853],[1,"never"],[10,"FromData",4912,5905],[5,"Buffer",5906],[10,"FromDataUtf8",4912,5905],[10,"FromDataBinary",4912,5905],[5,"ListArray",5907],[6,"Ambiguous",4279,5896],[10,"NamedFromOwned",4279,5908],[10,"PartialOrd",5865],[10,"Hash",5835],[10,"SeriesTrait",5053,5806],[10,"CloneToUninit",5829],[10,"ChunkAggSeries",4279,5909],[10,"QuantileAggSeries",4279,5910],[10,"IndexToUsize",4279,5911],[10,"NamedFrom",4279,5908],[5,"Pin",5912],[5,"Request",5847],[5,"BorrowedCursor",5913],[5,"IoSliceMut",5914],[6,"SeekFrom",5914],[10,"VarAggSeries",4279,5915],[5,"AllocError",5890],[5,"BTreeMap",5916],[5,"Arguments",5796],[5,"IoSlice",5914],[5,"AnonymousBuilder",4918,5917],[5,"Offsets",5845],[5,"MutableNullArray",4941,5918],[5,"MutableBitmap",5919],[5,"Utf8Array",5920],[1,"u16"],[1,"i16"],[1,"i8"],[5,"Schema",5921],[10,"SchemaExt",5031],[17,"DataType"],[10,"SchemaNamesAndDtypes",5031],[8,"Metadata",5842],[5,"SeriesIter",5053,5876],[5,"Rc",5922],[10,"LhsNumOps",5498,5778],[10,"NumOpsDispatch",5498,5778],[6,"NullBehavior",5531],[5,"SuperTypeFlags",5558,5923],[5,"SuperTypeOptions",5558,5923],[10,"Container",5558],[5,"TrustMyLength",5558,5800],[10,"CustomIterTools",5558,5924],[10,"FromIteratorReversed",5925],[10,"FromTrustedLenIterator",5558,5924],[5,"Wrap",5558],[5,"Repeat",5926],[5,"Take",5927],[8,"FillNullLimit",1237],[10,"InitHashMaps",1535],[10,"InitHashMaps2",1535],[5,"TrueT",1535],[15,"IO",3306],[15,"Context",3306],[15,"Count",4113],[15,"Slice",4114],[10,"ListFromIter",4279],[10,"Utf8FromIter",4985],[10,"BinaryFromIter",4985]],"r":[[0,5887],[4,5868],[13,5868],[16,5868],[32,5868],[445,5823],[473,5824],[474,5824],[475,5826],[478,5827],[479,5828],[480,5824],[581,5830],[582,5830],[583,5833],[584,5831],[586,5834],[587,5832],[588,5833],[828,5811],[834,5838],[835,5837],[839,5810],[840,5789],[1156,5928],[1434,5849],[1450,5849],[1536,5801],[1538,5854],[1539,5854],[1540,5854],[1541,5842],[1543,5786],[1559,5856],[1562,5856],[1563,5866],[1564,5857],[1565,5867],[1568,5786],[1569,5786],[1570,5786],[1571,5786],[1582,5804],[1593,5814],[1594,5814],[1609,5801],[1611,5857],[1615,5788],[1616,5911],[1617,5788],[1618,5788],[1619,5817],[1620,5788],[1645,5864],[1659,5858],[1660,5858],[1678,5801],[1682,5817],[1683,5817],[1684,5788],[1685,5817],[1686,5817],[1687,5817],[1688,5782],[1694,5867],[1696,5846],[1708,5859],[1709,5786],[1736,5786],[1935,5857],[1952,5858],[2058,5786],[2184,5858],[2584,5857],[2585,5857],[2597,5786],[2685,5856],[2724,5856],[2996,5856],[2997,5856],[2998,5866],[2999,5857],[3000,5867],[3002,5857],[3006,5867],[3023,5857],[3090,5857],[3091,5857],[3109,5856],[3113,5856],[3138,5867],[3143,5867],[3192,5868],[3198,5868],[3201,5868],[3209,5868],[3211,5869],[3229,5867],[3234,5867],[3235,5868],[3236,5868],[3237,5868],[3238,5868],[3245,5777],[3252,5777],[3253,5777],[3254,5870],[3268,5777],[3276,5777],[3283,5870],[3288,5777],[3290,5777],[3291,5777],[3292,5777],[3293,5777],[3294,5870],[3295,5777],[3310,5929],[3311,5929],[3312,5929],[3313,4231],[3874,5779],[3880,5779],[3881,5779],[3882,5779],[3883,5779],[3884,5779],[3885,5779],[3888,5779],[3890,5879],[3902,5779],[4116,5885],[4134,5886],[4135,5886],[4230,5930],[4231,5887],[4232,5887],[4233,5887],[4234,5889],[4237,5889],[4238,5889],[4279,5896],[4280,5812],[4281,5823],[4282,5854],[4283,5792],[4285,5871],[4286,5824],[4287,5826],[4289,5856],[4290,5856],[4291,5866],[4292,5857],[4293,5867],[4294,5909],[4295,5802],[4296,40],[4297,473],[4298,764],[4299,764],[4300,3635],[4304,3351],[4311,5905],[4312,5905],[4313,5905],[4315,5857],[4318,5911],[4319,5802],[4320,5873],[4321,5911],[4322,3635],[4323,5872],[4324,5558],[4326,5931],[4327,5931],[4328,5931],[4331,5778],[4333,5833],[4334,5831],[4335,581],[4336,5932],[4337,5832],[4338,5833],[4342,5908],[4343,5908],[4345,473],[4347,5896],[4350,5802],[4351,5802],[4352,5778],[4353,5791],[4357,5782],[4358,5777],[4359,784],[4360,1109],[4361,5777],[4362,5828],[4364,5910],[4365,5815],[4368,5867],[4369,5882],[4370,5816],[4371,5882],[4372,5882],[4375,4990],[4378,5053],[4379,5806],[4381,5849],[4382,5868],[4384,5824],[4386,3351],[4387,3845],[4389,5915],[4390,5889],[4445,5857],[4496,5932],[4497,0],[4510,5932],[4542,0],[4697,5911],[4743,5932],[4745,5857],[4746,5857],[4771,5932],[4778,5777],[4779,5777],[4780,5777],[4781,5777],[4793,5856],[4795,5932],[4801,5856],[4882,5932],[4912,5905],[4913,5905],[4914,5905],[4918,5917],[4941,5918],[4972,5867],[4977,5867],[4978,5849],[4981,5868],[4982,5868],[4983,5868],[4984,5868],[4985,5933],[4986,5933],[5055,5806],[5056,1237],[5059,5872],[5060,5806],[5061,5806],[5066,5876],[5067,5876],[5068,5806],[5498,5778],[5499,5778],[5500,5778],[5506,5778],[5523,5791],[5524,5791],[5561,5924],[5562,5924],[5563,5924],[5566,5923],[5567,5923],[5568,5800],[5583,5934],[5584,5934],[5644,5935],[5645,5923],[5688,5923],[5689,5923],[5691,5936],[5719,5923],[5751,5923],[5768,5936]],"b":[[50,"impl-Add-for-%26ChunkedArray%3CT%3E"],[51,"impl-Add-for-ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[67,"impl-ChunkedArray%3CFloat32Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkedArray%3CStringType%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkedArray%3CT%3E"],[124,"impl-Div-for-ChunkedArray%3CT%3E"],[125,"impl-Div-for-%26ChunkedArray%3CT%3E"],[126,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[127,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[159,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[160,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[230,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[231,"impl-Container-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[242,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[245,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[259,"impl-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[262,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[263,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[264,"impl-Mul-for-ChunkedArray%3CT%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[274,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[277,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[279,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[284,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[285,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[286,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[287,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[292,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[300,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkedArray%3CListType%3E"],[308,"impl-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[321,"impl-Rem-for-ChunkedArray%3CT%3E"],[322,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[323,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[324,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-Container-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[351,"impl-Sub-for-ChunkedArray%3CT%3E"],[352,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[353,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[354,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[356,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkedArray%3CBooleanType%3E"],[360,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkedArray%3CListType%3E"],[370,"impl-ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[379,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[529,"impl-BinViewChunkedBuilder%3Cstr%3E"],[530,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[861,"impl-MetadataProperties"],[862,"impl-Flags-for-MetadataProperties"],[863,"impl-Flags-for-MetadataFlags"],[864,"impl-MetadataFlags"],[928,"impl-MetadataTrait-for-Metadata%3CT%3E"],[929,"impl-Metadata%3CT%3E"],[954,"impl-LowerHex-for-MetadataProperties"],[955,"impl-Octal-for-MetadataProperties"],[956,"impl-UpperHex-for-MetadataProperties"],[957,"impl-Debug-for-MetadataProperties"],[958,"impl-Binary-for-MetadataProperties"],[959,"impl-Debug-for-MetadataFlags"],[960,"impl-Binary-for-MetadataFlags"],[961,"impl-Octal-for-MetadataFlags"],[962,"impl-LowerHex-for-MetadataFlags"],[963,"impl-UpperHex-for-MetadataFlags"],[973,"impl-MetadataProperties"],[974,"impl-Flags-for-MetadataProperties"],[975,"impl-MetadataFlags"],[976,"impl-Flags-for-MetadataFlags"],[987,"impl-MetadataTrait-for-Metadata%3CT%3E"],[988,"impl-Metadata%3CT%3E"],[1031,"impl-Metadata%3CT%3E"],[1032,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1036,"impl-Metadata%3CT%3E"],[1037,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1151,"impl-ObjectArray%3CT%3E"],[1152,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1180,"impl-ObjectArray%3CT%3E"],[1181,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1183,"impl-Array-for-ObjectArray%3CT%3E"],[1184,"impl-ObjectArray%3CT%3E"],[1187,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1776,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1777,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1778,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1779,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1780,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1781,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1782,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1858,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1862,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1863,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2187,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2188,"impl-PartialEq-for-DataType"],[2197,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2198,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2199,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2200,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2203,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2204,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2205,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2206,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2244,"impl-Debug-for-AnyValue%3C\'a%3E"],[2245,"impl-Display-for-AnyValue%3C\'_%3E"],[2247,"impl-Debug-for-DataType"],[2248,"impl-Display-for-DataType"],[2251,"impl-Debug-for-TimeUnit"],[2252,"impl-Display-for-TimeUnit"],[2264,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2265,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2266,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2267,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2268,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2270,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2272,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2273,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2275,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2277,"impl-From%3C%26Field%3E-for-Field"],[2300,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2302,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2305,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2306,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2307,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2309,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2310,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2311,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2312,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2318,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2319,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2321,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2322,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2323,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2324,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2325,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2326,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2333,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2334,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2335,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2336,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2337,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2338,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2427,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2428,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2429,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2430,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2433,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2434,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2435,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2436,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2574,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2575,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2576,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2577,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2580,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2581,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2582,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2583,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2619,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2620,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2623,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2624,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2625,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2626,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2627,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2628,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2641,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2642,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2645,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2646,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2647,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2648,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2651,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2652,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2653,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2654,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2737,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2738,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2739,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2740,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3043,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3047,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3048,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3063,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3064,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3065,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3066,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3067,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3068,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3084,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3085,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3086,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3087,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3088,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3089,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3100,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3101,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3102,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3103,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3104,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3105,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3278,"impl-Display-for-ErrString"],[3279,"impl-Debug-for-ErrString"],[3376,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3377,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3378,"impl-Add%3C%26Series%3E-for-DataFrame"],[3420,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3421,"impl-Div%3C%26Series%3E-for-DataFrame"],[3422,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3454,"impl-Debug-for-DataFrame"],[3455,"impl-Display-for-DataFrame"],[3461,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3462,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3488,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3489,"impl-Index%3Cusize%3E-for-DataFrame"],[3490,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3491,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3492,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3493,"impl-Index%3C%26str%3E-for-DataFrame"],[3494,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3495,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3513,"impl-DataFrame"],[3514,"impl-Container-for-DataFrame"],[3521,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3522,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3523,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3524,"impl-DataFrame"],[3525,"impl-Container-for-DataFrame"],[3542,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3543,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3544,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3571,"impl-DataFrame"],[3572,"impl-Container-for-DataFrame"],[3576,"impl-DataFrame"],[3577,"impl-Container-for-DataFrame"],[3580,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3581,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3582,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3602,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3603,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3642,"impl-Add%3CT%3E-for-Column"],[3643,"impl-Add%3CT%3E-for-%26Column"],[3644,"impl-Add-for-Column"],[3645,"impl-Add-for-%26Column"],[3667,"impl-BitAnd-for-%26Column"],[3668,"impl-BitAnd-for-Column"],[3669,"impl-Column"],[3670,"impl-BitOr-for-%26Column"],[3671,"impl-BitOr-for-Column"],[3672,"impl-BitXor-for-Column"],[3673,"impl-BitXor-for-%26Column"],[3699,"impl-Div%3CT%3E-for-%26Column"],[3700,"impl-Div%3CT%3E-for-Column"],[3701,"impl-Div-for-Column"],[3702,"impl-Div-for-%26Column"],[3724,"impl-From%3CScalarColumn%3E-for-Column"],[3726,"impl-From%3CSeries%3E-for-Column"],[3772,"impl-Mul-for-%26Column"],[3773,"impl-Mul%3CT%3E-for-%26Column"],[3774,"impl-Mul-for-Column"],[3775,"impl-Mul%3CT%3E-for-Column"],[3790,"impl-Rem-for-%26Column"],[3791,"impl-Rem%3CT%3E-for-Column"],[3792,"impl-Rem%3CT%3E-for-%26Column"],[3793,"impl-Rem-for-Column"],[3810,"impl-Sub-for-%26Column"],[3811,"impl-Sub%3CT%3E-for-%26Column"],[3812,"impl-Sub%3CT%3E-for-Column"],[3813,"impl-Sub-for-Column"],[3990,"impl-Display-for-GroupByMethod"],[3991,"impl-Debug-for-GroupByMethod"],[3998,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3999,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4000,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4033,"impl-IntoIterator-for-GroupsIdx"],[4034,"impl-IntoIterator-for-%26GroupsIdx"],[4036,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4037,"impl-IntoParallelIterator-for-GroupsIdx"],[4407,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4408,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4409,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4410,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4413,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4414,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4502,"impl-Default-for-Arc%3Cstr%3E"],[4503,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4504,"impl-Default-for-Arc%3CT%3E"],[4505,"impl-Default-for-Arc%3CCStr%3E"],[4565,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4566,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4567,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4600,"impl-Display-for-PolarsError"],[4601,"impl-Debug-for-PolarsError"],[4602,"impl-Display-for-PlSmallStr"],[4603,"impl-Debug-for-PlSmallStr"],[4606,"impl-Display-for-Arc%3CT,+A%3E"],[4607,"impl-Pointer-for-Arc%3CT,+A%3E"],[4608,"impl-Debug-for-Arc%3CT,+A%3E"],[4619,"impl-From%3CError%3E-for-PolarsError"],[4620,"impl-From%3CError%3E-for-PolarsError"],[4621,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4622,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4623,"impl-From%3C%26str%3E-for-PlSmallStr"],[4625,"impl-From%3CString%3E-for-PlSmallStr"],[4626,"impl-From%3C%26String%3E-for-PlSmallStr"],[4627,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4631,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4633,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4634,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4635,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4636,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4637,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4638,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4639,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4640,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4641,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4642,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4643,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4644,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4645,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4646,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4648,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4661,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4662,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4663,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4664,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4665,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4666,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4667,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4668,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[5004,"impl-From%3Ci32%3E-for-Scalar"],[5006,"impl-From%3Cu64%3E-for-Scalar"],[5007,"impl-From%3Cu32%3E-for-Scalar"],[5008,"impl-From%3Cu16%3E-for-Scalar"],[5009,"impl-From%3Cu8%3E-for-Scalar"],[5010,"impl-From%3Ci64%3E-for-Scalar"],[5011,"impl-From%3Cf64%3E-for-Scalar"],[5012,"impl-From%3Ci16%3E-for-Scalar"],[5013,"impl-From%3Ci8%3E-for-Scalar"],[5014,"impl-From%3Cf32%3E-for-Scalar"],[5076,"impl-Add%3CT%3E-for-%26Series"],[5077,"impl-Add-for-%26Series"],[5078,"impl-Add-for-Series"],[5079,"impl-Add%3CT%3E-for-Series"],[5151,"impl-Div-for-%26Series"],[5152,"impl-Div%3CT%3E-for-%26Series"],[5153,"impl-Div%3CT%3E-for-Series"],[5154,"impl-Div-for-Series"],[5166,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5167,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5168,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5169,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5170,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5171,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5188,"impl-Debug-for-Series"],[5189,"impl-Display-for-Series"],[5201,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5202,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5203,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5204,"impl-FromIterator%3Cu32%3E-for-Series"],[5205,"impl-FromIterator%3C%26u32%3E-for-Series"],[5206,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5207,"impl-FromIterator%3Cu64%3E-for-Series"],[5208,"impl-FromIterator%3C%26u64%3E-for-Series"],[5209,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5210,"impl-FromIterator%3Ci32%3E-for-Series"],[5211,"impl-FromIterator%3C%26i32%3E-for-Series"],[5212,"impl-FromIterator%3Ci64%3E-for-Series"],[5213,"impl-FromIterator%3C%26i64%3E-for-Series"],[5214,"impl-FromIterator%3CString%3E-for-Series"],[5215,"impl-FromIterator%3Cf32%3E-for-Series"],[5216,"impl-FromIterator%3C%26f32%3E-for-Series"],[5217,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5218,"impl-FromIterator%3Cf64%3E-for-Series"],[5219,"impl-FromIterator%3C%26f64%3E-for-Series"],[5220,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5221,"impl-FromIterator%3Cbool%3E-for-Series"],[5222,"impl-FromIterator%3C%26bool%3E-for-Series"],[5223,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5224,"impl-FromIterator%3C%26str%3E-for-Series"],[5225,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5226,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5227,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5228,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5229,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5230,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5231,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5232,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5247,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5248,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5249,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5250,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5251,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5252,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5295,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5296,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5297,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5298,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5299,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5300,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5314,"impl-Mul-for-%26Series"],[5315,"impl-Mul%3CT%3E-for-%26Series"],[5316,"impl-Mul%3CT%3E-for-Series"],[5317,"impl-Mul-for-Series"],[5324,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5325,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5326,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5327,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5328,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5329,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5330,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5331,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5332,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5333,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5334,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5335,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5336,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5337,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5338,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5339,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5340,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5341,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5342,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5343,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5344,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5345,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5346,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5347,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5348,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5349,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5350,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5351,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5352,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5353,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5354,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5355,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5356,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5357,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5358,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5359,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5360,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5365,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5366,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5367,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5368,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5369,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5370,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5379,"impl-Rem-for-%26Series"],[5380,"impl-Rem%3CT%3E-for-%26Series"],[5381,"impl-Rem%3CT%3E-for-Series"],[5413,"impl-Sub%3CT%3E-for-%26Series"],[5414,"impl-Sub-for-%26Series"],[5415,"impl-Sub%3CT%3E-for-Series"],[5416,"impl-Sub-for-Series"],[5437,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5438,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5440,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5441,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5591,"impl-SuperTypeFlags"],[5592,"impl-Flags-for-SuperTypeFlags"],[5662,"impl-UpperHex-for-SuperTypeFlags"],[5663,"impl-LowerHex-for-SuperTypeFlags"],[5664,"impl-Octal-for-SuperTypeFlags"],[5665,"impl-Binary-for-SuperTypeFlags"],[5666,"impl-Debug-for-SuperTypeFlags"],[5675,"impl-Flags-for-SuperTypeFlags"],[5676,"impl-SuperTypeFlags"],[5678,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5679,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5682,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5683,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5686,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5687,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAEcPkg/OD9EP0g/TD9QP1Q/aD90P4g/jDwkQ","e":"OzAAAAEAADERMAIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQABABsAAMAcQACAHgADQCHAAMAjAACAJAABQCYAAEAnAAFAKQAAwCqAAMArwAFALYAAQC7AAUAwwACAMoABQDRAAMA2AACAN0AAgDhAAcA7gAMAAABAwAGAQYADgEbAC0BAwAyAQAANAEEADoBAQBAAQAAQgEEAEgBAABNAQUAVQEBAFkBAwBeAQkAbgEBAHQBAAB4AQgAggEIAIwBAACOAQUAlgEAAJgBIwC9ASkA6wECAPEBJwAfAgUAKQIAACsCJgBUAkwAqAIMALwCJADkAg4A9AIBAPcCGQAUAwkAIAMBACQDAQAnAxUAPgMJAEkDCgBfAwEAZgMNAHUDEACKAxIAnwMAAKEDCQCtAwMAswMBALcDDQDPAwAA0QMAANgDBwDhAwcA9gMBAPoDAAD9AwMABQQFAAwEBAAYBAsAKwQEADIEDQBCBAYATAQIAFYEAQBaBBcAcwQHAHwEAAB+BAAAgQQCAIcEEACZBAAAnAQEAKIEAgCmBAEAqQQHALIEAAC0BAUAvAQBAL8EAADBBAEAxAQDAMkEAwDOBAIA0gQDANgEAADbBAAA4wQAAOgEAADrBAEA8AQBAPMEAAD2BAAAAAUBAAoFAgAQBQYAGQUCAB4FAQAhBQAAIwUBACkFAQAsBQEAMwUBADkFAAA8BQAAPwUAAEEFAABDBQAARQUAAEoFBABRBQEAVAUHAF0FAQBgBQAAZAUAAGYFAwBrBQEAbgUFAHoFFgCSBQEAlgUEAJwFAwCjBQcArgURAMIFDADQBQAA0gUDAOIFCQD4BQ0ACAYCAAwGBQAUBgAAFgYOACgGAAAqBgAALwYBADIGAAA0BgMAOQYAADsGAAA+BgAAQQYAAEMGAQBGBgAASAYCAEwGDABaBgAAXAYBAF8GAABhBgEAZAYAAGYGAQBpBgAAawYBAG4GAwB1BgAAeQYBAH0GAACABgAAggYAAIQGAwCJBgAAjAYIAJYGAgCbBgQAoQYBAKUGAACnBgAArAYCALAGAQCzBgAAtQYBALgGAAC6BgEAvQYAAL8GAQDCBgAAxAYBAMcGAADJBgAAzAY8AA8HBAAWBwkAIQcEACcHAwAsBwQAMgcAADQHXwCVB20ABAh/AIUIAACICEgA2QgEAN8IAADhCAEA5AgAAOYIAADoCAAA/QgAAP8IAAABCRcAHQkjAEMJBgBMCR4AcQlBALUJAADZCQsA5wkAAOkJAgDtCQEA8AkAAPUJBwD+CQAAAQoCAAYKAwALCgAADQodACwKCgA4Cg0ARwoeAGcKBwBwChsAjQoWAKUKDQC4CgAAugoAAL8KHQDfCgQA5QpRADgLLQBnC0wAtQsEALsLAQC+CwIAwgsEAMgLJAD0CwIA+AsJAAYMBAAMDBcAJgwBACkMBAAvDA0APgwFAEUMAABHDBcAYAwBAGYMAgBrDAEAbwwJAHoMBACADAEAhQwAAIcMAgCLDAoAlwwAAJkMBQCgDAAAogwBAKgMBACuDAQAtAwQAMYMCgDTDAMA2QwFAOAMJQAHDQUADg0JABsNAAAeDQsALA0DADENAgA5DRUAUQ0TAG4NAQByDQIAdg0AAHgNAAB9DQMAjw0AAJYNAACZDQEAoQ0MALQNAQC7DQAAvQ0BAMINAgDGDQAAzA0BAM8NAADXDQIA3w0AAOINAADpDQAA8g0BAPUNAQD6DQUABw4EAA8OBgAYDgoAJA4AACkOBAA2DgAAOA4GAEoOAQBODgEAUQ4QAGQOGgCBDgwAjw4AAJIOBgCcDgkAqA4DAK0OCwC7Dg0Ayw4JANYOEgDrDgAA7g4CAPIOEwAHDw4AFw8CABsPCgAnDwEAKg8DAC8PAwA0DwkAPw8HAEgPAQBLDxwAaQ8oAJMPBgCfDwIAow8AAKYPAgCrDwAAsA8HAMAPDQDPDwEA1g8DANsPAQDfDwIA5A8AAOYPIAAKEAwAGRAFACAQBwApEBYAQhAOAFIQDwBjEAAAZhADAG0QBgB3EA4AiBABAIsQEQCfEAQApxAFAK8QCQC6EAIAvxAHAMgQDQDXEAMA3BAXAPUQDQAEEQEABxEWACAREwA1EQAANxEGAEARHwBiEQMAZxEgAIkRBwCSEQEAlhEAAJsRJADDEQMAyBEJANQRAQDXETIADBIEABISAgAWEgAAGhIAACgSAAAzEgAANhIHAEQSAABHEgMATxIAAFESBgBaEhEAehIAAH4SAwCDEgMAiBIAAIoSAQCkEgMAqxIEALISAAC1EgcAvxIAAMESAQDGEjEAABMCAAQTDQATEwAAFRMNACcTDQA3EwYAPxMAAEETHQBgEwAAYhMLAG8TAABxEwEAehMTAI8TCQCbExcAtBMAALYTAgC6EwAAvBMAAL4TBQDFEwQAyxMFANUTBADfEwAA5RMCAO0TBQD0EwsAAxQDAAgUAAAMFAIAEBQDABYUEgAtFAIAMRQBADQUAAA3FAIARBQDAEwUAABPFAEAUhQgAHYUAAB4FAEAgBQAAIIUAACEFAEAhxQAAI0UAQCQFAMAmBQEAKUUAwCqFAAArBQAALEUAgC1FAAAuxQAAMMUAwDJFAAAzRQSAOEUEAD0FAEA9xQBAPoUAQD+FAEABBUCAAkVAAALFQAADxUCABYVAQAZFQAAGxUBAB4VAAAkFQAAJhUDADYVAQA5FQ8AShUFAFcVAABcFQMAYRUAAGQVCwBxFQAAcxUAAHUVBAB7FRoAmRUCAJ4VDwCvFQEAshUEALkVAwC/FQgAyhUAAM4VAQDSFQEA2RUAANwVEwDxFQIA+BUOAAgWBAAQFgsAHRYHACkWAAAsFgAALxYBADIWAgA2FgMAOxYJAE0WBABVFgAAVxYDAF0WAQBgFgEAZBYCAGkWAABuFgIAcxYEAHkWCQCEFgQAihYEAA=="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[926,"polars_io::file_cache"],[947,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1306,"polars_io::ndjson"],[1308,"polars_io::ndjson::core"],[1412,"polars_io::parquet"],[1415,"polars_io::parquet::metadata"],[1468,"polars_io::parquet::read"],[1611,"polars_io::parquet::read::_internal"],[1632,"polars_io::parquet::write"],[1856,"polars_io::partition"],[1857,"polars_io::path_utils"],[1864,"polars_io::pl_async"],[1886,"polars_io::predicates"],[1954,"polars_io::prelude"],[1965,"polars_io::utils"],[1976,"polars_io::utils::byte_source"],[2057,"polars_io::utils::compression"],[2075,"polars_io::utils::slice"],[2094,"dyn_clone::sealed"],[2095,"polars_io::options"],[2096,"core::result"],[2097,"serde::de"],[2098,"polars_io::shared"],[2099,"polars_core::frame"],[2100,"polars_error"],[2101,"core::fmt"],[2102,"core::hash"],[2103,"std::io"],[2104,"polars_arrow::record_batch"],[2105,"core::option"],[2106,"serde::ser"],[2107,"core::any"],[2108,"polars_io::avro::read"],[2109,"polars_arrow::datatypes::schema"],[2110,"polars_io::avro::write"],[2111,"polars_core::schema"],[2112,"alloc::string"],[2113,"alloc::vec"],[2114,"polars_io::cloud::glob"],[2115,"object_store"],[2116,"alloc::sync"],[2117,"polars_io::cloud::polars_object_store"],[2118,"object_store::path"],[2119,"tokio::io::async_write"],[2120,"core::marker"],[2121,"polars_io::cloud::adaptors"],[2122,"std::io::error"],[2123,"crossterm::command"],[2124,"url"],[2125,"bytes::bytes"],[2126,"core::ops::range"],[2127,"core::ops::function"],[2128,"parquet_format_safe::thrift::varint::decode"],[2129,"object_store::aws::builder"],[2130,"object_store::azure::builder"],[2131,"object_store::gcp::builder"],[2132,"core::convert"],[2133,"core::iter::traits::collect"],[2134,"polars_io::csv::read::reader"],[2135,"alloc::boxed"],[2136,"polars_io::csv::read::read_impl::batched"],[2137,"polars_io::csv::read::options"],[2138,"std::path"],[2139,"polars_utils::pl_str"],[2140,"std::fs"],[2141,"polars_core::datatypes::dtype"],[2142,"polars_core::series"],[2143,"polars_utils::aliases"],[2144,"polars_io::csv::write::writer"],[2145,"polars_io::csv::write::options"],[2146,"core::num::nonzero"],[2147,"polars_io::file_cache::entry"],[2148,"polars_io::ipc::ipc_stream"],[2149,"polars_io::ipc::write"],[2150,"futures_io::if_std"],[2151,"polars_io::ipc::ipc_file"],[2152,"polars_io::ipc::ipc_reader_async"],[2153,"polars_arrow::io::ipc::read::file"],[2154,"polars_utils::mmap::private"],[2155,"polars_arrow::array::struct_"],[2156,"polars_arrow::array"],[2157,"polars_arrow::datatypes"],[2158,"polars_arrow::datatypes::field"],[2159,"polars_arrow::array::growable::structure"],[2160,"polars_arrow::array::struct_::mutable"],[2161,"polars_arrow::bitmap::immutable"],[2162,"polars_arrow::scalar"],[2163,"polars_arrow::array::struct_::iterator"],[2164,"polars_arrow::bitmap::utils::iterator"],[2165,"polars_arrow::bitmap::utils::zip_validity"],[2166,"polars_parquet::parquet::metadata::file_metadata"],[2167,"polars_parquet::parquet::metadata::column_order"],[2168,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2169,"core::iter::traits::exact_size"],[2170,"polars_parquet::arrow::read::statistics"],[2171,"parquet_format_safe::parquet_format"],[2172,"polars_parquet::parquet::metadata::schema_descriptor"],[2173,"polars_parquet::parquet::error"],[2174,"polars_io::parquet::read::reader"],[2175,"polars_io::parquet::read::read_impl"],[2176,"polars_io::parquet::read::options"],[2177,"polars_parquet::parquet::metadata::row_metadata"],[2178,"polars_parquet::arrow::read::deserialize::utils::filter"],[2179,"polars_io::parquet::write::writer"],[2180,"polars_io::parquet::write::batched_writer"],[2181,"polars_io::parquet::write::options"],[2182,"polars_parquet::arrow::write"],[2183,"polars_parquet::parquet::write"],[2184,"core::iter::traits::iterator"],[2185,"polars_parquet::arrow::write::file"],[2186,"std::sync::mutex"],[2187,"core::future::future"],[2188,"tokio::runtime::task::join"],[2189,"polars_core::datatypes::field"],[2190,"avro_schema::file"],[2191,"polars_io::cloud::object_store_setup"],[2192,"polars_io::csv::read::parser"],[2193,"polars_io::file_cache::cache"],[2194,"polars_io::file_cache::utils"],[2195,"polars_io::parquet::read::utils"],[2196,"polars_io::parquet::read::predicates"],[2197,"polars_io::parquet::read::mmap"],[2198,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jj`0`00`0000000000000`00AGdAGfAGh32103210321032103321032103`210332103210321032103AGj00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd213402134343434402134021343402134343334442103402134121340213402134003`020213210213422213402134021340213421302134212212121212121AC`00`00`0000000`0`0000`ACl`0`00````0`00`ACj1ACnAD`ADbADdACfACh16754320167543267543267543267543266672016754320167543267543220167543220675432666777555444333222016754320167543220675432016754320167543222622126675432166754326016754320167543254301675432016754321111060``````````AEd0000000`00AEh1111`11`````AEnAF``Hf21212121211212121212022121222221212102121121AEl233332323232322```AfAl10111`````````````AFh``0`AFf0`0AFlAFj321032222310321032103221033332AFn21402140214214321433321432143214342143AG``00000000000`0000AGb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}K`Hh}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{cOb{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OnOb}{A@`Ob}2{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{Ob{Bl{A@b}}}Ob}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAhAAb}1{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}{{{b{h{ABb{c}}}}ABl}fHh}1{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000064`{{}c{}}0000{{{ABb{c}}{b{Cf}}{Bl{{b{Cf}}}}}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{Cf}}{Bl{{b{Cf}}}}}{{Aj{ABf}}}}{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{A@b}}}ABn}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}n}{{}AC`}{{}c{}}{{{Bl{{b{Hf}}}}{b{ACb}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AC`}}ABn{b{Of}}}Ad}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{ACd}}}{{Aj{{Hj{Od}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{ACf{c}}{b{D`}}}{{Aj{{ACh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACj}{{}ACl}{{}ADd}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}{c{{A`{ADb}}}Ab}{c{{A`{ADd}}}Ab}`{nf}00000009{{{b{{ACh{c}}}}{b{Ah}}}{{`{{ADh{}{{H`{{Aj{{ADf{A@l}}}}}}}}}}}Bf}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADd}}{b{ADd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACh{c}}}}}{{Aj{Kn}}}Bf}{{{ACf{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}B`}{{{b{ADb}}{b{hAn}}}B`}{{{b{ADd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ADd}{{{b{{ACh{c}}}}}{{b{{ADl{{ADj{c}}}}}}}Bf}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{{b{ADb}}{b{hc}}}fBb}{{{b{ADd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{ADd}}}Ad}0```{c{{ACf{c}}}{BfBf}}``{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{b{ADb}}c}A`Bn}{{{b{ADd}}c}A`Bn}{{{ACf{c}}Ad}{{ACf{c}}}Bf}`{bc{}}00000{{{b{ACj}}c}{{ACf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACn}}}}{ADn{{Aj{AD`}}}}{AE`{{Aj{ADb}}}}{bC`}0000000{{}c{}}0000000{{{ACf{c}}ACl}{{ACf{c}}}Bf}{{{ACf{c}}{Bl{n}}}{{ACf{c}}}Bf}0{{{ACf{c}}ADd}{{ACf{c}}}Bf}{{{b{h{ACh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACj}}Ahc}{{Aj{f}}}Bf}{{{b{{ACh{c}}}}{Dd{{ADf{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjAEb}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AEd}}c}{}AEf}{{{b{AEd}}c}{}{AEfLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEd}}}}{{}n}{{}c{}}{{{b{AEh}}}Kn}{{{b{AEd}}c}AEj{AEfLj}}{{{b{AEd}}e}{{AEj{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADne}{}AEf{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEl}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{b{{Fh{AEn}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{nf}0{{{b{AEn}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEn}}}{{b{J`}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{cc{}}0{JlAEn}{AFbAEn}{{{b{AEn}}}{{Bl{{b{Jl}}}}}}00{{{b{AF`}}{b{Df}}}{{Aj{{b{AEn}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AFb{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEn}{{Hl{Dd{AEn}}{Bl{n}}}AF`}{{{b{AEn}}}{{Bl{n}}}}{{{b{AF`}}}{{Bl{n}}}}{{{b{AF`}}}{{b{Hl}}}}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AEl}}{b{AF`}}}{{Aj{Ad}}}}{{{b{hAF`}}{b{{Fh{n}}}}}f}=={{{b{AEn}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAF`}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAFd}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}{bf}{{}AFh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFf}}{b{hAn}}}B`}{cc{}}0{AFjAFh}1{AFlAFh}{NnAFh}3{{{b{AFn}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFl}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFn}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFn}}}{{Aj{n}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AG`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AGb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AGb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"COn","p":[[1,"reference"],[5,"Private",2094],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2095],[5,"HiveOptions",0,2095],[1,"usize"],[6,"Result",2096],[10,"Deserializer",2097],[1,"bool"],[10,"SerReader",1954,2098],[5,"DataFrame",2099],[8,"PolarsResult",2100],[10,"SerWriter",1954,2098],[5,"Formatter",2101],[8,"Result",2101],[10,"Hasher",2102],[10,"Read",2103],[10,"Write",2103],[10,"ArrowReader",0,2098],[8,"RecordBatch",2104],[6,"Option",2105],[10,"Serializer",2106],[5,"TypeId",2107],[10,"WriteDataFrameToFile",0,2098],[5,"AvroReader",86,2108],[8,"ArrowSchema",2109],[10,"Seek",2103],[6,"AvroCompression",86],[5,"AvroWriter",86,2110],[5,"Error",2101],[8,"Schema",2111],[5,"String",2112],[5,"Vec",2113],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2114],[10,"ObjectStore",2115],[5,"Arc",2116],[1,"tuple"],[5,"PolarsObjectStore",153,2117],[5,"Path",2118],[10,"AsyncWrite",2119],[10,"Unpin",2120],[5,"CloudWriter",153,2121],[5,"Error",2122],[10,"Command",2123],[8,"Result",2122],[5,"Url",2124],[5,"Bytes",2125],[5,"Range",2126],[1,"slice"],[5,"ObjectMeta",2115],[17,"Output"],[10,"FnOnce",2127],[1,"u8"],[10,"VarInt",2128],[6,"AmazonS3ConfigKey",227,2129],[6,"AzureConfigKey",227,2130],[6,"GoogleConfigKey",227,2131],[6,"CloudType",227],[10,"AsRef",2132],[10,"Into",2132],[17,"Item"],[10,"IntoIterator",2133],[5,"CsvReader",416,2134],[10,"PhysicalIoExpr",1886],[10,"MmapBytesReader",1284],[5,"Box",2135],[8,"SchemaRef",2111],[5,"OwnedBatchedCsvReader",416,2136],[5,"BatchedCsvReader",416,2136],[5,"CsvReadOptions",416,2137],[5,"CsvParseOptions",416,2137],[6,"CsvEncoding",416,2137],[6,"CommentPrefix",416,2137],[6,"NullValues",416,2137],[5,"Path",2138],[10,"Fn",2127],[5,"PlSmallStr",2139],[5,"PathBuf",2138],[5,"File",2140],[5,"SchemaInferenceResult",754],[6,"DataType",2141],[6,"Buffer",677],[5,"Series",2142],[8,"PlHashSet",2143],[6,"ReaderBytes",1284],[5,"CsvWriter",781,2144],[5,"BatchedWriter",781,2144],[5,"CsvWriterOptions",781,2145],[5,"SerializeOptions",781,2145],[6,"QuoteStyle",781,2145],[8,"NonZeroUsize",2146],[1,"u64"],[5,"FileCacheEntry",926,2147],[5,"IpcStreamReader",947,2148],[5,"IpcWriter",947,2149],[5,"BatchedWriter",947,2149],[10,"AsyncWrite",2150],[10,"Send",2120],[5,"IpcScanOptions",947,2151],[5,"IpcReadOptions",947,2152],[5,"IpcWriterOptions",947,2149],[6,"IpcCompression",947,2149],[5,"IpcReaderAsync",947,2152],[5,"FileMetadata",2153],[1,"i64"],[5,"IpcStreamWriterOption",947,2148],[5,"IpcReader",947,2151],[5,"IpcStreamWriter",947,2148],[8,"ArrowSchemaRef",2109],[5,"CompatLevel",2141],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2154],[10,"BufRead",2103],[5,"StructArray",1308,2155],[10,"Array",2156],[6,"ArrowDataType",2157],[10,"Any",2107],[5,"JsonLineReader",1308],[5,"Field",2158],[5,"GrowableStruct",2159],[5,"MutableStructArray",2160],[5,"Bitmap",2161],[10,"Scalar",2162],[5,"StructValueIter",2163],[5,"BitmapIter",2164],[6,"ZipValidity",2165],[6,"PolarsError",2100],[5,"FileMetadata",1415,2166],[6,"ColumnOrder",2167],[5,"ParquetStatistics",1415],[5,"ColumnChunkMetadata",2168],[10,"ExactSizeIterator",2169],[5,"MutableStatistics",2170],[5,"KeyValue",2171],[5,"SchemaDescriptor",2172],[5,"FileMetaData",2171],[6,"ParquetError",2173],[5,"ParquetReader",1468,2174],[5,"BatchedParquetReader",1468,2175],[5,"ParquetAsyncReader",1468,2174],[5,"ParquetOptions",1468,2176],[6,"ParallelStrategy",1468,2176],[8,"FileMetadataRef",1415],[1,"f64"],[6,"PrefilterMaskSetting",1611,2175],[5,"RowGroupMetadata",2177],[6,"Filter",2178],[5,"ParquetWriter",1632,2179],[5,"BatchedWriter",1632,2180],[5,"ParquetWriteOptions",1632,2181],[6,"ParquetCompression",1632,2181],[5,"GzipLevel",1632,2181],[5,"BrotliLevel",1632,2181],[5,"ZstdLevel",1632,2181],[5,"StatisticsOptions",1632,2182],[8,"RowGroupIterColumns",1632,2183],[10,"Iterator",2184],[5,"FileWriter",2185],[5,"Mutex",2186],[1,"u32"],[1,"i32"],[10,"Sync",2120],[5,"RuntimeManager",1864],[10,"Future",2187],[10,"GetSize",1864],[5,"JoinHandle",2188],[10,"StatsEvaluator",1886],[5,"ColumnStats",1886],[5,"BatchStats",1886],[5,"Field",2189],[10,"Sized",2120],[6,"DynByteSourceBuilder",1976],[6,"DynByteSource",1976],[5,"ObjectStoreByteSource",1976],[5,"MemSliceByteSource",1976],[10,"ByteSource",1976],[6,"SupportedCompression",2057],[6,"SplitSlicePosition",2075],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,2098],[1,2095],[2,2095],[3,2098],[4,2098],[5,2098],[87,2108],[88,2110],[89,2190],[153,2114],[154,2121],[155,2117],[156,2117],[165,2191],[194,2114],[206,2191],[230,2129],[235,2130],[259,2131],[418,2136],[419,2137],[420,2137],[421,2137],[422,2137],[423,2134],[427,2137],[428,2136],[474,2192],[475,2192],[556,754],[782,2144],[783,2144],[784,2145],[788,2145],[789,2145],[926,2193],[927,2194],[928,2147],[935,2193],[937,2194],[947,2149],[948,2149],[949,2152],[950,2151],[951,2152],[952,2151],[953,2148],[954,2148],[955,2148],[956,2149],[957,2149],[1309,2155],[1415,2166],[1433,2170],[1469,2175],[1472,2176],[1473,2174],[1474,2176],[1475,2174],[1553,2195],[1614,2175],[1617,2175],[1625,2196],[1627,2197],[1632,2180],[1634,2181],[1636,2181],[1639,2181],[1640,2181],[1641,2179],[1642,2183],[1644,2182],[1647,2181],[1954,2098],[1955,2098],[1956,0],[1964,1856],[1965,2198],[1966,2198],[1967,2198],[1968,2198],[1972,2198],[1973,2198],[1974,2198]],"b":[[1313,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1314,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1315,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1336,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1337,"impl-PartialEq-for-StructArray"],[1342,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1343,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1364,"impl-StructArray"],[1365,"impl-Array-for-StructArray"],[1368,"impl-StructArray"],[1369,"impl-Array-for-StructArray"],[1381,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1382,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1383,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1392,"impl-Array-for-StructArray"],[1393,"impl-StructArray"],[1409,"impl-StructArray"],[1410,"impl-Array-for-StructArray"],[2013,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2015,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2016,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8GugAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMXADEDIQBUAwAAVgMCAF4DAgBiAwAAZAMFAHADAgB3AwMAfAMWAJ8DBwCoAwIArAMBALADBAC2AwAAuQMAALwDAAC+AwAAwQMDAMYDIwDrAzYAIwQDADIEDgBOBAYAVwQ1AI8EAQCVBAEAmQQAAJwEAACfBAEAogQBAKkEJADPBAAA1QQAANcEBADjBBkA/wQBAAUFAQAIBQcAEQUBABQFCQAfBQEAIgUJAC0FDQA8BQEAPwUBAEMFAABFBQIASwUAAE0FAABWBQIAWgUAAF0FAQBgBQ0AbwUCAHUFAQB5BQgAgwUBAIkFAACLBQcAlgUDAJwFBACiBQAApAUBALIFAgC2BQMAuwUBAL4FAADBBQAAwwUAAMcFMwAABgkADwYAABEGAgAVBgAAFwYBABoGAQAdBgIAIQYTADcGBQA+BgAAQAYFAEcGAABJBgEATAYJAFcGAQBaBggAZAYAAGYGAQBpBgAAawYBAG4GAQBxBigAnAY7ANoGBQDoBg8AAAcBAAMHAQAGBwAACAcFABAHKQA/BwEAQgcAAEkHAgBNBwQAUwcBAFYHAABYBwYAYQcEAGcHCQByBwcAfAcCAIcHAQCRBwMAmAcNAKcHAACpBwAArQcNALwHAQC/BwAAwQcaAN4HAADgBwEA5AcOAPcHEwAMCAMAEQgCABUIAAAYCA0AJwgAACoIBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1621,"polars_lazy::dsl::AggExpr"],[1628,"polars_lazy::dsl::BooleanFunction"],[1631,"polars_lazy::dsl::Expr"],[1666,"polars_lazy::dsl::FunctionExpr"],[1711,"polars_lazy::dsl::StringFunction"],[1731,"polars_lazy::dsl::TemporalFunction"],[1733,"polars_lazy::dsl::binary"],[1754,"polars_lazy::dsl::cat"],[1755,"polars_lazy::dsl::dt"],[1811,"polars_lazy::dsl::function_expr"],[2028,"polars_lazy::dsl::function_expr::BooleanFunction"],[2031,"polars_lazy::dsl::function_expr::FunctionExpr"],[2076,"polars_lazy::dsl::function_expr::StringFunction"],[2096,"polars_lazy::dsl::function_expr::TemporalFunction"],[2098,"polars_lazy::dsl::function_expr::cat"],[2100,"polars_lazy::dsl::function_expr::pow"],[2104,"polars_lazy::dsl::function_expr::rolling"],[2138,"polars_lazy::dsl::function_expr::rolling_by"],[2171,"polars_lazy::dsl::function_expr::trigonometry"],[2215,"polars_lazy::dsl::functions"],[2290,"polars_lazy::dsl::python_udf"],[2352,"polars_lazy::dsl::string"],[2413,"polars_lazy::dsl::udf"],[2419,"polars_lazy::frame"],[2905,"polars_lazy::frame::pivot"],[2907,"polars_lazy::prelude"],[3530,"polars_lazy::prelude::DslPlan"],[3582,"polars_lazy::prelude::LiteralValue"],[3585,"dyn_clone::sealed"],[3586,"polars_plan::dsl::meta"],[3587,"polars_plan::dsl::expr"],[3588,"polars_plan::dsl::struct_"],[3589,"polars_utils::pl_str"],[3590,"alloc::sync"],[3591,"polars_error"],[3592,"core::result"],[3593,"polars_plan::dsl::selector"],[3594,"core::convert"],[3595,"polars_plan::dsl::array"],[3596,"polars_plan::dsl::list"],[3597,"polars_plan::dsl::expr_dyn_fn"],[3598,"polars_core::frame::column"],[3599,"core::option"],[3600,"core::ops::function"],[3601,"core::marker"],[3602,"polars_plan::plans::visitor"],[3603,"polars_plan::dsl::function_expr"],[3604,"polars_core::datatypes::dtype"],[3605,"polars_core::chunked_array::ops::sort::options"],[3606,"polars_plan::dsl::function_expr::schema"],[3607,"polars_core::datatypes::field"],[3608,"core::any"],[3609,"alloc::vec"],[3610,"polars_plan::dsl::binary"],[3611,"core::clone"],[3612,"polars_plan::dsl::udf"],[3613,"polars_core::chunked_array::cast"],[3614,"polars_plan::dsl::cat"],[3615,"polars_plan::dsl::arity"],[3616,"polars_plan::dsl::function_expr::boolean"],[3617,"polars_plan::dsl::function_expr::cat"],[3618,"polars_plan::dsl::function_expr::datetime"],[3619,"polars_plan::dsl::function_expr::pow"],[3620,"polars_plan::dsl::function_expr::strings"],[3621,"polars_plan::dsl::function_expr::struct_"],[3622,"polars_plan::dsl::functions::temporal"],[3623,"polars_plan::dsl::options"],[3624,"core::iter::traits::collect"],[3625,"polars_lazy::dsl::eval"],[3626,"polars_core::utils"],[3627,"polars_time::windows::duration"],[3628,"polars_time::windows::group_by"],[3629,"polars_core::datatypes::time_unit"],[3630,"serde::de"],[3631,"polars_plan::plans"],[3632,"polars_core::series"],[3633,"polars_core::series::ops"],[3634,"polars_plan::dsl::dt"],[3635,"polars_lazy::dsl::list"],[3636,"polars_arrow::legacy::kernels::ewm"],[3637,"polars_core::chunked_array::ops"],[3638,"core::fmt"],[3639,"polars_plan::plans::apply"],[3640,"polars_ops::frame::join::iejoin"],[3641,"polars_plan::dsl::function_expr::array"],[3642,"polars_plan::dsl::function_expr::range"],[3643,"polars_plan::dsl::function_expr::list"],[3644,"polars_plan::dsl::function_expr::business"],[3645,"polars_plan::dsl::function_expr::binary"],[3646,"alloc::string"],[3647,"polars_plan::plans::options"],[3648,"polars_schema::schema"],[3649,"core::hash"],[3650,"polars_ops::series::ops::interpolation::interpolate"],[3651,"polars_ops::series::ops::is_between"],[3652,"polars_plan::dsl::name"],[3653,"polars_plan::plans::lit"],[3654,"polars_core::utils::supertype"],[3655,"polars_plan::dsl::python_udf"],[3656,"polars_utils::idx_vec"],[3657,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3658,"polars_ops::series::ops::rank"],[3659,"polars_time::group_by::dynamic"],[3660,"polars_core::chunked_array::ops::rolling_window"],[3661,"polars_core::datatypes"],[3662,"polars_core::chunked_array"],[3663,"polars_time::chunkedarray::rolling_window"],[3664,"polars_core::chunked_array::ops::search_sorted"],[3665,"serde::ser"],[3666,"polars_core::series::series_trait"],[3667,"polars_plan::dsl::string"],[3668,"polars_ops::chunked_array::list::to_struct"],[3669,"compact_str"],[3670,"polars_ops::series::ops::business"],[3671,"polars_arrow::legacy::kernels::time"],[3672,"polars_plan::dsl::function_expr::rolling"],[3673,"polars_plan::dsl::function_expr::rolling_by"],[3674,"polars_plan::dsl::function_expr::trigonometry"],[3675,"polars_core::frame"],[3676,"rayon::iter"],[3677,"pyo3::types::any"],[3678,"pyo3::instance"],[3679,"polars_utils::arena"],[3680,"polars_plan::plans::ir"],[3681,"polars_plan::plans::aexpr"],[3682,"polars_plan::frame::opt_state"],[3683,"polars_plan::plans::anonymous_scan"],[3684,"polars_lazy::scan::anonymous_scan"],[3685,"polars_core::schema"],[3686,"polars_utils::index"],[3687,"polars_lazy::frame::exitable"],[3688,"polars_utils::aliases"],[3689,"polars_lazy::scan::csv"],[3690,"polars_lazy::scan::ipc"],[3691,"polars_lazy::scan::ndjson"],[3692,"polars_lazy::scan::parquet"],[3693,"polars_lazy::scan::file_list_reader"],[3694,"polars_io::cloud::options"],[3695,"polars_ops::frame::join::args"],[3696,"bitflags::iter"],[3697,"std::path"],[3698,"polars_plan::plans::ir::scan_sources"],[3699,"polars_io::options"],[3700,"polars_io::csv::write::options"],[3701,"polars_io::ipc::write"],[3702,"polars_io::json"],[3703,"polars_io::parquet::write::options"],[3704,"core::num::nonzero"],[3705,"polars_io::csv::read::options"],[3706,"chrono_tz::timezones"],[3707,"core::cmp"],[3708,"polars_core::frame::group_by::proxy"],[3709,"polars_core::datatypes::any_value"],[3710,"std::io"],[3711,"polars_io::parquet::write::writer"],[3712,"chrono::naive::datetime"],[3713,"polars_plan::dsl::functions::selectors"],[3714,"polars_plan::dsl::functions::horizontal"],[3715,"polars_plan::dsl::functions::arity"],[3716,"polars_plan::dsl"],[3717,"polars_plan::dsl::functions::range"],[3718,"polars_plan::dsl::functions::index"],[3719,"polars_plan::dsl::functions::coerce"],[3720,"polars_plan::dsl::functions::syntactic_sugar"],[3721,"polars_plan::dsl::functions::business"],[3722,"polars_plan::dsl::functions::concat"],[3723,"polars_plan::dsl::functions::correlation"],[3724,"polars_plan::dsl::functions::repeat"],[3725,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``997`7`192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;667=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nf8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNflFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNflFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00Kb0j000800000l001111`An22Bf33DhFbEnKl77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNflFhFjFlFnDl<<<<<<<<<<<<<<G`Ef0Bf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKl88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNflFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNflFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jN`AnhEf411044444444`4`4114Al3lNf7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nf0`231`BfEf5333`FhFl`GnH`197863Fj3FnDl:G`89GbGdGfGhGjGlCj<;HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNf<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NflFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AJdAJfAJh2102AJjAJlAJnAK`AKbAKd0AKfAKh4AKjAKlAKnAL`3ALb528ALd1ALf11098432323570;5ALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`Ed0000000000000000000``Jn000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJjAJlAJnALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`GdGh0`0AAh000`00000000000000000000000000000AAj000`0000000000000000000000000000AAl00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABhNnABn210212222102102210222222102201102102102210210210102102`A@j00000000000000000000000000000000000000000000000000000000000`F`0000`ACl000000````````0`000000```0ADhABbACjADbADlADnAE`AEb86658ACn77699999999087654321908765432197731877876543219876543219876543219AEd053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AFd99299843999999916475372646464;9293`9916453;992916475399999997;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;246649999999696666666464646616644969119966164919664464646966916496699`````AEl0AHjAHl0Jh3`011120``1`00111300030311111`0````3``AH`0133``20032``12``4`114211122222221`AEjOhInAFb84AGdAGfAGh:OfAGj;AHnABf<888AD`0007;:9AIh9AEl>9AIf98AHj87AHl76JhAEjOhIn8AFb8AH`AGd9AGfAGh:OfAGj;AHnABf<;:98AEl8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AIh:198AIf87AHj76AHl65JhAEjOhIn7AFb9AH`AGd9AGfAGh:OfAGj;AHnABf<3<<;:98AEl8765?43>21=1=<;:AIh:198AIf87AHj76AHl65JhAEjOhInAFb9AH`AGdAGfAGh:OfAGj;AHnABf;;;:::999888AEl00888777666555333222111<<;::AD`:1199876AHj65AHl545?>=AIh==4<;AIf;:398276Jh73AIbAEjOhInAFb;AH`AGdAGfAGh=OfAGj>AHnABf86;6;:;:9?8AEl87?65AHj54AHl43Jh?>=AIh=4<;AIf;:498376225??3=?>AEjNhIn36?>=;6<00040AH`111AFbAD`5Oh8=444608`=AIbAGj33:8264>5AGdAGfAGhAHjOf5AHlAHnABfJh8=2=AEj:>>140<In?AElAH`<;:98=76542105;=22223?2AIhAFb32>AIf>=<;AGj;;:987Oh74365AGd3AGfAGhAHjOf6AHlAHnABfJhInAElAH`AEj=3AIhAFb43>AIf>=<;AGj;:9824Oh84376AGd3AGfAGhAHjOf6AHlAHnABfJhIn0=>=8;BAd0BAfBAhBAjBAlBAnBB`BBbBBd55BBfBBhBBj14;3BBl:BBn49BC`BCb0>BCdBAd240;4BCf;13:624733?=BAh0BAj>BCh00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{{Bf{Jj}}}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJl}j}{{jClJl}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJn}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{Jj}}}}{b{{Bf{Jj}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`K`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{KbjB`}j}0{{jKd}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKf}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Fb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{En}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Kl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{j}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{G`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ef}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{{Bf{c}}}}{b{CdKh}}}{{Af{fKj}}}{}}{{{b{Gb}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gd}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gf}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gh}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Cj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{H`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ah}}{b{CdKh}}}{{Af{fKj}}}}{{{b{F`}}{b{CdKh}}}{{Af{fKj}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Ebj}{Knj}{L`j}{B`j}{Lbj}5{Elj}{Ijj}{{{b{E`}}}j}{Clj}{Idj}{Ldj}{Dlj}{Lfj}=={LhEf}{Gd{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Gf{{Bf{{Ab{Dh}}}}}}{cc{}}{Gb{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Lj{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{Ln{{Bf{{Ab{Dh}}}}}}{M`{{Bf{{Ab{Dh}}}}}}{Mb{{Bf{{Ab{Dh}}}}}}888888{MbCj}{GbCj}{GdCj}{GjCj}<<<<<<{HjHh}===={jAh}>{nAh}{MdAh}{{{b{E`}}}Ah}{cc{}}{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Mf}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{{Mh{Cn}}}}Mj{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kl}}{b{{Mh{Cn}}}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMl}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fMl}{{{b{G`}}{b{Cdc}}}fMl}{{{b{Ef}}{b{Cdc}}}fMl}{{{b{Gb}}{b{Cdc}}}fMl}{{{b{Gd}}{b{Cdc}}}fMl}{{{b{Gf}}{b{Cdc}}}fMl}{{{b{Gh}}{b{Cdc}}}fMl}{{{b{Gj}}{b{Cdc}}}fMl}{{{b{Gl}}{b{Cdc}}}fMl}{{{b{Cj}}{b{Cdc}}}fMl}{{{b{Hb}}{b{Cdc}}}fMl}{{{b{Hd}}{b{Cdc}}}fMl}{{{b{Hf}}{b{Cdc}}}fMl}{{{b{Hh}}{b{Cdc}}}fMl}{{{b{Hj}}{b{Cdc}}}fMl}{{{b{Hl}}{b{Cdc}}}fMl}{{{b{Hn}}{b{Cdc}}}fMl}{{{b{Ah}}{b{Cdc}}}fMl}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMn}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{N`An}{AnAn}{h{{Af{{`{Nb}}Ad}}}}{{{b{Ef}}}B`}{{jccNd}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Nfj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNh}{{jIj}j}:;;:;;{{Nfc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nf{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nl}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNnB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNf}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{O`{{b{j}}}}}}}f}{{j{b{Cd{O`{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ob{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nf{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jOd}j}{{jjOd}j}9{{jOf{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}Hl}j}`{Alj}{Anj}{jj}00{{jOh}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Oj}j}{{jIhc}j{{Ch{{b{Cd{On{Ol}}}}}{{Bj{{Bl{Ij}}}}}}C`CbA@`}}{{jOj}j}{{jjA@b}j}101010{{jOdIjOj}j}{{jjOdIjA@b}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLb}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@d}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@f}{{{b{j}}c}AfA@f}{{{b{G`}}c}AfA@f}{{{b{Ef}}c}AfA@f}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@f}{{{b{{Bf{Jj}}}}c}AfA@f}{{{b{{Bf{{Ab{En}}}}}}c}AfA@f}{{{b{Gb}}c}AfA@f}{{{b{Gd}}c}AfA@f}{{{b{Gf}}c}AfA@f}{{{b{Gh}}c}AfA@f}{{{b{Gj}}c}AfA@f}{{{b{Gl}}c}AfA@f}{{{b{Cj}}c}AfA@f}{{{b{Hb}}c}AfA@f}{{{b{Hd}}c}AfA@f}{{{b{Hf}}c}AfA@f}{{{b{Hh}}c}AfA@f}{{{b{Hj}}c}AfA@f}{{{b{Hl}}c}AfA@f}{{{b{Hn}}c}AfA@f}{{{b{Ah}}c}AfA@f}{{Anc}j{{Aj{j}}}}0{{jA@h}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@j}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nf{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{Ih}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{{Mh{Cn}}}}Mj}{{Af{DfAd}}}}={Nfj}{bc{}}00000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMd}00000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnA@l{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@nAA`}}}}00000000{bAAb}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}3``{{Jnj{Ej{B`}}{Dn{El}}AAd}j}{Jnj}=<{{JnJb}j}1{{JnjJb}j}{{Jnn}j}333=<;3:3983333333333{{Jnj}j}44{{Jn{Bl{n}}jAAf}j}15{{Jn{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{{b{AAh}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAj}}}AAj}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAj}}}Jf}{Ihf}{{{b{AAj}}{b{AAj}}}B`}{{{b{AAj}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAj}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAj}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAl}}}AAl}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAl}}}Jf}{Ihf}{{{b{AAl}}{b{AAl}}}B`}{{b{b{c}}}B`{}}00{{{b{AAl}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAl}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAl}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AB`{{Dn{AAn}}}}}{{ABd{}{{I`{ABb}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABf}{{AB`{ABb}}}{{Bb{{A`{ABb}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jOd}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nn}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABh}}AAn}{{Af{AAnAd}}}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABh}}}Jf}{Ihf}00{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdKh}}}{{Af{fKj}}}}{cc{}}0{{{ABl{ABj}}}ABh}1{{{b{ABn}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nn}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABl{ABj}}{Bl{Cn}}B`B`}Nn}{{{Bl{Cn}}}ABn}{{{b{ABh}}c}AfA@f}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bAAb}00999`{{A@jB`}j}{A@jj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@jjB`}j}{{A@jj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@jjIh}j}4{{A@j{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@j{b{E`}}B`}j}{{A@j{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@jIhAC`}j}0{{A@jjjB`}j}0{{A@jjjB`Cl}j}{A@jj}{{A@jjj}j}?;;?;??????{{A@jCnHdj}j}{{A@jj}j}{{A@jHd}j}{{A@j{Bl{Jb}}{Bl{n}}Hdj}j}{{A@jIh}j}{{A@jjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABbc}{{AB`{AAn}}}{{Bn{ACb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{Bj{{AB`{f}}}}}}}}{{ABbB`}ABb}{{ACjc}ABb{{Bb{{A`{j}}}}}}{{}ACl}{{ACnB`}ACn}{{{Ab{AD`}}ADb}{{AB`{ABb}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{ACjcADd}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{AClACl}ACl}{{{b{CdACl}}ACl}f}10{{{b{ACl}}}Lb}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{ABbABb}``{{{b{ADh}}}f}{{ABb{ADj{{b{E`}}Cn}}B`}ABb}{{ABbCnB`}ABb}{{{b{ADh}}}ADh}{{{b{ABb}}}ABb}{{{b{ACj}}}ACj}{{{b{ADb}}}ADb}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{ACl}}}ACl}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AEd}}}{{Bl{{b{AEf}}}}}}0{{{b{ADl}}}{{Bl{{b{AEf}}}}}}{{{b{AE`}}}{{Bl{{b{AEf}}}}}}``{{ACnAEh}ACn}{ABb{{AB`{AAn}}}}{ABb{{AB`{ADh}}}}{{{b{CdABb}}}{{AB`{ADd}}}}{AClACl}{{{b{AEd}}{Dn{ABb}}}{{AB`{ABb}}}}0{{{b{ADl}}{Dn{ABb}}}{{AB`{ABb}}}}{{{b{ACl}}ACl}B`}{ABbABb}{{ABbABb{Bl{n}}}ABb}{{}ABb}{{}ADb}{{}ADn}{{}AEb}{{}ACl}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{ABb}}}{{AB`{Md}}}}000{{AClACl}ACl}{Ihf}0{{{b{CdADh}}}f}{{ABbe}ABb{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}222222220{{ABb{Bl{{Dn{j}}}}}ABb}8{{{b{ABb}}B`}{{AB`{Md}}}}{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACl}}c}f{{Ib{}{{I`{ACl}}}}}}{{{b{ADh}}}{{Bl{{AB`{AAn}}}}}}{{ABbIh}{{AB`{AAn}}}}{{{b{ADh}}}{{AB`{AAn}}}}{{ABbc}ABb{{Aj{j}}}}0{{ABbj}ABb}{ACnABb}{AEd{{AB`{ABb}}}}0{ADl{{AB`{ABb}}}}{AE`{{AB`{ABb}}}}210{ABbABb}{{{b{ACl}}{b{CdKh}}}{{Af{fKj}}}}0000{{ACnB`}ACn}{cc{}}00{ACjABb}{JhABb}2222222{Lb{{Bl{ACl}}}}{LbACl}00{cACl{{Ib{}{{I`{ACl}}}}}}{{{b{E`}}}{{Bl{ACl}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{{b{ABb}}}ACl}{{{b{AEd}}}B`}0{{{b{ADl}}}B`}`{{ABbe}ACj{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABbjcAEj}ACj{{Bb{{A`{j}}}}}}1{{ACj{Bl{Ih}}}ABb}``{{ACnAEl}ACn}```{{}Ih}0000000008{{{b{CdACl}}ACl}f}{{AClACl}ACl}{{{b{ACl}}ACl}B`}{{}c{}}000000000{ACl}{{{b{ACl}}}B`}0{{{b{ACl}}}{{AEn{ACl}}}}{{{b{ACl}}}{{AF`{ACl}}}}{{ABbABbccAFb}ABb{{Bb{{A`{j}}}}}}{ABbACn}{{ACnB`}ACn}{{ACn{Dn{j}}}ABb}{ABbABb}{AFdABb}1{{ABbABbcc}ABb{{Aj{j}}}}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABbADf}ABb}``{{AE`B`}AE`}`{{ABbcAFf{Bl{{Ab{Kl}}}}{Bl{{b{E`}}}}}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{ABbABhAFf{Bl{ADd}}B`}ABb}777{{ABbABbc}{{AB`{ABb}}}{{Aj{n}}}}8{{{b{AEd}}}{{Bl{Ih}}}}{{{b{ADl}}}{{Bl{Ih}}}}{{{b{AE`}}}{{Bl{Ih}}}}````>{cADl{{Bb{AFh}}}}{cAE`{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}}ADl}{{{Ab{{A`{AFj}}}}}AE`}{AFlADl}{AFlAE`}{AClACl}{ABbABb}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ACb}}}}``{ABb{{AB`{{Ob{AAnAAn}}}}}}{{ABbjOd}ABb}{{{b{AEd}}}B`}{{{b{ADl}}}B`}{{{b{AE`}}}B`}``{{{b{CdACl}}ACl}f}{{ABbei}ABb{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}}98{{ABbjcOh}ACj{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{Bl{{b{AFn}}}}}}{{{b{ADl}}}{{Bl{{b{AFn}}}}}}{{{b{AE`}}}{{Bl{{b{AFn}}}}}}```{{AG`AGbB`}ABb}{{cADn}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}ADn}{{AB`{ABb}}}}{{AFlADn}{{AB`{ABb}}}}{{cAEb}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}AEb}{{AB`{ABb}}}}{{AFlAEb}{{AB`{ABb}}}}`{{}ACl}{{{b{CdABb}}{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ADd}}}}{{ABbc}ABb{{Bb{{A`{j}}}}}}0{{ABbABbcc}ABb{{Aj{j}}}}{{{b{CdACl}}AClB`}f}{{{b{ABb}}{ACf{ACd}}{ACf{ACh}}}f}{{ABbc}ABb{{Aj{j}}}}{{ABbce}ABb{{Aj{j}}}{{Aj{j}}}}{{ABbcAGd}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGf}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGf}{{AB`{f}}}}{{ABbcAGh}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGj}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGj}{{AB`{f}}}}`{{ABbClADf}ABb}{{ABbcDb}ABb{{Il{n}}}}{{ABbcDb}ABb{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{b{AFl}}}}{{{b{ADl}}}{{b{AFl}}}}{{{b{AE`}}}{{b{AFl}}}}{{ABbId}ABb}{{AClACl}ACl}{{{b{CdACl}}ACl}f}{{ACnc}ACn{{Aj{n}}}}{ABbABb}3{{ABbADf}ABb}{{ACj{Bl{Ih}}}ABb}{ABb{{AB`{AGl}}}}0{{{b{ABb}}B`}{{AB`{Md}}}}{bc{}}000000007{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAb}000000000<{{ABb{Bl{{Dn{Md}}}}AGn}ABb}{{ABb{Bl{e}}AGn}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABb{Bl{{Dn{n}}}}AGn}ABb}1{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABbHn}ABb}`{{ACnAH`}ACn}{{ABbId}ABb}{{}c{}}000000000{{ACnABb}ACn}{{AE`{Bl{AHb}}}AE`}{{ADlB`}ADl}{{ADl{Bl{AEf}}}ADl}{{AE`{Bl{AEf}}}AE`}{{ABbB`}ABb}0{{ABbj}ABb}{{ABbc}ABb{{Bb{{A`{j}}}}}}022{{ADl{Bl{n}}}ADl}{{ABbc}ABb{{Bb{{A`{ABb}}}}}}7{{ADl{Bl{ADd}}}ADl}{{ADlAHd}ADl}{{ADlId}ADl}:::{{AE`B`}AE`}5{{AE`{Bl{n}}}AE`}{{ADl{Bl{Ih}}}ADl}>=={{AEdc}AEd{{Aj{{Bl{Ih}}}}}}{{ADlc}ADl{{Aj{{Bl{Ih}}}}}}2{{AE`c}AE`{{Aj{{Bl{Ih}}}}}}{{AE`{Bl{Ih}}}AE`}>{{ADl{Bl{AHf}}}ADl}{{ABbACl}ABb}{{AEd{Ab{{A`{AFj}}}}}AEd}0{{ABbB`}ABb}0{{ADl{Bl{Id}}}ADl}{{ADlB`}ADl}{{AEdB`}AEd}1=3{{AEdc}AEd{{Aj{{Bl{AFn}}}}}}{{ABbc{Bl{ADf}}}ABb{{Aj{n}}}}{{ADl{Bl{AFn}}}ADl}{{ADlc}ADl{{Aj{{Bl{AFn}}}}}}{{AE`{Bl{AFn}}}AE`}{{AE`c}AE`{{Aj{{Bl{AFn}}}}}}{{ADl{Bl{ADd}}}ADl}{{AE`{Bl{ADd}}}AE`}{{ADlc}{{AB`{ADl}}}{{Bn{AG`}{{Bj{{AB`{AG`}}}}}}}}1{{ADlId}ADl}={{ADlIh}ADl}0>{{AEdAFl}AEd}{{ADlAFl}ADl}{{AE`AFl}AE`}{{ABbB`}ABb}{{ADlB`}ADl}01{ABbABb}{{{b{AAn}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AB`{AAn}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{{{b{AD`}}}B`}00{{{b{AD`}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEj}}}AEj}{{{b{Oh}}}Oh}{{{b{In}}}In}{{{b{AFb}}}AFb}{{{b{AEl}}}AEl}{{{b{AH`}}}AH`}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AHj}}}AHj}{{{b{Of}}}Of}{{{b{AGj}}}AGj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{ABf}}}ABf}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AI`}`{{b{b{c}}}AI`{}}``{{{b{Jh}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEj}{{}Oh}{{}AFb}{{}AH`}{{}AGd}{{}AGf}{{}AGh}{{}Of}{{}AGj}{{}AHn}{{}ABf}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{MdAd}}}}0{c{{Af{AEj}}}Jf}{c{{Af{Oh}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AFb}}}Jf}{c{{Af{AEl}}}Jf}{c{{Af{AH`}}}Jf}{c{{Af{AGd}}}Jf}{c{{Af{AGf}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AHj}}}Jf}{c{{Af{Of}}}Jf}{c{{Af{AGj}}}Jf}{c{{Af{AHl}}}Jf}{c{{Af{AHn}}}Jf}{c{{Af{ABf}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{Nb}}Ad}}}}{Ihf}00000000000000000{{{b{AEj}}{b{AEj}}}B`}{{{b{Oh}}{b{Oh}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AFb}}{b{AFb}}}B`}{{{b{AEl}}{b{AEl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AGd}}{b{AGd}}}B`}{{{b{AGf}}{b{AGf}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AHj}}{b{AHj}}}B`}{{{b{Of}}{b{Of}}}B`}{{{b{AGj}}{b{AGj}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{ABf}}{b{ABf}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Oh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{In}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AD`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AFb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AEl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AH`}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AGd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Of}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{ABf}}{b{CdKh}}}{{Af{fKj}}}}`{cc{}}0000{AElAFb}1111111111111`{{{b{AHl}}}Cn}{{{b{AIb}}{Dn{Bh}}{b{AEj}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}{{{b{AEj}}{b{Cdc}}}fMl}{{{b{Oh}}{b{Cdc}}}fMl}{{{b{In}}{b{Cdc}}}fMl}{{{b{AFb}}{b{Cdc}}}fMl}{{{b{AEl}}{b{Cdc}}}fMl}{{{b{AH`}}{b{Cdc}}}fMl}{{{b{AGd}}{b{Cdc}}}fMl}{{{b{AGf}}{b{Cdc}}}fMl}{{{b{AGh}}{b{Cdc}}}fMl}{{{b{AHj}}{b{Cdc}}}fMl}{{{b{Of}}{b{Cdc}}}fMl}{{{b{AGj}}{b{Cdc}}}fMl}{{{b{AHl}}{b{Cdc}}}fMl}{{{b{AHn}}{b{Cdc}}}fMl}{{{b{ABf}}{b{Cdc}}}fMl}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEl}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}{{{b{AHl}}}B`}{{{b{AH`}}{b{AEl}}}{{Af{fAd}}}}2``{Nhj}{Inj}{AIfj}{AHlj}````{AHlAHl}`{{{b{In}}}Cl}8{{InCl}In}`1{{{b{AH`}}}B`}{In};{ClIn}{AElAFb}{{{b{AD`}}AIh}{{Af{{Bl{AAn}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AI`}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AIb}}{Dn{Bh}}{b{Oh}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}`{{{b{AD`}}AIh}{{Af{AAnAd}}}}{{{b{AD`}}{Bl{Ih}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{AEj}}c}AfA@f}{{{b{Oh}}c}AfA@f}{{{b{In}}c}AfA@f}{{{b{AFb}}c}AfA@f}{{{b{AEl}}c}AfA@f}{{{b{AH`}}c}AfA@f}{{{b{AGd}}c}AfA@f}{{{b{AGf}}c}AfA@f}{{{b{AGh}}c}AfA@f}{{{b{AHj}}c}AfA@f}{{{b{Of}}c}AfA@f}{{{b{AGj}}c}AfA@f}{{{b{AHl}}c}AfA@f}{{{b{AHn}}c}AfA@f}{{{b{ABf}}c}AfA@f}{{{b{Jh}}c}AfA@f}`{{{b{AFb}}}B`}````{{{b{AFb}}}{{b{n}}}}`{Jh{{Af{AGlAd}}}}{{{b{AHl}}}{{Bl{AIj}}}}{bc{}}000000000000000{bMd}00`{{{b{AGf}}c}{{AIl{c}}}AIn}{{{b{AGj}}c}{{AJ`{c}}}AIn}{{{b{In}}Cl{Bl{{b{AHh}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJb}}}}}{{Bn{AJb}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000{AIj{{Af{AHlAd}}}}111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@nAA`}}}}00{bAAb}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AFbAEh}AFb}`{{AFb{Bl{n}}}AFb}{{{b{AGf}}AAnc}{{Af{fAd}}}AIn}{{{b{AGj}}AAnc}{{Af{fAd}}}AIn}```````````````````````````````````````````````````````","D":"GJh","p":[[1,"reference"],[5,"Private",3585],[1,"unit"],[5,"MetaNameSpace",5,3586],[6,"Expr",5,3587],[5,"StructNameSpace",5,3588],[5,"PlSmallStr",3589],[1,"slice"],[5,"Arc",3590],[6,"PolarsError",3591],[6,"Result",3592],[6,"Selector",5,3593],[10,"Into",3594],[5,"ArrayNameSpace",5,3595],[5,"ListNameSpace",5,3596],[1,"bool"],[10,"AsRef",3594],[10,"FunctionOutputField",5,3597],[5,"SpecialEq",5,3597],[6,"Column",3598],[17,"Output"],[6,"Option",3599],[10,"Fn",3600],[10,"Send",3601],[10,"Sync",3601],[0,"mut"],[6,"VisitRecursion",3602],[10,"FnMut",3600],[6,"FunctionExpr",5,3603],[1,"i64"],[6,"DataType",3604],[5,"SortOptions",3605],[5,"SortMultipleOptions",3605],[5,"FieldsMapper",5,3606],[5,"Field",3607],[10,"ColumnsUdf",5,3597],[10,"Any",3608],[6,"AggExpr",5,3587],[5,"Vec",3609],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1733,3610],[6,"Operator",5,3587],[10,"Clone",3611],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3597],[5,"UserDefinedFunction",5,3612],[10,"ColumnBinaryUdf",5,3597],[6,"CastOptions",3613],[5,"CategoricalNameSpace",5,3614],[5,"When",5,3615],[5,"Then",5,3615],[5,"ChainedWhen",5,3615],[5,"ChainedThen",5,3615],[6,"Excluded",5,3587],[6,"BooleanFunction",5,3616],[6,"CategoricalFunction",5,3617],[6,"TemporalFunction",5,3618],[6,"PowFunction",5,3619],[6,"StringFunction",5,3620],[6,"StructFunction",5,3621],[5,"DatetimeArgs",5,3622],[5,"DurationArgs",5,3622],[5,"RollingCovOptions",5,3623],[5,"StrptimeOptions",5,3623],[5,"JoinOptions",5,3623],[6,"WindowType",5,3623],[6,"WindowMapping",5,3623],[6,"NestedType",5,3623],[5,"UnpivotArgsDSL",5,3623],[17,"Item"],[10,"IntoIterator",3624],[1,"u8"],[10,"ExprEvalExtension",5,3625],[1,"usize"],[1,"f64"],[10,"IntoVec",3626],[5,"Duration",2907,3627],[6,"ClosedWindow",3628],[6,"TimeUnit",3629],[10,"BinaryUdfOutputField",5,3597],[10,"Deserializer",3630],[6,"DslPlan",2907,3631],[5,"Series",3632],[6,"NullBehavior",3633],[5,"DateLikeNameSpace",1755,3634],[10,"Sized",3601],[10,"ListNameSpaceExtension",5,3635],[5,"EWMOptions",3636],[6,"FillNullStrategy",3637],[5,"Formatter",3638],[5,"Error",3638],[10,"UdfSchema",5,3639],[1,"i8"],[1,"f32"],[1,"u32"],[1,"i16"],[1,"u16"],[6,"InequalityOperator",3640],[6,"ArrayFunction",3641],[6,"RangeFunction",3642],[6,"ListFunction",3643],[6,"BusinessFunction",3644],[6,"BinaryFunction",3645],[5,"String",3646],[5,"FunctionOptions",3647],[5,"Schema",3648],[6,"Context",3631],[10,"Hasher",3649],[6,"InterpolationMethod",3650],[10,"IntoListNameSpace",5,3635],[10,"Display",3638],[6,"ClosedInterval",3651],[5,"ExprNameNameSpace",5,3652],[10,"Literal",2907,3653],[10,"FnOnce",3600],[5,"SuperTypeOptions",3654],[5,"PythonUdfExpression",2290,3655],[5,"UnitVec",3656],[1,"tuple"],[6,"QuantileInterpolOptions",3657],[5,"RankOptions",2907,3658],[5,"RollingGroupOptions",2907,3659],[5,"RollingOptionsFixedWindow",3660],[5,"Float64Type",3661],[5,"ChunkedArray",3662],[10,"Copy",3601],[5,"RollingOptionsDynamicWindow",3663],[6,"SearchSortedSide",3664],[10,"Serializer",3665],[6,"IsSorted",3666],[5,"StringNameSpace",2352,3667],[6,"ListToStructWidthStrategy",3668],[5,"CompactString",3669],[6,"ToCompactStringError",3669],[5,"TypeId",3608],[6,"Roll",3670],[6,"NonExistent",3671],[6,"RollingFunction",2104,3672],[6,"RollingFunctionBy",2138,3673],[6,"TrigonometricFunction",2171,3674],[5,"DataFrame",3675],[8,"PolarsResult",3591],[5,"LazyFrame",2419],[10,"IntoParallelIterator",3676],[5,"UnionArgs",2907,3647],[5,"PythonFunction",2290,3655],[5,"PyAny",3677],[5,"Py",3678],[5,"PythonGetOutput",2290,3655],[1,"char"],[5,"Node",3679],[6,"IR",3680],[5,"Arena",3679],[6,"AExpr",3681],[5,"LazyGroupBy",2419],[5,"OptFlags",2419,3682],[5,"JoinBuilder",2419],[10,"AnonymousScan",2907,3683],[5,"ScanArgsAnonymous",2419,3684],[8,"SchemaRef",3685],[8,"IdxSize",3686],[5,"InProcessQuery",2419,3687],[8,"PlHashMap",3688],[5,"LazyCsvReader",2419,3689],[5,"ScanArgsIpc",2419,3690],[5,"LazyJsonLineReader",2419,3691],[5,"ScanArgsParquet",2419,3692],[10,"LazyFileListReader",2419,3693],[5,"CloudOptions",3694],[6,"JoinCoalesce",3695],[5,"DynamicGroupOptions",2907,3659],[6,"JoinType",2907,3695],[5,"Iter",3696],[5,"IterNames",3696],[5,"JoinArgs",2907,3695],[10,"IntoLazy",2419],[8,"AllowedOptimizations",2419,3682],[5,"Path",3697],[5,"PathBuf",3697],[6,"ScanSources",3698],[5,"RowIndex",3699],[8,"Schema",3685],[8,"PyObject",3678],[5,"CsvWriterOptions",2907,3700],[5,"IpcWriterOptions",2907,3701],[5,"JsonWriterOptions",2907,3702],[5,"ParquetWriteOptions",2907,3703],[5,"IRPlan",3680],[6,"UniqueKeepStrategy",3675],[6,"JoinValidation",2907,3695],[8,"NonZeroUsize",3704],[6,"CsvEncoding",3705],[6,"NullValues",3705],[6,"Tz",3706],[6,"RankMethod",2907,3658],[6,"LiteralValue",2907,3653],[5,"AnonymousScanOptions",2907,3647],[6,"Ordering",3707],[10,"PolarsTemporalGroupby",2907,3659],[6,"GroupsProxy",3708],[5,"Null",2907,3653],[5,"AnonymousScanArgs",2907,3683],[6,"AnyValue",3709],[5,"IpcWriter",3701],[10,"Write",3710],[5,"ParquetWriter",3711],[5,"NaiveDateTime",3712],[15,"Quantile",1621],[15,"Min",1621],[15,"Max",1621],[15,"IsBetween",2028],[15,"Any",2028],[15,"All",2028],[15,"SortBy",1631],[15,"Filter",1631],[15,"Cast",1631],[15,"Sort",1631],[15,"Gather",1631],[15,"RenameAlias",1631],[15,"Ternary",1631],[15,"Function",1631],[15,"Window",1631],[15,"AnonymousFunction",1631],[15,"Slice",1631],[15,"BinaryExpr",1631],[15,"QCut",2031],[15,"Entropy",2031],[15,"Log",2031],[15,"Hist",2031],[15,"Cut",2031],[15,"Correlation",2031],[15,"Round",2031],[15,"TopK",2031],[15,"TopKBy",2031],[15,"RoundSF",2031],[15,"EwmMeanBy",2031],[15,"Clip",2031],[15,"BackwardFill",2031],[15,"ForwardFill",2031],[15,"Random",2031],[15,"GatherEvery",2031],[15,"ValueCounts",2031],[15,"Rank",2031],[15,"EwmMean",2031],[15,"EwmStd",2031],[15,"EwmVar",2031],[15,"ReplaceStrict",2031],[15,"CumCount",2031],[15,"CumSum",2031],[15,"CumProd",2031],[15,"CumMin",2031],[15,"CumMax",2031],[15,"ConcatHorizontal",2076],[15,"ConcatVertical",2076],[15,"ExtractGroups",2076],[15,"JsonDecode",2076],[15,"PadStart",2076],[15,"PadEnd",2076],[15,"SplitExact",2076],[15,"Contains",2076],[15,"Find",2076],[15,"Replace",2076],[15,"DatetimeFunction",2096],[15,"GroupBy",3530],[15,"Union",3530],[15,"Sort",3530],[15,"Scan",3530],[15,"ExtContext",3530],[15,"DataFrameScan",3530],[15,"IR",3530],[15,"Select",3530],[15,"HStack",3530],[15,"MapFunction",3530],[15,"Cache",3530],[15,"Filter",3530],[15,"Distinct",3530],[15,"Slice",3530],[15,"Sink",3530],[15,"Join",3530],[15,"HConcat",3530],[15,"PythonScan",3530],[15,"Range",3582]],"r":[[8,3587],[22,3595],[31,3597],[33,3616],[38,3617],[39,3614],[43,3615],[44,3615],[48,3597],[50,3597],[69,3622],[79,3622],[89,3587],[94,3587],[95,3625],[96,3652],[104,3606],[105,3652],[115,3603],[116,3597],[122,3597],[137,3635],[153,3623],[165,3596],[166,3635],[181,3586],[200,3623],[207,3587],[218,3619],[230,3597],[241,3623],[250,3593],[262,3597],[270,3620],[277,3623],[279,3621],[280,3588],[288,3618],[290,3615],[310,3639],[313,3623],[316,3612],[321,3615],[324,3623],[325,3623],[369,3713],[373,3714],[380,3714],[383,3715],[387,3716],[389,3717],[404,3718],[406,3718],[412,3719],[413,3720],[415,3716],[417,3615],[490,3721],[497,3720],[500,3716],[588,3714],[589,3713],[590,3713],[591,3722],[592,3722],[593,3722],[602,3723],[604,3714],[608,3714],[613,3717],[614,3622],[615,3717],[616,3717],[766,3716],[768,3713],[769,3713],[770,3622],[865,3716],[907,3714],[910,3722],[982,3716],[1028,3713],[1064,3717],[1065,3717],[1119,3720],[1121,3720],[1131,3716],[1134,3716],[1138,3653],[1148,3715],[1159,3716],[1162,3716],[1169,3720],[1173,3714],[1174,3720],[1177,3714],[1178,3720],[1186,3720],[1190,3714],[1217,3720],[1219,3716],[1232,3723],[1239,3716],[1242,3720],[1246,3714],[1250,3724],[1263,3723],[1264,3723],[1341,3723],[1349,3716],[1355,3720],[1359,3714],[1366,3615],[1369,3717],[1538,3716],[1590,3615],[1733,3610],[1754,3614],[1755,3634],[1828,3616],[1832,3617],[1879,3603],[1941,3619],[1980,3620],[1988,3621],[1993,3618],[2023,3603],[2024,3603],[2025,3603],[2026,3603],[2027,3603],[2098,3617],[2102,3619],[2108,3672],[2142,3673],[2186,3674],[2215,3622],[2216,3622],[2217,3713],[2218,3714],[2220,3714],[2221,3715],[2222,3717],[2223,3718],[2224,3718],[2225,3719],[2226,3720],[2227,3720],[2228,3714],[2229,3713],[2231,3713],[2233,3722],[2236,3722],[2237,3722],[2238,3723],[2239,3714],[2240,3714],[2241,3717],[2242,3717],[2243,3622],[2244,3717],[2245,3717],[2248,3713],[2249,3713],[2250,3622],[2251,3714],[2252,3722],[2255,3713],[2256,3717],[2257,3717],[2258,3720],[2259,3720],[2260,3715],[2261,3720],[2262,3720],[2263,3720],[2267,3720],[2272,3720],[2273,3723],[2274,3720],[2275,3714],[2276,3724],[2277,3723],[2278,3723],[2281,3723],[2282,3720],[2283,3717],[2284,3717],[2290,3655],[2291,3655],[2292,3655],[2293,3655],[2294,3655],[2352,3667],[2413,3612],[2419,3682],[2427,3687],[2430,3689],[2431,3693],[2434,3691],[2436,3682],[2443,3684],[2444,3690],[2445,3692],[2907,3683],[2908,3683],[2909,3647],[2917,3700],[2924,3631],[2925,3627],[2927,3659],[2945,3701],[2947,3695],[2948,3695],[2949,3695],[2950,3702],[2952,3653],[2953,3653],[2959,3653],[2960,3653],[2966,3703],[2967,3659],[2970,3658],[2971,3658],[2973,3659],[2989,3647],[3387,3725]],"b":[[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[623,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[773,"impl-Expr"],[774,"impl-PartialEq-for-Expr"],[777,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[778,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[876,"impl-Debug-for-Expr"],[877,"impl-Display-for-Expr"],[879,"impl-Debug-for-Operator"],[880,"impl-Display-for-Operator"],[882,"impl-Debug-for-BooleanFunction"],[883,"impl-Display-for-BooleanFunction"],[884,"impl-Display-for-CategoricalFunction"],[885,"impl-Debug-for-CategoricalFunction"],[886,"impl-Display-for-TemporalFunction"],[887,"impl-Debug-for-TemporalFunction"],[888,"impl-Debug-for-PowFunction"],[889,"impl-Display-for-PowFunction"],[890,"impl-Debug-for-StringFunction"],[891,"impl-Display-for-StringFunction"],[892,"impl-Display-for-StructFunction"],[893,"impl-Debug-for-StructFunction"],[894,"impl-Debug-for-FunctionExpr"],[895,"impl-Display-for-FunctionExpr"],[924,"impl-From%3Cu64%3E-for-Expr"],[925,"impl-From%3Ci8%3E-for-Expr"],[926,"impl-From%3Cf32%3E-for-Expr"],[927,"impl-From%3Cbool%3E-for-Expr"],[928,"impl-From%3Cu32%3E-for-Expr"],[930,"impl-From%3Ci32%3E-for-Expr"],[931,"impl-From%3Cf64%3E-for-Expr"],[932,"impl-From%3C%26str%3E-for-Expr"],[933,"impl-From%3Ci64%3E-for-Expr"],[934,"impl-From%3Cu8%3E-for-Expr"],[935,"impl-From%3Ci16%3E-for-Expr"],[936,"impl-From%3CAggExpr%3E-for-Expr"],[937,"impl-From%3Cu16%3E-for-Expr"],[941,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[942,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[943,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[945,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[946,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[947,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[948,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[949,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[950,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[951,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[952,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[959,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[960,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[961,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[962,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[974,"impl-From%3CExpr%3E-for-Selector"],[976,"impl-From%3CPlSmallStr%3E-for-Selector"],[977,"impl-From%3CString%3E-for-Selector"],[978,"impl-From%3C%26str%3E-for-Selector"],[1002,"impl-Expr"],[1003,"impl-Hash-for-Expr"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1303,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1304,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1305,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[2124,"impl-Display-for-RollingFunction"],[2125,"impl-Debug-for-RollingFunction"],[2157,"impl-Display-for-RollingFunctionBy"],[2158,"impl-Debug-for-RollingFunctionBy"],[2201,"impl-Display-for-TrigonometricFunction"],[2202,"impl-Debug-for-TrigonometricFunction"],[2468,"impl-OptFlags"],[2469,"impl-Flags-for-OptFlags"],[2606,"impl-Binary-for-OptFlags"],[2607,"impl-UpperHex-for-OptFlags"],[2608,"impl-LowerHex-for-OptFlags"],[2609,"impl-Debug-for-OptFlags"],[2610,"impl-Octal-for-OptFlags"],[2615,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2616,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2625,"impl-OptFlags"],[2626,"impl-Flags-for-OptFlags"],[2865,"impl-LazyFileListReader-for-LazyCsvReader"],[2866,"impl-LazyCsvReader"],[2867,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2868,"impl-LazyJsonLineReader"],[2884,"impl-LazyCsvReader"],[2885,"impl-LazyFileListReader-for-LazyCsvReader"],[2886,"impl-LazyJsonLineReader"],[2887,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3250,"impl-Display-for-Duration"],[3251,"impl-Debug-for-Duration"],[3254,"impl-Debug-for-JoinType"],[3255,"impl-Display-for-JoinType"],[3256,"impl-Debug-for-JoinValidation"],[3257,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0KCgEEABIAGAAPACkAAgAuAAIAMgAAADQAEQBHAAgAUQAHAFoAAwBgAAAAYgAZAH0AGwCaAAMAnwAGAKcADgC3ABUAzgAEANQAJwD9AAkACAEQABoBBwAkARgAPgEDAEMBAABFAScAbgEBAHQBAAB3AQEAewEAAIEBAACDAQAAjgEAAJEBAACYAQEAmwEBAKABAACjAUUA6wEAAO0BAADvAQEA9QEAAPwBUABQAgAAagINAHkCXADYAgAA2gIhAP0CAAD/AgAABQMAAAcDEwAcAzIAVwMAAFoDAQBgAwAAZgMAAGkDIgCNAwAAnQMEAKMDBwCtAwMAsgMHAMADAwDKAwAAzwMAANEDAgDVAwAA1wMAANwDAQDhAwUA6gMAAOwDEQABBAEABAQAAAYEIQBPBAIAUwQBAFcEAABpBAAAcQQAAH4EAACBBAUAigQAAI0EAACdBAAAoAQCAKgEAgCsBAMAtQQBALkEAgC+BAAAwAQBAMYEAADNBAAAzwQBANYEAADYBAAA4AQBAOYEAADoBAAA6gQAAO8EAgAJBQUAEAUZADMFAAA6BQAAQQUAAEYFAABIBQEASwUAAFEFAQBXBQAAWQUAAFsFAgBiBRsAfwUJAI0FQwDTBQAA1QUuAA8GAAARBgAAEwYjADoGAQA/BgAATAYAAFAGAQBVBhMAawYAAG0GAABvBgEAcgYBAHUGBgB9BkgAxwYDAMwGAgDRBgIA1wYDAN8GAQDoBgIA7gYAAPAGAAD9BgAADAcDABQHOgFQCAEAUwgcAHEIAQB0CCcAnQgBAKAIBwCsCAAAuggAAMcIAQDOCAEA2QgCAN0IAwDmCAMA7ggHAPcIGwAVCQAAFwkEAB8JEQAyCQMAOQkCAD8JAABECQIASQkBAGkJAwB8CQMAgwkBAIwJAgCQCQkAngkAAKYJAACpCRQAvwkBAMQJGgDjCQEA5wkAAOwJAADwCRgADgoCABIKBwAqCgAALAoBAC8KBAA4CgEAQwoAAEkKAgBRCgEAVAoMAG8KAAB3CgAAeQoBAH4KAQCBCgAAgwoAAIcKAACMCgMAkQoFAJoKAQCgCgMArAoDALEKAQC2CgIAugoAAL0KAADGCgAAywoBANUKAQDYCggA4goeAAMLAAAFCwAACAsBAAsLCQAWCwAAGAsBACILAQArCwEAMgsAADQLAAA2CwAARgsAAEgLAABTCwEAWgsHAGULAABoCwEAawsAAG0LAwBzCwAAdgsAAHoLAwCCCwAAhAsGAI4LAgCSCwAAlQsKAKELAgCmCwAAqAsAAK4LEwDFC1oAJAyLALEMEwDKDAAA2AwAANoMEQDtDAAA8AwRABQNAgAYDQEAGw0AAB4NAwAlDQUALA0BADANAAAzDQIANw0BADsNAAA9DQEAQg0VAFkNdQDQDQQA1g0rAA=="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::frame::column"],[305,"polars_core::chunked_array::ops::sort::options"],[306,"polars_core::frame"],[307,"dyn_clone::sealed"],[308,"polars_utils::pl_str"],[309,"polars_ops::frame::join::hash_join"],[310,"polars_ops::frame::join::args"],[311,"polars_ops::frame::join::cross_join"],[312,"core::fmt"],[313,"core::convert"],[314,"core::hash"],[315,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[316,"polars_arrow::array::primitive"],[317,"alloc::string"],[318,"core::result"],[319,"compact_str"],[320,"core::any"],[321,"polars_ops::series::ops::arg_min_max"],[322,"polars_ops::series::ops"],[323,"polars_core::chunked_array::ops::search_sorted"],[324,"polars_ops::series::ops::various"],[325,"polars_ops::frame::join::general"],[326,"polars_ops::series::ops::clip"],[327,"polars_ops::series::ops::horizontal"],[328,"polars_ops::series::ops::index"],[329,"polars_ops::series::ops::negate"],[330,"polars_ops::series::ops::not"],[331,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`254325432543254322255544433325443322543Ej3654F`00044765147656514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222``2222Gh0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{cc{}}{DlDf}111{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}={{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[8,"UInt32Chunked",293],[10,"AsList",25],[8,"ListChunked",293],[10,"ListNameSpaceImpl",25,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[6,"Column",304],[1,"i64"],[1,"usize"],[5,"SortOptions",305],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",306],[5,"Private",307],[1,"unit"],[5,"PlSmallStr",308],[10,"JoinDispatch",80,309],[5,"JoinArgs",80,310],[0,"mut"],[6,"JoinCoalesce",80,310],[6,"JoinType",80,310],[6,"JoinValidation",80,310],[10,"CrossJoin",80,311],[1,"tuple"],[8,"ChunkJoinOptIds",80,310],[5,"Formatter",312],[8,"Result",312],[10,"DataFrameJoinOps",80],[10,"Into",313],[10,"Hasher",314],[10,"SeriesJoin",80,315],[8,"InnerJoinIds",80,310],[5,"PrimitiveArray",316],[8,"LeftJoinIds",80,310],[5,"String",317],[6,"Result",318],[5,"CompactString",319],[6,"ToCompactStringError",319],[5,"TypeId",320],[10,"ArgAgg",240,321],[10,"SeriesSealed",240,322],[6,"SearchSortedSide",240,323],[10,"SeriesMethods",240,324],[5,"Error",312]],"r":[[4,292],[5,294],[6,295],[26,302],[80,310],[81,310],[84,311],[88,310],[89,310],[90,310],[91,309],[93,310],[94,310],[97,310],[103,315],[108,325],[111,325],[114,325],[144,309],[238,80],[239,76],[241,321],[244,323],[245,324],[246,322],[253,326],[254,326],[255,326],[259,327],[260,328],[276,328],[279,327],[280,327],[281,327],[282,329],[283,330],[284,331],[285,327]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAABAM8AAADRACAA8wAFAPsAAgABAQ8AEgEBABgBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[222,"polars_utils::contention_pool"],[237,"polars_utils::cpuid"],[239,"polars_utils::fixedringbuffer"],[262,"polars_utils::float"],[268,"polars_utils::floor_divmod"],[270,"polars_utils::functions"],[274,"polars_utils::hashing"],[307,"polars_utils::idx_vec"],[352,"polars_utils::index"],[416,"polars_utils::io"],[419,"polars_utils::itertools"],[429,"polars_utils::itertools::enumerate_idx"],[455,"polars_utils::mem"],[460,"polars_utils::min_max"],[467,"polars_utils::mmap"],[566,"polars_utils::nulls"],[571,"polars_utils::ord"],[573,"polars_utils::partitioned"],[592,"polars_utils::pl_str"],[651,"polars_utils::priority"],[675,"polars_utils::slice"],[689,"polars_utils::sort"],[691,"polars_utils::sync"],[719,"polars_utils::sys"],[733,"polars_utils::total_ord"],[784,"polars_utils::unwrap"],[786,"polars_utils::vec"],[800,"num_traits"],[801,"core::cmp"],[802,"core::marker"],[803,"core::fmt"],[804,"core::clone"],[805,"core::result"],[806,"serde::de"],[807,"core::option"],[808,"core::hash"],[809,"core::default"],[810,"core::ops::function"],[811,"serde::ser"],[812,"core::any"],[813,"core::borrow"],[814,"alloc::sync"],[815,"alloc::vec"],[816,"core::convert"],[817,"core::ops::range"],[818,"core::iter::traits::collect"],[819,"core::slice::iter"],[820,"polars_error"],[821,"std::path"],[822,"std::io::error"],[823,"std::fs"],[824,"core::iter::traits::iterator"],[825,"core::ops::arith"],[826,"num_traits::cast"],[827,"num_traits::identities"],[828,"core::iter::traits::exact_size"],[829,"core::iter::traits::double_ended"],[830,"memmap2"],[831,"memmap2::advice"],[832,"polars_utils::mmap::private"],[833,"bytes::bytes"],[834,"std::io"],[835,"hashbrown::map"],[836,"std::ffi::os_str"],[837,"alloc::string"],[838,"compact_str"],[839,"alloc::borrow"],[840,"alloc::boxed"],[841,"core::mem::maybe_uninit"],[842,"core::slice::index"],[843,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000`````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf111111111`1111111111111``Gj000000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`00000000000000000000000000000000000000000000000000000000`O`0000000000000000000000`````ObOf0Oj`Ol0On0```A@d00000000000000000000000000``A@f00000000000AAf````0`A@l0``000000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{{{Al{Dh}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{Enc{}}{c{{El{c}}}{}}{cc{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}6{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}987{{{Al{Ah{Fd{c}}}}}B`{}}{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{Ah{Gj{c}}}}}B`{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}7{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{{{Fn{c}}}{{Gj{c}}}{}}{cc{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{cc{}}{HfHj}1{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:0{{{Al{Kl}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{AhKj}}}B`}{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}00{KlKn}1{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}{{{Al{Ml}}}{{Al{N`}}}}0{Al{{Al{c}}}{}}1{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{N`}}Eh}}{{Al{Al{c}}}Bl{}}00{{{Al{Ml}}{Al{AhBn}}}C`}0{{{Al{Nb}}}Ml}{cc{}}{NbMl}{{{Al{N`}}}Ml}{NdMl}{cMl{{H`{}{{Gn{Nf}}}}}}{cMl{{H`{}{{Gn{{Nh{N`}}}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{{Al{Nf}}}}}}}}{cMl{{H`{}{{Gn{{Al{N`}}}}}}}}{cMl{{H`{}{{Gn{Ml}}}}}}{cMl{{H`{}{{Gn{Nb}}}}}}{cMl{{H`{}{{Gn{{Nj{N`}}}}}}}}99:{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNb}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNb}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NdNl}}}}{AlDd}{{{Al{AhMl}}Nf}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{N`}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}00{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{{}{{A@d{c}}}{}}{cc{}}1{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}55{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}><;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",800],[10,"PartialOrd",801],[10,"Copy",802],[10,"Debug",803],[10,"Send",802],[10,"Sync",802],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",804],[6,"Ordering",801],[6,"Result",805],[10,"Deserializer",806],[10,"Deserialize",806],[1,"bool"],[5,"Formatter",803],[8,"Result",803],[1,"array"],[6,"Option",807],[10,"Hasher",808],[10,"Default",809],[17,"Output"],[10,"FnOnce",810],[10,"Serializer",811],[10,"Serialize",811],[10,"FnMut",810],[5,"TypeId",812],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",801],[5,"FastFixedCache",161],[10,"Hash",808],[10,"Eq",801],[5,"FastCachedFunc",161],[10,"Sized",802],[10,"Borrow",813],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",222],[5,"FixedRingBuffer",239],[1,"tuple"],[10,"IsFloat",262],[10,"FloorDivMod",268],[5,"Arc",814],[5,"Vec",815],[10,"AsRef",816],[5,"Range",817],[5,"BytesHash",274],[10,"DirtyHash",274],[1,"u8"],[5,"UnitVec",307],[10,"PartialEq",801],[17,"Item"],[10,"IntoIterator",818],[5,"Iter",819],[5,"IterMut",819],[8,"IdxSize",352],[8,"PolarsResult",820],[5,"NullableIdxSize",352],[5,"ChunkId",352],[10,"Indexable",352],[10,"IsNull",566],[10,"Bounded",352],[10,"NullCount",352],[10,"ToIdx",352],[5,"Path",821],[5,"Error",822],[6,"PolarsError",820],[5,"File",823],[10,"Itertools",419],[5,"EnumerateIdx",429],[10,"Iterator",824],[10,"Add",825],[10,"FromPrimitive",826],[10,"AddAssign",825],[10,"One",827],[10,"ExactSizeIterator",828],[10,"Zero",827],[10,"DoubleEndedIterator",829],[10,"MinMax",460],[5,"Mmap",467,830],[6,"Advice",831],[5,"MMapSemaphore",467],[5,"MemSlice",467,832],[5,"MemReader",467],[5,"Error",803],[5,"Bytes",833],[8,"Result",822],[10,"Read",834],[5,"MmapMut",830],[10,"MmapAsRawDesc",830],[5,"MmapOptions",830],[5,"RemapOptions",830],[6,"SeekFrom",834],[17,"Inner"],[5,"PartitionedHashMap",573],[5,"HashMap",835],[5,"RawEntryBuilder",835],[5,"RawEntryBuilderMut",835],[5,"PlSmallStr",592],[5,"OsStr",836],[1,"str"],[5,"String",837],[5,"CompactString",838],[1,"char"],[6,"Cow",839],[5,"Box",840],[6,"ToCompactStringError",838],[5,"Arguments",803],[5,"Priority",651],[10,"Slice2Uninit",675],[20,"MaybeUninit",841],[10,"GetSaferUnchecked",675],[10,"SliceIndex",842],[10,"SortedSlice",675],[10,"Extrema",675],[10,"SliceAble",675],[10,"TotalOrd",733],[5,"ThreadPool",843],[5,"SyncPtr",691],[5,"MemInfo",719],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",733],[10,"TotalEq",733],[10,"TotalHash",733],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",733],[10,"UnwrapUncheckedRelease",784],[17,"ItemIn"],[10,"ConvertVec",786],[10,"ResizeFaster",786],[10,"IntoRawParts",786],[10,"PushUnchecked",786],[10,"CapacityByFactor",786],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,352],[1,352],[470,832],[471,830]],"b":[[332,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[334,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[595,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[598,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[618,"impl-Display-for-PlSmallStr"],[619,"impl-Debug-for-PlSmallStr"],[620,"impl-From%3C%26String%3E-for-PlSmallStr"],[622,"impl-From%3CString%3E-for-PlSmallStr"],[623,"impl-From%3C%26str%3E-for-PlSmallStr"],[624,"impl-From%3CCompactString%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[627,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[628,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[629,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[630,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[631,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[632,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKMCTwAAAAgACgBbAGgAAABqAAEAbQACAHIAFQCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAwDTAAAA2AAMAOYAAQDpAAYA8gAGAPsAAAD9AAMAAwEDAAgBCgAUAQ8AJQECACkBCwA2ARcATwECAFMBBgBbASYAgwEAAIUBAACHAQQAjgEVAKUBAACnAQQArwEJALoBAAC8AQIAwAEHAM0BCADbASYABQIAAAkCAgAQAgMAGwIDACACAgAkAgAAJgIBACkCDAA3AgQAPgIFAEUCAgBJAgkAVAIZAG8CDwCAAgsAjQIOAJ0CAACfAgoArAIEALICAAC1AgYAvQIGAMUCAgDJAgAAywIFANICBADZAgAA2wIDAOMCAwDpAgwA9wIDAPwCFQATAwQAGQMCAB0DAAAfAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[391997,195046,51106,81406,9273,3376,8569,26333]}